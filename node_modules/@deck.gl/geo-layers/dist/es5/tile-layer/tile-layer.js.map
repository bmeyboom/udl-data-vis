{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["defaultProps","data","dataComparator","urlType","equals","renderSubLayers","type","value","props","GeoJsonLayer","compare","getTileData","optional","onViewportLoad","onTileLoad","tile","onTileUnload","onTileError","err","console","error","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","STRATEGY_DEFAULT","zRange","maxRequests","zoomOffset","TileLayer","state","tileset","isLoaded","finalize","changeFlags","somethingChanged","createTileCache","dataChanged","updateTriggersChanged","all","Tileset2D","_getTilesetOptions","bind","_onTileLoad","_onTileError","_onTileUnload","setState","propsChanged","setOptions","tiles","forEach","layers","_updateTileset","Number","isFinite","modelMatrix","frameNumber","update","context","viewport","loadingStateChanged","tilesetChanged","_onViewportLoad","selectedTiles","layer","getCurrentLayer","isVisible","setNeedsUpdate","fetch","signal","url","propName","info","sourceLayer","updateAutoHighlight","visible","map","highlightedObjectIndex","getHighlightedObjectIndex","id","x","y","z","_offset","Boolean","clone","every","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tileset: null,\n      isLoaded: false\n    };\n  }\n\n  finalizeState() {\n    this.state.tileset?.finalize();\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      if (tileset) {\n        tileset.finalize();\n      }\n      tileset = new Tileset2D({\n        ...this._getTilesetOptions(props),\n        getTileData: this.getTileData.bind(this),\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this)\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(this._getTilesetOptions(props));\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _getTilesetOptions(props) {\n    const maxZoom = Number.isFinite(this.state.maxZoom) ? this.state.maxZoom : props.maxZoom;\n    const minZoom = Number.isFinite(this.state.minZoom) ? this.state.minZoom : props.minZoom;\n    const {\n      tileSize,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset\n    } = props;\n\n    return {\n      maxCacheSize,\n      maxCacheByteSize,\n      maxZoom,\n      minZoom,\n      tileSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset\n    };\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad() {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles);\n    }\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {propName: 'data', layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  _updateAutoHighlight(info) {\n    if (info.sourceLayer) {\n      info.sourceLayer.updateAutoHighlight(info);\n    }\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers({\n          ...this.props,\n          id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n          data: tile.data,\n          visible,\n          _offset: 0,\n          tile\n        });\n        tile.layers = flatten(layers, Boolean).map(layer =>\n          layer.clone({\n            tile,\n            highlightedObjectIndex\n          })\n        );\n      } else if (\n        tile.layers[0] &&\n        tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex\n      ) {\n        tile.layers = tile.layers.map(layer => layer.clone({highlightedObjectIndex}));\n      }\n      return tile.layers;\n    });\n  }\n\n  filterSubLayer({layer}) {\n    return layer.props.tile.isVisible;\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}