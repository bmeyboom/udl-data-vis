{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["log","Matrix4","MVTWorkerLoader","binaryToGeojson","COORDINATE_SYSTEM","_findIndexBinary","ClipExtension","TileLayer","getURLFromTemplate","isURLTemplate","transform","GeoJsonLayer","WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","loaders","binary","MVTLayer","initializeState","setState","data","tileJSON","isLoaded","state","tileset","updateState","props","oldProps","context","changeFlags","dataChanged","_updateTileData","_setWGS84PropertyForTiles","minZoom","maxZoom","onDataLoad","fetch","propName","layer","error","raiseError","tilejson","tiles","Number","isFinite","minzoom","maxzoom","renderLayers","getTileData","tile","url","Promise","reject","loadOptions","getLoadOptions","signal","x","y","z","mimeType","mvt","coordinates","viewport","resolution","tileIndex","gis","format","renderSubLayers","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","scale","autoHighlight","coordinateOrigin","coordinateSystem","CARTESIAN","extensions","subLayers","warn","_updateAutoHighlight","info","hoveredFeatureId","hoveredFeature","object","newHoveredFeatureId","getFeatureUniqueId","getPickingInfo","params","isWGS84","index","sourceLayer","globalFeatureId","transformTileCoordsToWGS84","bbox","getHighlightedObjectIndex","isFeatureIdPresent","isFeatureIdDefined","featureIdToHighlight","Array","isArray","findIndex","feature","featureIdIndex","geometries","geometry","featureIds","undefined","_pickObjects","maxObjects","deck","width","height","layerIds","id","pickObjects","getRenderedFeatures","maxFeatures","features","featureCache","Set","renderedFeatures","f","featureId","push","has","add","selectedTiles","forEach","hasOwnProperty","Object","defineProperty","get","content","length","_contentWGS84","map","properties","wgs84Geom","layerName"],"mappings":"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","sourcesContent":["import {log} from '@deck.gl/core';\nimport {Matrix4} from 'math.gl';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {_findIndexBinary} from '@deck.gl/layers';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport {transform} from './coordinate-transform';\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: false\n};\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    this.setState({\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData();\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n  }\n\n  /* eslint-disable complexity */\n  async _updateTileData() {\n    let {data, minZoom, maxZoom} = this.props;\n    let tileJSON = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n\n      if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > minZoom) {\n        minZoom = tileJSON.minzoom;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || tileJSON.maxzoom < maxZoom)\n      ) {\n        maxZoom = tileJSON.maxzoom;\n      }\n    }\n\n    this.setState({data, tileJSON, minZoom, maxZoom});\n  }\n  /* eslint-disable complexity */\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {binary, fetch} = this.props;\n    const {signal, x, y, z} = tile;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x, y, z}\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.props.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  _updateAutoHighlight(info) {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n    }\n\n    if (hoveredFeatureId !== newHoveredFeatureId && newHoveredFeatureId !== -1) {\n      this.setState({hoveredFeatureId: newHoveredFeatureId});\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = this.context.viewport.resolution;\n\n    if (this.props.binary && info.index !== -1) {\n      const {data} = params.sourceLayer.props;\n      info.object = binaryToGeojson(data, {globalFeatureId: info.index});\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(info.object, info.tile.bbox, this.context.viewport);\n    }\n\n    return info;\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId, binary} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(\n        feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n      );\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      const featureIdIndex = _findIndexBinary(data, uniqueIdProperty, featureIdToHighlight);\n\n      const geometries = ['points', 'lines', 'polygons'];\n      for (const geometry of geometries) {\n        const index = data[geometry] && data[geometry].featureIds.value[featureIdIndex];\n        if (index !== undefined) return index;\n      }\n    }\n\n    return -1;\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === -1) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _setWGS84PropertyForTiles() {\n    const propName = 'dataInWGS84';\n    const {tileset} = this.state;\n\n    tileset.selectedTiles.forEach(tile => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.props.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            if (tile._contentWGS84 === undefined) {\n              // Create a cache to transform only once\n              const content = this.props.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, tile.bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(object, bbox, viewport) {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature;\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}