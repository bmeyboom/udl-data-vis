{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["CompositeLayer","_flatten","flatten","GeoJsonLayer","Tileset2D","STRATEGY_DEFAULT","urlType","getURLFromTemplate","defaultProps","data","dataComparator","equals","renderSubLayers","type","value","props","compare","getTileData","optional","onViewportLoad","onTileLoad","tile","onTileUnload","onTileError","err","console","error","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","zRange","maxRequests","zoomOffset","TileLayer","initializeState","state","tileset","isLoaded","finalizeState","finalize","selectedTiles","every","layers","layer","shouldUpdateState","changeFlags","somethingChanged","updateState","createTileCache","dataChanged","updateTriggersChanged","all","_getTilesetOptions","bind","_onTileLoad","_onTileError","_onTileUnload","setState","propsChanged","setOptions","tiles","forEach","_updateTileset","Number","isFinite","modelMatrix","frameNumber","update","context","viewport","loadingStateChanged","tilesetChanged","_onViewportLoad","getCurrentLayer","isVisible","setNeedsUpdate","fetch","signal","url","propName","getHighlightedObjectIndex","getPickingInfo","info","sourceLayer","_updateAutoHighlight","updateAutoHighlight","renderLayers","visible","map","highlightedObjectIndex","id","x","y","z","_offset","Boolean","clone","filterSubLayer","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tileset: null,\n      isLoaded: false\n    };\n  }\n\n  finalizeState() {\n    this.state.tileset?.finalize();\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      if (tileset) {\n        tileset.finalize();\n      }\n      tileset = new Tileset2D({\n        ...this._getTilesetOptions(props),\n        getTileData: this.getTileData.bind(this),\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this)\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(this._getTilesetOptions(props));\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _getTilesetOptions(props) {\n    const maxZoom = Number.isFinite(this.state.maxZoom) ? this.state.maxZoom : props.maxZoom;\n    const minZoom = Number.isFinite(this.state.minZoom) ? this.state.minZoom : props.minZoom;\n    const {\n      tileSize,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset\n    } = props;\n\n    return {\n      maxCacheSize,\n      maxCacheByteSize,\n      maxZoom,\n      minZoom,\n      tileSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset\n    };\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad() {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles);\n    }\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {propName: 'data', layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  _updateAutoHighlight(info) {\n    if (info.sourceLayer) {\n      info.sourceLayer.updateAutoHighlight(info);\n    }\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers({\n          ...this.props,\n          id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n          data: tile.data,\n          visible,\n          _offset: 0,\n          tile\n        });\n        tile.layers = flatten(layers, Boolean).map(layer =>\n          layer.clone({\n            tile,\n            highlightedObjectIndex\n          })\n        );\n      } else if (\n        tile.layers[0] &&\n        tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex\n      ) {\n        tile.layers = tile.layers.map(layer => layer.clone({highlightedObjectIndex}));\n      }\n      return tile.layers;\n    });\n  }\n\n  filterSubLayer({layer}) {\n    return layer.props.tile.isVisible;\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}