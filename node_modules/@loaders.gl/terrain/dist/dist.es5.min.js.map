{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/process/browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/utils/hi-res-timestamp.js","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:///(webpack)/buildin/global.js","webpack:///../schema/src/lib/schema/index.ts","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///../schema/src/index.ts","webpack:///../schema/src/lib/table/row-table-batch-aggregator.ts","webpack:///../schema/src/lib/utils/row-utils.ts","webpack:///../schema/src/lib/table/columnar-table-batch-aggregator.ts","webpack:///./src/lib/helpers/skirt.js","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///../worker-utils/src/index.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-body.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../worker-utils/src/lib/async-queue/async-queue.ts","webpack:///../loader-utils/src/lib/binary-utils/get-first-characters.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/memory-copy-utils.ts","webpack:///./src/lib/utils/version.js","webpack:///./src/bundle.ts","webpack:///./src/index.ts","webpack:///./src/lib/parse-quantized-mesh.js","webpack:///../schema/src/lib/table/table-batch-builder.ts","webpack:///../schema/src/lib/table/base-table-batch-aggregator.ts","webpack:///../schema/src/category/mesh/mesh-utils.ts","webpack:///../schema/src/lib/schema/impl/schema.ts","webpack:///../schema/src/lib/utils/assert.ts","webpack:///../schema/src/lib/schema/impl/field.ts","webpack:///../schema/src/lib/schema/impl/type.ts","webpack:///../schema/src/lib/schema/impl/enum.ts","webpack:///../schema/src/lib/schema-utils/deduce-table-schema.ts","webpack:///../schema/src/lib/schema-utils/get-type-info.ts","webpack:///../schema/src/lib/schema-utils/type-utils.ts","webpack:///../schema/src/lib/utils/async-queue.ts","webpack:///./src/lib/decode-quantized-mesh.js","webpack:///../loader-utils/src/index.ts","webpack:///../loader-utils/src/lib/env-utils/globals.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/create-loader-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-api/process-on-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/remove-nontransferable-options.ts","webpack:///../worker-utils/src/lib/worker-api/create-worker.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///../worker-utils/src/lib/process-utils/child-process-proxy.ts","webpack:///../worker-utils/src/lib/process-utils/process-utils.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../loader-utils/src/lib/parser-utils/parse-json.ts","webpack:///../loader-utils/src/lib/binary-utils/binary-copy-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/encode-utils.ts","webpack:///../loader-utils/src/lib/iterators/text-iterators.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///../loader-utils/src/lib/request-utils/request-scheduler.ts","webpack:///../loader-utils/src/lib/path-utils/path.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///../loader-utils/src/lib/node/fs.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/util.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/support/isBufferBrowser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///../loader-utils/src/json-loader.ts","webpack:///./src/lib/parse-terrain.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@mapbox/martini/index.js","webpack:///./src/lib/delatin/index.js","webpack:///./src/terrain-loader.ts","webpack:///./src/quantized-mesh-loader.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stat.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stats.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","condition","message","Error","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getHiResTimestamp","timestamp","window","performance","now","hrtime","timeParts","Date","g","Function","globals","self","global","document","self_","window_","global_","document_","isBrowser","String","isWorker","importScripts","isMobile","orientation","matches","exec","nodeVersion","parseFloat","NOOP","WorkerThread","props","source","url","assert","onMessage","onError","error","console","log","worker","_createBrowserWorker","Worker","terminate","terminated","Boolean","data","transferList","getTransferList","postMessage","event","lineno","colno","_loadableURL","getLoadableWorkerURL","onmessage","onerror","_getErrorFromErrorEvent","onmessageerror","isTransferable","ArrayBuffer","MessagePort","ImageBitmap","OffscreenCanvas","recursive","transfers","transfersSet","Set","add","buffer","isView","undefined","from","RowTableBatchAggregator","schema","options","isArray","_headers","index","row","cursor","Number","isFinite","shape","rowObject","convertToObjectRow","addObjectRow","arrayRows","rowArray","convertToArrayRow","addArrayRow","objectRows","rows","slice","batchType","arrayRow","headers","objectRow","ColumnarTableBatchAggregator","_reallocateColumns","fieldName","columns","_pruneColumns","field","allocated","ArrayType","type","Float32Array","oldColumn","typedArray","set","entries","columnName","column","attributes","triangles","skirtHeight","outsideIndices","outsideEdges","getOutsideEdgesFromIndices","POSITION","getOutsideEdgesFromTriangles","newPosition","constructor","newTexcoord0","TEXCOORD_0","newTriangles","edge","updateAttributesForNewEdge","edgeIndex","concatenateTypedArrays","resultTriangles","edges","sort","a","b","Math","min","max","indices","position","westIndices","eastIndices","southIndices","northIndices","indexGroup","positionsLength","vertex1Offset","vertex2Offset","subarray","triangle1Offset","NullWorker","id","VERSION","null","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","result","Promise","resolve","reject","payload","DEFAULT_PROPS","maxConcurrency","maxMobileConcurrency","onDebug","reuseWorkers","WorkerFarm","Map","setProps","workerPools","isSupported","_workerFarm","values","destroy","_getWorkerPoolProps","workerPool","WorkerPool","idleQueue","forEach","isDestroyed","job","done","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","shift","backlog","returnWorkerToQueue","count","_getMaxConcurrency","toLowerCase","onMessageWrapperMap","WorkerBody","isKnownMessage","onMessageWrapper","addEventListener","removeEventListener","startsWith","warning","workerOptions","workerFile","workerUrl","_workerType","versionTag","asyncIterator","AsyncQueue","_values","_settlers","_closed","enqueue","settler","getMagicString","arrayBuffer","byteOffset","byteLength","dataView","DataView","magic","fromCharCode","getUint8","node","toArrayBuffer","text","TextEncoder","encode","_toArrayBuffer","arrayBuffer1","arrayBuffer2","array1","Uint8Array","array2","sources","sourceArrays","map","source2","reduce","offset","sourceArray","typedArrays","arrays","TypedArrayConstructor","sumLength","acc","subArray","targetBuffer","sourceBuffer","targetArray","target","targetOffset","srcByteOffset","srcByteLength","padToNBytes","padding","moduleExports","require","_global","loaders","assign","TerrainLoader","TerrainWorkerLoader","parse","loadTerrain","_typecheckTerrainLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","parseSync","parseQuantizedMesh","_typecheckQuantizedMeshLoader","bounds","DECODING_STEPS","triangleIndices","header","vertexData","originalTriangleIndices","minHeight","maxHeight","minX","minY","maxX","maxY","xScale","yScale","zScale","nCoords","positions","texCoords","x","y","z","size","getMeshAttributes","boundingBox","getMeshBoundingBox","addSkirt","newAttributes","loaderData","vertexCount","getTileMesh","DEFAULT_OPTIONS","batchSize","batchDebounceMs","limit","_limitMB","TableBatchBuilder","totalLength","totalBytes","limitReached","rowBytes","_estimateRowMB","aggregator","TableBatchType","_getTableBatchType","chunk","bytesUsed","isChunkComplete","_isFull","_getBatch","keys","rowCount","lastBatchEmittedMs","normalizedBatch","getBatch","batchCount","BaseTableBatchAggregator","ArrowBatch","attributeName","attribute","BYTES_PER_ELEMENT","Infinity","minZ","maxZ","Schema","fields","metadata","usedNames","warn","checkNames","other","compareTo","nameMap","columnNames","selectedFields","filter","columnIndices","schemaOrFields","otherSchema","mergeMaps","fieldMap","m1","m2","Field","nullable","typeId","DataType","Type","NONE","Null","Int","Float","Binary","Utf8","Bool","Decimal","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Dictionary","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","precision","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","valueType","deduceTypeFromValue","table","deducedSchema","rowTable","deduceSchemaForRowTable","columnarTable","deduceSchemaForColumnarTable","arrowTypeLike","typeName","toString","typeEnumName","getTypeKey","ReverseType","typeKey","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float64Array","ArrayQueue","dequeue","asyncIterable","iterator","next","userOptions","view","QUANTIZED_MESH_HEADER","bytesCount","getFloat64","getFloat32","headerEndPosition","decodeHeader","maxDecodingStep","vertices","getUint32","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","decodeZigZag","getUint16","vertexDataEndPosition","decodeVertexData","bytesPerIndex","triangleCount","triangleIndicesCount","decodeIndex","triangleIndicesEndPosition","decodeTriangleIndices","edgeIndices","westVertexCount","southVertexCount","eastVertexCount","northVertexCount","edgeIndicesEndPosition","decodeEdgeIndices","extensions","indicesEndPosition","extensionsEndPosition","extensionId","extensionLength","extensionView","vertexNormals","extensionDataView","waterMask","decodeWaterMaskExtension","decodeExtensions","indicesCount","encoded","highest","code","loader","input","parseData","context","parseOnMainThread","requestId","parser","parseTextSync","textDecoder","TextDecoder","decode","workerURL","workerURLCache","getLoadableWorkerURLFromSource","getLoadableWorkerURLFromURL","workerSource","blob","Blob","URL","createObjectURL","getWorkerName","getWorkerURL","workerFarm","getWorkerFarm","getWorkerPool","startJob","transferableOptions","removeNontransferableOptions","JSON","cache","stringify","has","err","processInBatches","processOnMainThread","inputBatches","resultIterator","batch","close","coreVersion","workerVersion","loadLibraryPromises","libraryUrl","moduleName","getLibraryUrl","loadLibraryFromFile","library","CDN","endsWith","fetch","response","requireFromFile","scriptSource","loadLibraryFromString","requireFromString","eval","script","createElement","appendChild","createTextNode","body","command","port","autoPort","wait","onSuccess","processProxy","ChildProcessProxy","portArg","getAvailablePort","_setTimeout","join","childProcess","spawn","stdout","stderr","_clearTimeout","kill","statusCode","stop","exit","callback","successTimer","defaultPort","ChildProcess","portsInUse","regex","split","line","match","includes","string","_","getFirstCharacters","stringBuffer","copyPaddedArrayBufferToDataView","paddedLength","padLength","setUint8","byteAlignment","ceil","whitespace","charCodeAt","binary","arrayBufferIterator","stream","textIterator","textEncoder","previous","eolIndex","indexOf","lineIterator","counter","visitor","arrayBuffers","concatenateArrayBuffers","strings","throttleRequests","maxRequests","RequestScheduler","stats","Stats","handle","getPriority","requestMap","request","priority","promise","requestQueue","_issueNewRequests","isDone","activeRequestCount","deferredUpdate","_issueNewRequestsAsync","freeSlots","_updateAllRequests","_issueRequest","_updateRequest","splice","slashIndex","lastIndexOf","substr","parts","separator","part","replace","RegExp","prefix","pathPrefix","aliases","fileAliases","filename","alias","replacement","fsFunction","fs","open","promisify","read","readFile","readFileSync","writeFile","writeFileSync","fd","start","Buffer","alloc","bytesRead","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","str","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","output","base","braces","toUTCString","formatProperty","formatArray","pop","prev","cur","numLinesEst","reduceToSingleString","desc","ar","arg","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","test","pid","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","original","TypeError","writable","configurable","promiseResolve","promiseReject","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","rej","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","toBuffer","JSONLoader","mimeTypes","category","_typecheckJSONLoader","getTerrain","imageData","width","elevationDecoder","tesselator","rScaler","bScaler","gScaler","terrain","k","getMesh","terrainImage","terrainOptions","mesh","meshMaxError","getMartiniTileMesh","getDelatinTileMesh","gridSize","numOfVerticies","pixelIdx","Martini","createTile","tin","Delatin","coords","image","baseUri","tileSize","numTriangles","numParentTriangles","ax","ay","bx","by","cx","cy","mx","my","Tile","martini","errors","update","interpolatedHeight","middleIndex","middleError","abs","leftChildIndex","rightChildIndex","maxError","numVertices","countElements","triIndex","processTriangle","_halfedges","_candidates","_queueIndices","_queue","_errors","_rms","_pending","_pendingLen","_rmsSum","x1","y1","p0","_addPoint","p1","p2","p3","t0","_addTriangle","_flush","getMaxError","refine","_step","sqrt","_findCandidate","p0x","p0y","p1x","p1y","p2x","p2y","w00","orient","w01","w02","a01","b01","a12","b12","a20","b20","z0","heightAt","z1","z2","rms","dx","floor","w0","w1","w2","wasInside","dz","_queuePush","_queuePop","e0","e1","e2","px","py","pn","_handleCollinear","h0","h1","h2","t1","t2","_legalize","ab","bc","ca","a0","b0","al","bl","br","pr","pl","ey","cp","fx","fy","bp","ex","dy","hal","har","hbl","hbr","_queueRemove","t3","_queueUp","_queueSwap","_queueDown","_queuePopBack","it","j","pi","pj","j0","_queueLess","i0","j1","j2","_typecheckTerrainWorkerLoader","sampleSize","reset","samples","addCount","subtractCount","_count","_samples","_checkSampling","_time","lastTiming","_startTime","_timerPending","addTime","lastSampleCount","lastSampleTime","_initializeStats","seal","_getOrCreate","stat","average","getAverageTime","hz","getHz"],"mappings":"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","file":"dist.es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export default function getHiResTimestamp() {\n  let timestamp;\n\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  TimeMicrosecond,\n  TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from 'apache-arrow';\n*/\nexport {default as Schema} from './impl/schema';\nexport {default as Field} from './impl/field';\nexport {Type} from './impl/type';\nexport {\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  // TimeMicrosecond,\n  // TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './impl/type';\n","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","// COMMON CATEGORY\nexport type {TypedArray, NumberArray, AnyArray} from './types';\n\nexport type {Batch} from './category/common';\n\n// TABLE CATEGORY TYPES\n\nexport type {\n  Table,\n  ArrayRowTable,\n  ObjectRowTable,\n  ColumnarTable,\n  ArrowTable\n} from './category/table';\nexport type {\n  TableBatch,\n  RowArrayTableBatch,\n  RowObjectTableBatch,\n  ColumnarTableBatch,\n  ArrowTableBatch\n} from './category/table';\n\n// TABLE CATEGORY UTILS\nexport {default as TableBatchBuilder} from './lib/table/table-batch-builder';\nexport type {TableBatchAggregator} from './lib/table/table-batch-aggregator';\nexport {default as RowTableBatchAggregator} from './lib/table/row-table-batch-aggregator';\nexport {default as ColumnarTableBatchAggregator} from './lib/table/columnar-table-batch-aggregator';\n\nexport {convertToObjectRow, convertToArrayRow} from './lib/utils/row-utils';\n\n// MESH CATEGORY\nexport type {MeshTable, MeshArrowTable, Mesh, MeshAttribute} from './category/mesh';\n\n// MESH CATEGORY UTILS\nexport type {Attributes as _Attributes} from './category/mesh/mesh-utils';\nexport {getMeshSize, getMeshBoundingBox} from './category/mesh/mesh-utils';\n\n// TYPES\n// GIS CATEGORY - GEOJSON\nexport type {GeoJSON, Feature, Geometry, Position, GeoJsonProperties} from './category/gis';\nexport type {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n} from './category/gis';\n\n// GIS CATEGORY - BINARY\nexport type {\n  BinaryGeometryType,\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry,\n  BinaryAttribute\n} from './category/gis';\nexport type {\n  BinaryFeatures,\n  BinaryPointFeatures,\n  BinaryLineFeatures,\n  BinaryPolygonFeatures\n} from './category/gis';\n\n// SCHEMA\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Binary,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeMillisecond,\n  TimeSecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './lib/schema';\n\n// SCHEMA UTILS\nexport {deduceTableSchema} from './lib/schema-utils/deduce-table-schema';\nexport {getTypeInfo} from './lib/schema-utils/get-type-info';\nexport {getArrowTypeFromTypedArray} from './lib/schema-utils/type-utils';\n\n// EXPERIMENTAL APIs\nexport {default as AsyncQueue} from './lib/utils/async-queue';\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\n// import type {ArrayRowTableBatch, ObjectRowTableBatch} from '../../category/table';\nimport {convertToArrayRow, convertToObjectRow} from '../utils/row-utils';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  objectRows: {[columnName: string]: any} | null = null;\n  arrayRows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'object-row-table':\n        const rowObject = convertToObjectRow(row, this._headers);\n        this.addObjectRow(rowObject, cursor);\n        break;\n      case 'array-row-table':\n        this.arrayRows = this.arrayRows || new Array(DEFAULT_ROW_COUNT);\n        this.arrayRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'array-row-table':\n        const rowArray = convertToArrayRow(row, this._headers);\n        this.addArrayRow(rowArray, cursor);\n        break;\n      case 'object-row-table':\n        this.objectRows = this.objectRows || new Array(DEFAULT_ROW_COUNT);\n        this.objectRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.arrayRows || this.objectRows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.arrayRows = null;\n    this.objectRows = null;\n\n    return {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n  }\n}\n","/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n","import type {Schema} from '../schema';\nimport type {ColumnarTableBatch, ArrowTableBatch} from '../../category/table';\nimport {TableBatchAggregator} from './table-batch-aggregator';\n\ntype ColumnarTableBatchOptions = {};\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class ColumnarTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  length: number = 0;\n  allocated: number = 0;\n  columns: {[columnName: string]: any[]} = {};\n\n  constructor(schema: Schema, options: ColumnarTableBatchOptions) {\n    this.schema = schema;\n    this._reallocateColumns();\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[]) {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    let i = 0;\n    // TODO what if no csv header, columns not populated?\n    for (const fieldName in this.columns) {\n      this.columns[fieldName][this.length] = row[i++];\n    }\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}): void {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    for (const fieldName in row) {\n      this.columns[fieldName][this.length] = row[fieldName];\n    }\n    this.length++;\n  }\n\n  getBatch(): ColumnarTableBatch | ArrowTableBatch | null {\n    this._pruneColumns();\n    const columns = Array.isArray(this.schema) ? this.columns : {};\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    // columns should match schema format\n    if (!Array.isArray(this.schema)) {\n      for (const fieldName in this.schema) {\n        const field = this.schema[fieldName];\n        columns[field.name] = this.columns[field.index];\n      }\n    }\n\n    this.columns = {};\n\n    const batch: ColumnarTableBatch = {\n      shape: 'columnar-table',\n      batchType: 'data',\n      data: columns,\n      schema: this.schema,\n      length: this.length\n    };\n\n    return batch;\n  }\n\n  // HELPERS\n\n  _reallocateColumns() {\n    if (this.length < this.allocated) {\n      return;\n    }\n\n    // @ts-ignore TODO\n    this.allocated = this.allocated > 0 ? (this.allocated *= 2) : DEFAULT_ROW_COUNT;\n    this.columns = {};\n\n    for (const fieldName in this.schema) {\n      const field = this.schema[fieldName];\n      const ArrayType = field.type || Float32Array;\n      const oldColumn = this.columns[field.index];\n\n      if (oldColumn && ArrayBuffer.isView(oldColumn)) {\n        // Copy the old data to the new array\n        const typedArray = new ArrayType(this.allocated);\n        typedArray.set(oldColumn);\n        this.columns[field.index] = typedArray;\n      } else if (oldColumn) {\n        // Plain array\n        oldColumn.length = this.allocated;\n        this.columns[field.index] = oldColumn;\n      } else {\n        // Create new\n        this.columns[field.index] = new ArrayType(this.allocated);\n      }\n    }\n  }\n\n  _pruneColumns() {\n    for (const [columnName, column] of Object.entries(this.columns)) {\n      this.columns[columnName] = column.slice(0, this.length);\n    }\n  }\n}\n","import {concatenateTypedArrays} from '@loaders.gl/loader-utils';\n\n/**\n * Add skirt to existing mesh\n * @param {object} attributes - POSITION and TEXCOOD_0 attributes data\n * @param {any} triangles - indices array of the mesh geometry\n * @param {number} skirtHeight - height of the skirt geometry\n * @param {object} outsideIndices - edge indices from quantized mesh data\n * @returns - geometry data with added skirt\n */\nexport function addSkirt(attributes, triangles, skirtHeight, outsideIndices = null) {\n  const outsideEdges = outsideIndices\n    ? getOutsideEdgesFromIndices(outsideIndices, attributes.POSITION.value)\n    : getOutsideEdgesFromTriangles(triangles);\n\n  // 2 new vertices for each outside edge\n  const newPosition = new attributes.POSITION.value.constructor(outsideEdges.length * 6);\n  const newTexcoord0 = new attributes.TEXCOORD_0.value.constructor(outsideEdges.length * 4);\n\n  // 2 new triangles for each outside edge\n  const newTriangles = new triangles.constructor(outsideEdges.length * 6);\n\n  for (let i = 0; i < outsideEdges.length; i++) {\n    const edge = outsideEdges[i];\n\n    updateAttributesForNewEdge({\n      edge,\n      edgeIndex: i,\n      attributes,\n      skirtHeight,\n      newPosition,\n      newTexcoord0,\n      newTriangles\n    });\n  }\n\n  attributes.POSITION.value = concatenateTypedArrays(attributes.POSITION.value, newPosition);\n  attributes.TEXCOORD_0.value = concatenateTypedArrays(attributes.TEXCOORD_0.value, newTexcoord0);\n  const resultTriangles =\n    triangles instanceof Array\n      ? triangles.concat(newTriangles)\n      : concatenateTypedArrays(triangles, newTriangles);\n\n  return {\n    attributes,\n    triangles: resultTriangles\n  };\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {any} triangles - indices array of the mesh geometry\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromTriangles(triangles) {\n  const edges = [];\n  for (let i = 0; i < triangles.length; i += 3) {\n    edges.push([triangles[i], triangles[i + 1]]);\n    edges.push([triangles[i + 1], triangles[i + 2]]);\n    edges.push([triangles[i + 2], triangles[i]]);\n  }\n\n  edges.sort((a, b) => Math.min(...a) - Math.min(...b) || Math.max(...a) - Math.max(...b));\n\n  const outsideEdges = [];\n  let index = 1;\n  while (index < edges.length) {\n    if (edges[index][0] === edges[index - 1][1] && edges[index][1] === edges[index - 1][0]) {\n      index += 2;\n    } else {\n      outsideEdges.push(edges[index - 1]);\n      index++;\n    }\n  }\n  return outsideEdges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} indices - edge indices from quantized mesh data\n * @param {TypedArray} position - position attribute geometry data\n * @returns {number[][]} - outside edges data\n */\nfunction getOutsideEdgesFromIndices(indices, position) {\n  // Sort skirt indices to create adjacent triangles\n  indices.westIndices.sort((a, b) => position[3 * a + 1] - position[3 * b + 1]);\n  // Reverse (b - a) to match triangle winding\n  indices.eastIndices.sort((a, b) => position[3 * b + 1] - position[3 * a + 1]);\n  indices.southIndices.sort((a, b) => position[3 * b] - position[3 * a]);\n  // Reverse (b - a) to match triangle winding\n  indices.northIndices.sort((a, b) => position[3 * a] - position[3 * b]);\n\n  const edges = [];\n  for (const index in indices) {\n    const indexGroup = indices[index];\n    for (let i = 0; i < indexGroup.length - 1; i++) {\n      edges.push([indexGroup[i], indexGroup[i + 1]]);\n    }\n  }\n  return edges;\n}\n\n/**\n * Get geometry edges that located on a border of the mesh\n * @param {object} args\n * @param {number[]} args.edge - edge indices in geometry\n * @param {number} args.edgeIndex - edge index in outsideEdges array\n * @param {object} args.attributes - POSITION and TEXCOORD_0 attributes\n * @param {number} args.skirtHeight - height of the skirt geometry\n * @param {TypedArray} args.newPosition - POSITION array for skirt data\n * @param {TypedArray} args.newTexcoord0 - TEXCOORD_0 array for skirt data\n * @param {TypedArray | Array} args.newTriangles - trinagle indices array for skirt data\n * @returns {void}\n */\nfunction updateAttributesForNewEdge({\n  edge,\n  edgeIndex,\n  attributes,\n  skirtHeight,\n  newPosition,\n  newTexcoord0,\n  newTriangles\n}) {\n  const positionsLength = attributes.POSITION.value.length;\n  const vertex1Offset = edgeIndex * 2;\n  const vertex2Offset = edgeIndex * 2 + 1;\n\n  // Define POSITION for new 1st vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[0] * 3, edge[0] * 3 + 3),\n    vertex1Offset * 3\n  );\n  newPosition[vertex1Offset * 3 + 2] = newPosition[vertex1Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Define POSITION for new 2nd vertex\n  newPosition.set(\n    attributes.POSITION.value.subarray(edge[1] * 3, edge[1] * 3 + 3),\n    vertex2Offset * 3\n  );\n  newPosition[vertex2Offset * 3 + 2] = newPosition[vertex2Offset * 3 + 2] - skirtHeight; // put down elevation on the skirt height\n\n  // Use same TEXCOORDS for skirt vertices\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[0] * 2, edge[0] * 2 + 2),\n    vertex1Offset * 2\n  );\n  newTexcoord0.set(\n    attributes.TEXCOORD_0.value.subarray(edge[1] * 2, edge[1] * 2 + 2),\n    vertex2Offset * 2\n  );\n\n  // Define new triangles\n  const triangle1Offset = edgeIndex * 2 * 3;\n  newTriangles[triangle1Offset] = edge[0];\n  newTriangles[triangle1Offset + 1] = edge[1];\n  newTriangles[triangle1Offset + 2] = positionsLength / 3 + vertex2Offset;\n\n  newTriangles[triangle1Offset + 3] = positionsLength / 3 + vertex2Offset;\n  newTriangles[triangle1Offset + 4] = positionsLength / 3 + vertex1Offset;\n  newTriangles[triangle1Offset + 5] = edge[0];\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import type {WorkerMessageData, WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst onMessageWrapperMap = new Map();\n\n/**\n * Type safe wrapper for worker code\n */\nexport default class WorkerBody {\n  /*\n   * (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n   */\n  static set onmessage(onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any) {\n    // eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message) => {\n      if (!isKnownMessage(message)) {\n        return;\n      }\n\n      // Confusingly the message itself also has a 'type' field which is always set to 'message'\n      const {type, payload} = message.data;\n      onMessage(type, payload);\n    };\n  }\n\n  static addEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    let onMessageWrapper = onMessageWrapperMap.get(onMessage);\n\n    if (!onMessageWrapper) {\n      onMessageWrapper = (message) => {\n        if (!isKnownMessage(message)) {\n          return;\n        }\n\n        // Confusingly the message itself also has a 'type' field which is always set to 'message'\n        const {type, payload} = message.data;\n        onMessage(type, payload);\n      };\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('message', onMessageWrapper);\n  }\n\n  static removeEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    const onMessageWrapper = onMessageWrapperMap.get(onMessage);\n    onMessageWrapperMap.delete(onMessage);\n    // eslint-disable-next-line no-restricted-globals\n    self.removeEventListener('message', onMessageWrapper);\n  }\n\n  /**\n   * Send a message from a worker to creating thread (main thread)\n   * @param type\n   * @param payload\n   */\n  static postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    if (self) {\n      const data: WorkerMessageData = {source: 'loaders.gl', type, payload};\n      const transferList = getTransferList(payload);\n      // eslint-disable-next-line no-restricted-globals\n      // @ts-ignore\n      self.postMessage(data, transferList);\n    }\n  }\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(message) {\n  const {type, data} = message;\n  return (\n    type === 'message' &&\n    data &&\n    typeof data.source === 'string' &&\n    data.source.startsWith('loaders.gl')\n  );\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n","export function getFirstCharacters(data, length = 5): string {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nexport function getMagicString(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  length: number\n): string {\n  if (arrayBuffer.byteLength <= byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","import {TypedArray} from '../../types';\nimport * as node from '../node/buffer-utils.node';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.toArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","import {assert} from '../env-utils/assert';\n\n/**\n * Calculate new size of an arrayBuffer to be aligned to an n-byte boundary\n * This function increases `byteLength` by the minimum delta,\n * allowing the total length to be divided by `padding`\n * @param byteLength\n * @param padding\n */\nexport function padToNBytes(byteLength: number, padding: number): number {\n  assert(byteLength >= 0); // `Incorrect 'byteLength' value: ${byteLength}`\n  assert(padding > 0); // `Incorrect 'padding' value: ${padding}`\n  return (byteLength + (padding - 1)) & ~(padding - 1);\n}\n\n/**\n * Creates a new Uint8Array based on two different ArrayBuffers\n * @param targetBuffer The first buffer.\n * @param sourceBuffer The second buffer.\n * @return The new ArrayBuffer created out of the two.\n */\nexport function copyArrayBuffer(\n  targetBuffer: ArrayBuffer,\n  sourceBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength: number = sourceBuffer.byteLength\n): ArrayBuffer {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\n/**\n * Copy from source to target at the targetOffset\n *\n * @param source - The data to copy\n * @param target - The destination to copy data into\n * @param targetOffset - The start offset into target to place the copied data\n * @returns the new offset taking into account proper padding\n */\nexport function copyToArray(source: ArrayBuffer | any, target: any, targetOffset: number): number {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    // Pack buffer onto the big target array\n    //\n    // 'source.data.buffer' could be a view onto a larger buffer.\n    // We MUST use this constructor to ensure the byteOffset and byteLength is\n    // set to correct values from 'source.data' and not the underlying\n    // buffer for target.set() to work properly.\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    // In gltf parser it is set as \"arrayBuffer\" instead of \"buffer\"\n    // https://github.com/visgl/loaders.gl/blob/1e3a82a0a65d7b6a67b1e60633453e5edda2960a/modules/gltf/src/lib/parse-gltf.js#L85\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  // Pack buffer onto the big target array\n  target.set(sourceArray, targetOffset);\n\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n","import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport decode, {DECODING_STEPS} from './decode-quantized-mesh';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const {minHeight, maxHeight} = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\nfunction getTileMesh(arrayBuffer, options) {\n  if (!arrayBuffer) {\n    return null;\n  }\n  const {bounds} = options;\n  // Don't parse edge indices or format extensions\n  const {\n    header,\n    vertexData,\n    triangleIndices: originalTriangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices\n  } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n  let triangleIndices = originalTriangleIndices;\n  let attributes = getMeshAttributes(vertexData, header, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  // TODO: Find bounding box from header, instead of doing extra pass over\n  // vertices.\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (options.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangleIndices,\n      options.skirtHeight,\n      {\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices\n      }\n    );\n    attributes = newAttributes;\n    triangleIndices = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      // @ts-ignore\n      vertexCount: triangleIndices.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: triangleIndices, size: 1},\n    attributes\n  };\n}\n\nexport default function loadQuantizedMesh(arrayBuffer, options) {\n  return getTileMesh(arrayBuffer, options['quantized-mesh']);\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport type {TableBatchAggregator, TableBatchConstructor} from './table-batch-aggregator';\nimport BaseTableBatchAggregator from './base-table-batch-aggregator';\nimport RowTableBatchAggregator from './row-table-batch-aggregator';\nimport ColumnarTableBatchAggregator from './columnar-table-batch-aggregator';\n\n// TODO define interface instead\ntype TableBatchBuilderOptions = {\n  shape: 'row-table' | 'array-row-table' | 'object-row-table' | 'columnar-table' | 'arrow-table';\n  batchSize?: number | 'auto';\n  batchDebounceMs?: number;\n  limit: number;\n  _limitMB: number;\n};\n\ntype GetBatchOptions = {\n  bytesUsed?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_OPTIONS: Required<TableBatchBuilderOptions> = {\n  shape: 'array-row-table',\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  limit: 0,\n  _limitMB: 0\n};\n\nconst ERR_MESSAGE = 'TableBatchBuilder';\n\n/** Incrementally builds batches from a stream of rows */\nexport default class TableBatchBuilder {\n  schema: Schema;\n  options: Required<TableBatchBuilderOptions>;\n\n  private aggregator: TableBatchAggregator | null = null;\n  private batchCount: number = 0;\n  private bytesUsed: number = 0;\n  private isChunkComplete: boolean = false;\n  private lastBatchEmittedMs: number = Date.now();\n  private totalLength: number = 0;\n  private totalBytes: number = 0;\n  private rowBytes: number = 0;\n\n  static ArrowBatch?: TableBatchConstructor;\n\n  constructor(schema: Schema, options?: TableBatchBuilderOptions) {\n    this.schema = schema;\n    this.options = {...DEFAULT_OPTIONS, ...options};\n  }\n\n  limitReached(): boolean {\n    if (Boolean(this.options?.limit) && this.totalLength >= this.options.limit) {\n      return true;\n    }\n    if (Boolean(this.options?._limitMB) && this.totalBytes / 1e6 >= this.options._limitMB) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated Use addArrayRow or addObjectRow */\n  addRow(row: any[] | {[columnName: string]: any}): void {\n    if (this.limitReached()) {\n      return;\n    }\n    this.totalLength++;\n    this.rowBytes = this.rowBytes || this._estimateRowMB(row);\n    this.totalBytes += this.rowBytes;\n    if (Array.isArray(row)) {\n      this.addArrayRow(row);\n    } else {\n      this.addObjectRow(row);\n    }\n  }\n\n  /** Add one row to the batch */\n  protected addArrayRow(row: any[]) {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addArrayRow(row);\n  }\n\n  /** Add one row to the batch */\n  protected addObjectRow(row: {[columnName: string]: any}): void {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addObjectRow(row);\n  }\n\n  /** Mark an incoming raw memory chunk has completed */\n  chunkComplete(chunk: ArrayBuffer | string): void {\n    if (chunk instanceof ArrayBuffer) {\n      this.bytesUsed += chunk.byteLength;\n    }\n    if (typeof chunk === 'string') {\n      this.bytesUsed += chunk.length;\n    }\n    this.isChunkComplete = true;\n  }\n\n  getFullBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._isFull() ? this._getBatch(options) : null;\n  }\n\n  getFinalBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._getBatch(options);\n  }\n\n  // INTERNAL\n\n  _estimateRowMB(row) {\n    return Array.isArray(row) ? row.length * 8 : Object.keys(row).length * 8;\n  }\n\n  private _isFull(): boolean {\n    // No batch, not ready\n    if (!this.aggregator || this.aggregator.rowCount() === 0) {\n      return false;\n    }\n\n    // if batchSize === 'auto' we wait for chunk to complete\n    // if batchSize === number, ensure we have enough rows\n    if (this.options.batchSize === 'auto') {\n      if (!this.isChunkComplete) {\n        return false;\n      }\n    } else if (this.options.batchSize > this.aggregator.rowCount()) {\n      return false;\n    }\n\n    // Debounce batches\n    if (this.options.batchDebounceMs > Date.now() - this.lastBatchEmittedMs) {\n      return false;\n    }\n\n    // Emit batch\n    this.isChunkComplete = false;\n    this.lastBatchEmittedMs = Date.now();\n    return true;\n  }\n\n  /**\n   * bytesUsed can be set via chunkComplete or via getBatch*\n   */\n  private _getBatch(options?: GetBatchOptions): TableBatch | null {\n    if (!this.aggregator) {\n      return null;\n    }\n\n    // TODO - this can overly increment bytes used?\n    if (options?.bytesUsed) {\n      this.bytesUsed = options.bytesUsed;\n    }\n    const normalizedBatch = this.aggregator.getBatch() as TableBatch;\n    normalizedBatch.count = this.batchCount;\n    normalizedBatch.bytesUsed = this.bytesUsed;\n    Object.assign(normalizedBatch, options);\n\n    this.batchCount++;\n    this.aggregator = null;\n    return normalizedBatch;\n  }\n\n  private _getTableBatchType(): TableBatchConstructor {\n    switch (this.options.shape) {\n      case 'row-table':\n        return BaseTableBatchAggregator;\n      case 'array-row-table':\n      case 'object-row-table':\n        return RowTableBatchAggregator;\n      case 'columnar-table':\n        return ColumnarTableBatchAggregator;\n      case 'arrow-table':\n        if (!TableBatchBuilder.ArrowBatch) {\n          throw new Error(ERR_MESSAGE);\n        }\n        return TableBatchBuilder.ArrowBatch;\n      default:\n        throw new Error(ERR_MESSAGE);\n    }\n  }\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n","// Mesh category utilities\n// TODO - move to mesh category module, or to math.gl/geometry module\nimport {TypedArray} from '../../types';\n\ntype Attribute = {\n  size?: number;\n  type?: number;\n  normalized?: boolean;\n  value: TypedArray;\n};\n\ntype TypedArrays = {[key: string]: TypedArray};\nexport type Attributes = {[key: string]: Attribute};\n\n/**\n * Holds an axis aligned bounding box\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\n */\ntype BoundingBox = [[number, number, number], [number, number, number]];\n\n/**\n * Get number of vertices in mesh\n * @param attributes\n */\nexport function getMeshSize(attributes: TypedArrays): number {\n  let size = 0;\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    if (ArrayBuffer.isView(attribute)) {\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\n    }\n  }\n  return size;\n}\n\n/**\n * Get the (axis aligned) bounding box of a mesh\n * @param attributes\n * @returns array of two vectors representing the axis aligned bounding box\n */\n// eslint-disable-next-line complexity\nexport function getMeshBoundingBox(attributes: Attributes): BoundingBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let minZ = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\n  const len = positions && positions.length;\n\n  for (let i = 0; i < len; i += 3) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const z = positions[i + 2];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    minZ = z < minZ ? z : minZ;\n\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n    maxZ = z > maxZ ? z : maxZ;\n  }\n  return [\n    [minX, minY, minZ],\n    [maxX, maxY, maxZ]\n  ];\n}\n","import {assert} from '../../utils/assert';\nimport Field from './field';\n\nexport type SchemaMetadata = Map<string, any>;\n\n/**\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n * https://loaders.gl/arrowjs/docs/api-reference/schema\n */\nexport default class Schema {\n  fields: Field[];\n  // TODO - Arrow just allows Map<string, string>\n  metadata: SchemaMetadata;\n\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\n    assert(Array.isArray(fields));\n    checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields;\n    this.metadata = metadata || new Map();\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: Schema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): Schema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): Schema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: Schema | Field[]): Schema {\n    let fields: Field[];\n    let metadata: SchemaMetadata = this.metadata;\n\n    if (schemaOrFields instanceof Schema) {\n      const otherSchema = schemaOrFields;\n      fields = otherSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: Field} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new Schema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\nfunction checkNames(fields) {\n  const usedNames = {};\n  for (const field of fields) {\n    if (usedNames[field.name]) {\n      // eslint-disable-next-line\n      console.warn('Schema: duplicated field name', field.name, field);\n    }\n    usedNames[field.name] = true;\n  }\n}\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import {DataType} from './type';\n\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport default class Field {\n  name: string;\n  type: DataType;\n  nullable: boolean;\n  metadata: Map<string, string>;\n\n  constructor(\n    name: string,\n    type: DataType,\n    nullable = false,\n    metadata: Map<string, string> = new Map()\n  ) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId(): number {\n    return this.type && this.type.typeId;\n  }\n\n  clone(): Field {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other: this): boolean {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString(): string {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: number;\n  readonly bitWidth: number;\n\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n  /** The default placeholder type */\n  NONE = 0,\n  /** A NULL type having no physical storage */\n  Null = 1,\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Int = 2,\n  /** 2, 4, or 8-byte floating point value */\n  Float = 3,\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Binary = 4,\n  /** UTF8 variable-length string as List<Char> */\n  Utf8 = 5,\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Bool = 6,\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Decimal = 7,\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Date = 8,\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Time = 9,\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Timestamp = 10,\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Interval = 11,\n  /** A list of some logical data type */\n  List = 12,\n  /** Struct of logical types */\n  Struct = 13,\n  /** Union of logical types */\n  Union = 14,\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  FixedSizeBinary = 15,\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  FixedSizeList = 16,\n  /** Map of named logical types */\n  Map = 17,\n\n  /** Dictionary aka Category type */\n  Dictionary = -1,\n  Int8 = -2,\n  Int16 = -3,\n  Int32 = -4,\n  Int64 = -5,\n  Uint8 = -6,\n  Uint16 = -7,\n  Uint32 = -8,\n  Uint64 = -9,\n  Float16 = -10,\n  Float32 = -11,\n  Float64 = -12,\n  DateDay = -13,\n  DateMillisecond = -14,\n  TimestampSecond = -15,\n  TimestampMillisecond = -16,\n  TimestampMicrosecond = -17,\n  TimestampNanosecond = -18,\n  TimeSecond = -19,\n  TimeMillisecond = -20,\n  TimeMicrosecond = -21,\n  TimeNanosecond = -22,\n  DenseUnion = -23,\n  SparseUnion = -24,\n  IntervalDayTime = -25,\n  IntervalYearMonth = -26\n}\n","// Type deduction\nimport {\n  Schema\n  // Int,\n  // Int8,\n  // Int16,\n  // Int32,\n  // Uint8,\n  // Uint16,\n  // Uint32,\n  // Float32,\n  // Float64\n  // Bool,\n  // Utf8,\n  // TimestampMillisecond,\n  // Null\n} from '../schema';\n\n// const TYPED_ARRAY_TO_TYPE = {\n//   Int8Array: new Int8(),\n//   Int16Array: new Int16(),\n//   Int32Array: new Int32(),\n//   Uint8Array: new Uint8(),\n//   Uint8ClampedArray: new Uint8(),\n//   Uint16Array: new Uint16(),\n//   Uint32Array: new Uint32(),\n//   Float32Array: new Float32(),\n//   Float64Array: new Float64()\n// };\n\n// if (typeof BigInt64Array !== 'undefined') {\n//   TYPED_ARRAY_TO_TYPE.BigInt64Array = new Int64();\n//   TYPED_ARRAY_TO_TYPE.BigUint64Array = new Uint64();\n// }\n\n/**\n * SCHEMA SUPPORT - AUTODEDUCTION\n * @param {*} table\n * @param {*} schema\n * @returns\n */\nexport function deduceTableSchema(table, schema?: Schema) {\n  const deducedSchema = Array.isArray(table)\n    ? deduceSchemaForRowTable(table)\n    : deduceSchemaForColumnarTable(table);\n  // Deduced schema will fill in missing info from partial options.schema, if provided\n  return Object.assign(deducedSchema, schema);\n}\n\nfunction deduceSchemaForColumnarTable(columnarTable) {\n  const schema = {};\n  for (const field in columnarTable) {\n    const column = columnarTable[field];\n    // Check if column is typed, if so we are done\n    if (ArrayBuffer.isView(column)) {\n      schema[field] = column.constructor;\n      // else we need data\n    } else if (column.length) {\n      const value = column[0];\n      schema[field] = deduceTypeFromValue(value);\n      // TODO - support nested schemas?\n    }\n    // else we mark as present but unknow\n    schema[field] = schema[field] || null;\n  }\n  return schema;\n}\n\nfunction deduceSchemaForRowTable(rowTable) {\n  const schema = {};\n  if (rowTable.length) {\n    const row = rowTable[0];\n    // TODO - Could look at additional rows if nulls in first row\n    for (const field in row) {\n      const value = row[field];\n      schema[field] = deduceTypeFromValue(value);\n    }\n  }\n  return schema;\n}\n\nfunction deduceTypeFromValue(value) {\n  if (value instanceof Date) {\n    return Date;\n  } else if (value instanceof Number) {\n    return Float32Array;\n  } else if (typeof value === 'string') {\n    return String;\n  }\n  return null;\n}\n\n/*\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction deduceSchema(rows) {\n  const row = rows[0];\n\n  const schema = {};\n  let i = 0;\n  for (const columnName in row) {\n    const value = row[columnName];\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        // TODO - booleans could be handled differently...\n        schema[columnName] = {name: String(columnName), index: i, type: Float32Array};\n        break;\n\n      case 'object':\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n        break;\n\n      case 'string':\n      default:\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n      // We currently only handle numeric rows\n      // TODO we could offer a function to map strings to numbers?\n    }\n    i++;\n  }\n  return schema;\n}\n*/\n","import {Type} from '../schema';\nimport {AnyArray} from '../../types';\n\n/**\n * Gets type information from an Arrow type object or \"mock\" Arrow type object\n * @param arrowTypeLike Arrow Type or type object of similar shape\n */\nexport function getTypeInfo(arrowTypeLike: any): {\n  typeId: Type;\n  ArrayType: AnyArray;\n  typeName: string;\n  typeEnumName?: string;\n  precision?: number;\n} {\n  return {\n    typeId: arrowTypeLike.typeId,\n    ArrayType: arrowTypeLike.ArrayType,\n    typeName: arrowTypeLike.toString(),\n    typeEnumName: getTypeKey(arrowTypeLike.typeId),\n    precision: arrowTypeLike.precision\n  };\n}\n\nlet ReverseType: {[key: string]: string} | null = null;\n\nfunction getTypeKey(typeKey) {\n  if (!ReverseType) {\n    ReverseType = {};\n    for (const key in Type) {\n      ReverseType[Type[key]] = key;\n    }\n  }\n\n  return ReverseType[typeKey];\n}\n","import type {TypedArray} from '../../types';\nimport {DataType, Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8} from '../schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T>;\n  private _settlers: ArrayQueue<{resolve; reject}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{resolve; reject}>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n","// Copyright (C) 2018-2019 HERE Europe B.V.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst QUANTIZED_MESH_HEADER = new Map([\n  ['centerX', Float64Array.BYTES_PER_ELEMENT],\n  ['centerY', Float64Array.BYTES_PER_ELEMENT],\n  ['centerZ', Float64Array.BYTES_PER_ELEMENT],\n\n  ['minHeight', Float32Array.BYTES_PER_ELEMENT],\n  ['maxHeight', Float32Array.BYTES_PER_ELEMENT],\n\n  ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT],\n  ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT],\n\n  ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT],\n  ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]\n]);\n\nfunction decodeZigZag(value) {\n  return (value >> 1) ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  let position = 0;\n  const header = {};\n\n  for (const [key, bytesCount] of QUANTIZED_MESH_HEADER) {\n    const getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n\n    header[key] = getter.call(dataView, position, true);\n    position += bytesCount;\n  }\n\n  return {header, headerEndPosition: position};\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  let position = headerEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = dataView.getUint32(position, true);\n  const vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  const elementArrayLength = vertexCount * bytesPerArrayElement;\n  const uArrayStartPosition = position;\n  const vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  const heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(\n      dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true)\n    );\n\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n\n  return {vertexData, vertexDataEndPosition: position};\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex, encoded = true) {\n  let indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  let highest = 0;\n\n  for (let i = 0; i < indices.length; ++i) {\n    const code = indices[i];\n\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  let position = vertexDataEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - (position % bytesPerIndex);\n  }\n\n  const triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const triangleIndicesCount = triangleCount * 3;\n  const triangleIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    triangleIndicesCount,\n    bytesPerIndex\n  );\n  position += triangleIndicesCount * bytesPerIndex;\n\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  let position = triangleIndicesEndPosition;\n  const elementsPerVertex = 3;\n  const vertexCount = vertexData.length / elementsPerVertex;\n  const bytesPerIndex =\n    vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  const westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n\n  const southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const southIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    southVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += southVertexCount * bytesPerIndex;\n\n  const eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n\n  const northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n\n  const northIndices = decodeIndex(\n    dataView.buffer,\n    position,\n    northVertexCount,\n    bytesPerIndex,\n    false\n  );\n  position += northVertexCount * bytesPerIndex;\n\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices,\n    southIndices,\n    eastIndices,\n    northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(\n    extensionDataView.buffer,\n    extensionDataView.byteOffset,\n    extensionDataView.byteLength\n  );\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(\n    extensionDataView.byteOffset,\n    extensionDataView.byteOffset + extensionDataView.byteLength\n  );\n}\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  const extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {extensions, extensionsEndPosition: indicesEndPosition};\n  }\n\n  let position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    const extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n\n    const extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n\n    const extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1: {\n        extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n\n        break;\n      }\n      case 2: {\n        extensions.waterMask = decodeWaterMaskExtension(extensionView);\n\n        break;\n      }\n      default: {\n        // console.warn(`Unknown extension with id ${extensionId}`)\n      }\n    }\n\n    position += extensionLength;\n  }\n\n  return {extensions, extensionsEndPosition: position};\n}\n\nexport const DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\n\nconst DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nexport default function decode(data, userOptions) {\n  const options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  const view = new DataView(data);\n  const {header, headerEndPosition} = decodeHeader(view);\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {header};\n  }\n\n  const {vertexData, vertexDataEndPosition} = decodeVertexData(view, headerEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {header, vertexData};\n  }\n\n  const {triangleIndices, triangleIndicesEndPosition} = decodeTriangleIndices(\n    view,\n    vertexData,\n    vertexDataEndPosition\n  );\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {header, vertexData, triangleIndices};\n  }\n\n  const {westIndices, southIndices, eastIndices, northIndices, edgeIndicesEndPosition} =\n    decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition);\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header,\n      vertexData,\n      triangleIndices,\n      westIndices,\n      northIndices,\n      eastIndices,\n      southIndices\n    };\n  }\n\n  const {extensions} = decodeExtensions(view, edgeIndicesEndPosition);\n\n  return {\n    header,\n    vertexData,\n    triangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices,\n    extensions\n  };\n}\n","// TYPES\nexport type {\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions,\n  Writer,\n  WriterOptions,\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  IFileSystem,\n  IRandomAccessReadFileSystem\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {\n  isBrowser,\n  isWorker,\n  nodeVersion,\n  self,\n  window,\n  global,\n  document\n} from './lib/env-utils/globals';\n\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport {createLoaderWorker} from './lib/worker-loader-utils/create-loader-worker';\nexport {parseWithWorker, canParseWithWorker} from './lib/worker-loader-utils/parse-with-worker';\n\n// PARSER UTILS\nexport {parseJSON} from './lib/parser-utils/parse-json';\n\n// MEMORY COPY UTILS\nexport {\n  toArrayBuffer,\n  sliceArrayBuffer,\n  concatenateArrayBuffers,\n  concatenateTypedArrays,\n  compareArrayBuffers\n} from './lib/binary-utils/array-buffer-utils';\nexport {padToNBytes, copyToArray, copyArrayBuffer} from './lib/binary-utils/memory-copy-utils';\nexport {\n  copyPaddedArrayBufferToDataView,\n  copyPaddedStringToDataView\n} from './lib/binary-utils/binary-copy-utils';\nexport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from './lib/binary-utils/encode-utils';\nexport {getFirstCharacters, getMagicString} from './lib/binary-utils/get-first-characters';\n\n// ITERATOR UTILS\nexport {\n  makeTextEncoderIterator,\n  makeTextDecoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from './lib/iterators/text-iterators';\nexport {forEach, concatenateArrayBuffersAsync} from './lib/iterators/async-iteration';\n\n// REQUEST UTILS\nexport {default as RequestScheduler} from './lib/request-utils/request-scheduler';\n\n// NODE `path`` REPLACEMENT\nimport * as path from './lib/path-utils/path';\nexport {path};\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/path-utils/file-aliases';\nexport {addAliases as _addAliases} from './lib/path-utils/file-aliases';\n\n// NODE `fs` WRAPPERS\nimport * as fs from './lib/node/fs';\nexport {fs};\n\n// NODE `buffer` WRAPPERS\nexport {isBuffer, toBuffer, bufferToArrayBuffer} from './lib/binary-utils/buffer-utils';\n\nexport {JSONLoader} from './json-loader';\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","import type {\n  WorkerObject,\n  WorkerOptions,\n  WorkerContext,\n  WorkerMessageType,\n  WorkerMessagePayload\n} from '../../types';\nimport type WorkerJob from '../worker-farm/worker-job';\nimport WorkerFarm from '../worker-farm/worker-farm';\nimport {removeNontransferableOptions} from '../worker-utils/remove-nontransferable-options';\nimport {getWorkerURL, getWorkerName} from './get-worker-url';\n\ntype ProcessOnWorkerOptions = WorkerOptions & {\n  jobName?: string;\n  [key: string]: any;\n};\n\n/**\n * Determines if we can parse with worker\n * @param loader\n * @param data\n * @param options\n */\nexport function canProcessOnWorker(worker: WorkerObject, options?: WorkerOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return worker.worker && options?.worker;\n}\n\n/**\n * This function expects that the worker thread sends certain messages,\n * Creating such a worker can be automated if the worker is wrapper by a call to\n * createWorker in @loaders.gl/worker-utils.\n */\nexport async function processOnWorker(\n  worker: WorkerObject,\n  data: any,\n  options: ProcessOnWorkerOptions = {},\n  context: WorkerContext = {}\n): Promise<any> {\n  const name = getWorkerName(worker);\n  const url = getWorkerURL(worker, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  const jobName = options.jobName || worker.name;\n  const job = await workerPool.startJob(\n    jobName,\n    // eslint-disable-next-line\n    onMessage.bind(null, context)\n  );\n\n  // Kick off the processing in the worker\n  const transferableOptions = removeNontransferableOptions(options);\n  job.postMessage('process', {input: data, options: transferableOptions});\n\n  const result = await job.result;\n  return result.result;\n}\n\n/**\n * Job completes when we receive the result\n * @param job\n * @param message\n */\nasync function onMessage(\n  context: WorkerContext,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      // Worker is done\n      job.done(payload);\n      break;\n\n    case 'error':\n      // Worker encountered an error\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for us (main thread) to process something\n      const {id, input, options} = payload;\n      try {\n        if (!context.process) {\n          job.postMessage('error', {id, error: 'Worker not set up to process on main thread'});\n          return;\n        }\n        const result = await context.process(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`process-on-worker: unknown message ${type}`);\n  }\n}\n","/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object: object): object {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\n\nfunction stringifyJSON(v) {\n  const cache = new Set();\n  return JSON.stringify(v, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}\n","import type {\n  WorkerMessageType,\n  WorkerMessagePayload,\n  WorkerContext,\n  Process,\n  ProcessInBatches\n} from '../../types';\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n// import {validateWorkerVersion} from './validate-worker-version';\n\n/** Counter for jobs */\nlet requestId = 0;\nlet inputBatches;\nlet options;\n\nexport type ProcessOnMainThread = (data: any, options?: {[key: string]: any}, context?) => any;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process: Process, processInBatches?: ProcessInBatches): void {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  const context: WorkerContext = {\n    process: processOnMainThread\n  };\n\n  // eslint-disable-next-line complexity\n  WorkerBody.onmessage = async (type: WorkerMessageType, payload: WorkerMessagePayload) => {\n    try {\n      switch (type) {\n        case 'process':\n          if (!process) {\n            throw new Error('Worker does not support atomic processing');\n          }\n          const result = await process(payload.input, payload.options || {}, context);\n          WorkerBody.postMessage('done', {result});\n          break;\n\n        case 'process-in-batches':\n          if (!processInBatches) {\n            throw new Error('Worker does not support batched processing');\n          }\n          inputBatches = new AsyncQueue();\n          options = payload.options || {};\n          const resultIterator = processInBatches(inputBatches, options, context?.processInBatches);\n          for await (const batch of resultIterator) {\n            WorkerBody.postMessage('output-batch', {result: batch});\n          }\n          WorkerBody.postMessage('done', {});\n          break;\n\n        case 'input-batch':\n          inputBatches.push(payload.input);\n          break;\n\n        case 'input-done':\n          inputBatches.close();\n          break;\n\n        default:\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : '';\n      WorkerBody.postMessage('error', {error: message});\n    }\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options = {}) {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","/* eslint-disable no-console */\nimport {spawn, ChildProcess, SpawnOptionsWithoutStdio} from 'child_process';\nimport {getAvailablePort} from './process-utils';\n\nexport type ChildProcessProxyProps = {\n  command: string;\n  arguments: string[];\n  /** Whether to add a port specified arg */\n  portArg?: string;\n  /** Base port number */\n  port?: number;\n  /** Whether to search for an available port if the base port is occupied */\n  autoPort?: boolean;\n  /** Number of milliseconds to wait until concluding success */\n  /** wait: 0 - infinity */\n  wait?: number;\n  /** Options passed on to Node'.js `spawn` */\n  spawn?: SpawnOptionsWithoutStdio;\n  /** Callback when the  */\n  onStart?: (proxy: ChildProcessProxy) => void;\n  onSuccess?: (proxy: ChildProcessProxy) => void;\n};\n\nconst DEFAULT_PROPS: ChildProcessProxyProps = {\n  command: '',\n  arguments: [],\n  port: 5000,\n  autoPort: true,\n  wait: 2000,\n  onSuccess: (processProxy) => {\n    console.log(`Started ${processProxy.props.command}`);\n  }\n};\n\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n  id: string;\n  props: ChildProcessProxyProps = {...DEFAULT_PROPS};\n  private childProcess: ChildProcess | null = null;\n  private port: number = 0;\n  private successTimer?;\n\n  // constructor(props?: {id?: string});\n  constructor({id = 'browser-driver'} = {}) {\n    this.id = id;\n  }\n\n  /** Starts a child process with the provided props */\n  async start(props: ChildProcessProxyProps): Promise<object> {\n    props = {...DEFAULT_PROPS, ...props};\n    this.props = props;\n\n    const args = [...props.arguments];\n\n    // If portArg is set, we can look up an available port\n    this.port = Number(props.port);\n    if (props.portArg) {\n      if (props.autoPort) {\n        this.port = await getAvailablePort(props.port);\n      }\n      args.push(props.portArg, String(this.port));\n    }\n\n    return await new Promise((resolve, reject) => {\n      try {\n        this._setTimeout(() => {\n          if (props.onSuccess) {\n            props.onSuccess(this);\n          }\n          resolve({});\n        });\n\n        console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n        const childProcess = spawn(props.command, args, props.spawn);\n        this.childProcess = childProcess;\n\n        childProcess.stdout.on('data', (data) => {\n          console.log(data.toString());\n        });\n        // TODO - add option regarding whether stderr should be treated as data\n        childProcess.stderr.on('data', (data) => {\n          console.log(`Child process wrote to stderr: \"${data}\".`);\n          this._clearTimeout();\n          reject(new Error(data));\n        });\n        childProcess.on('error', (error) => {\n          console.log(`Child process errored with ${error}`);\n          this._clearTimeout();\n          reject(error);\n        });\n        childProcess.on('close', (code) => {\n          console.log(`Child process exited with ${code}`);\n          this.childProcess = null;\n          this._clearTimeout();\n          resolve({});\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /** Stops a running child process */\n  async stop(): Promise<void> {\n    if (this.childProcess) {\n      this.childProcess.kill();\n      this.childProcess = null;\n    }\n  }\n\n  /** Exits this process */\n  async exit(statusCode: number = 0): Promise<void> {\n    try {\n      await this.stop();\n      // eslint-disable-next-line no-process-exit\n      process.exit(statusCode);\n    } catch (error) {\n      console.error(error.message || error);\n      // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    }\n  }\n\n  _setTimeout(callback: (...args: any[]) => void) {\n    if (Number(this.props.wait) > 0) {\n      this.successTimer = setTimeout(callback, this.props.wait);\n    }\n  }\n\n  _clearTimeout() {\n    if (this.successTimer) {\n      clearTimeout(this.successTimer);\n    }\n  }\n}\n","import ChildProcess from 'child_process';\n\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort: number = 3000): Promise<number> {\n  return new Promise((resolve) => {\n    // Get a list of all ports in use\n    ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout) => {\n      if (error) {\n        // likely no permission, e.g. CI\n        resolve(defaultPort);\n        return;\n      }\n\n      const portsInUse: number[] = [];\n      const regex = /:(\\d+) \\(LISTEN\\)/;\n      stdout.split('\\n').forEach((line) => {\n        const match = regex.exec(line);\n        if (match) {\n          portsInUse.push(Number(match[1]));\n        }\n      });\n      let port = defaultPort;\n      while (portsInUse.includes(port)) {\n        port++;\n      }\n      resolve(port);\n    });\n  });\n}\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n/**\n * Minimal JSON parser that throws more meaningful error messages\n */\nexport function parseJSON(string: string): any {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n","import {TypedArray} from '../../types';\nimport {padToNBytes} from './memory-copy-utils';\n\n/**\n * Copy sourceBuffer to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {Array | TypedArray} sourceBuffer - source data buffer\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedArrayBufferToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  sourceBuffer: TypedArray,\n  padding: number\n) {\n  const paddedLength = padToNBytes(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    // Copy array\n    const targetArray = new Uint8Array(\n      dataView.buffer,\n      dataView.byteOffset + byteOffset,\n      sourceBuffer.byteLength\n    );\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    // Add PADDING\n    for (let i = 0; i < padLength; ++i) {\n      // json chunk is padded with spaces (ASCII 0x20)\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\n/**\n * Copy string to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {string} string - source string\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedStringToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  string: string,\n  padding: number\n): number {\n  const textEncoder = new TextEncoder();\n  // PERFORMANCE IDEA: We encode twice, once to get size and once to store\n  // PERFORMANCE IDEA: Use TextEncoder.encodeInto() to avoid temporary copy\n  const stringBuffer = textEncoder.encode(string);\n\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n\n  return byteOffset;\n}\n","// Note: These were broken out from gltf loader...\n// eslint-disable-next-line complexity\n\n// PERFORMANCE IDEA: No need to copy string twice...\nexport function padStringToByteAlignment(string, byteAlignment) {\n  const length = string.length;\n  const paddedLength = Math.ceil(length / byteAlignment) * byteAlignment; // Round up to the required alignment\n  const padding = paddedLength - length;\n  let whitespace = '';\n  for (let i = 0; i < padding; ++i) {\n    whitespace += ' ';\n  }\n  return string + whitespace;\n}\n\nexport function copyStringToDataView(dataView, byteOffset, string, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, string.charCodeAt(i));\n    }\n  }\n  return byteOffset + byteLength;\n}\n\nexport function copyBinaryToDataView(dataView, byteOffset, binary, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, binary[i]);\n    }\n  }\n  return byteOffset + byteLength;\n}\n","// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* makeTextDecoderIterator(\n  arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: TextDecoderOptions = {}\n): AsyncIterable<string> {\n  const textDecoder = new TextDecoder(undefined, options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* makeTextEncoderIterator(\n  textIterator: AsyncIterable<string> | Iterable<ArrayBuffer>\n): AsyncIterable<ArrayBuffer> {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* makeLineIterator(\n  textIterator: AsyncIterable<string>\n): AsyncIterable<string> {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* makeNumberedLineIterator(\n  lineIterator: AsyncIterable<string>\n): AsyncIterable<{counter: number; line: string}> {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import {Stats} from '@probe.gl/stats';\n\ntype Handle = any;\ntype DoneFunction = () => any;\ntype GetPriorityFunction = () => number;\ntype RequestResult = {\n  done: DoneFunction;\n} | null;\n\n/** RequestScheduler Options */\nexport type RequestSchedulerProps = {\n  id?: string;\n  throttleRequests?: boolean;\n  maxRequests?: number;\n};\n\nconst STAT_QUEUED_REQUESTS = 'Queued Requests';\nconst STAT_ACTIVE_REQUESTS = 'Active Requests';\nconst STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nconst STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nconst STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\n\nconst DEFAULT_PROPS: Required<RequestSchedulerProps> = {\n  id: 'request-scheduler',\n  // Specifies if the request scheduler should throttle incoming requests, mainly for comparative testing\n  throttleRequests: true,\n  // The maximum number of simultaneous active requests. Un-throttled requests do not observe this limit.\n  maxRequests: 6\n};\n\n/** Tracks one request */\ntype Request = {\n  handle: Handle;\n  priority: number;\n  getPriority: GetPriorityFunction;\n  resolve?: (value: any) => any;\n};\n\n/**\n * Used to issue a request, without having them \"deeply queued\" by the browser.\n * @todo - Track requests globally, across multiple servers\n */\nexport default class RequestScheduler {\n  readonly props: Required<RequestSchedulerProps>;\n  readonly stats: Stats;\n  activeRequestCount: number = 0;\n\n  /** Tracks the number of active requests and prioritizes/cancels queued requests. */\n  private requestQueue: Request[] = [];\n  private requestMap: Map<Handle, Promise<RequestResult>> = new Map();\n  private deferredUpdate: any = null;\n\n  constructor(props: RequestSchedulerProps = {}) {\n    this.props = {...DEFAULT_PROPS, ...props};\n\n    // Returns the statistics used by the request scheduler.\n    this.stats = new Stats({id: this.props.id});\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n  }\n\n  /**\n   * Called by an application that wants to issue a request, without having it deeply queued by the browser\n   *\n   * When the returned promise resolved, it is OK for the application to issue a request.\n   * The promise resolves to an object that contains a `done` method.\n   * When the application's request has completed (or failed), the application must call the `done` function\n   *\n   * @param handle\n   * @param getPriority will be called when request \"slots\" open up,\n   *    allowing the caller to update priority or cancel the request\n   *    Highest priority executes first, priority < 0 cancels the request\n   * @returns a promise\n   *   - resolves to a object (with a `done` field) when the request can be issued without queueing,\n   *   - resolves to `null` if the request has been cancelled (by the callback return < 0).\n   *     In this case the application should not issue the request\n   */\n  scheduleRequest(\n    handle: Handle,\n    getPriority: GetPriorityFunction = () => 0\n  ): Promise<RequestResult> {\n    // Allows throttling to be disabled\n    if (!this.props.throttleRequests) {\n      return Promise.resolve({done: () => {}});\n    }\n\n    // dedupe\n    if (this.requestMap.has(handle)) {\n      return this.requestMap.get(handle) as Promise<any>;\n    }\n\n    const request: Request = {handle, priority: 0, getPriority};\n    const promise = new Promise<RequestResult>((resolve) => {\n      // @ts-ignore\n      request.resolve = resolve;\n      return request;\n    });\n\n    this.requestQueue.push(request);\n    this.requestMap.set(handle, promise);\n    this._issueNewRequests();\n    return promise;\n  }\n\n  // PRIVATE\n\n  _issueRequest(request: Request): Promise<any> {\n    const {handle, resolve} = request;\n    let isDone = false;\n\n    const done = () => {\n      // can only be called once\n      if (!isDone) {\n        isDone = true;\n\n        // Stop tracking a request - it has completed, failed, cancelled etc\n        this.requestMap.delete(handle);\n        this.activeRequestCount--;\n        // A slot just freed up, see if any queued requests are waiting\n        this._issueNewRequests();\n      }\n    };\n\n    // Track this request\n    this.activeRequestCount++;\n\n    return resolve ? resolve({done}) : Promise.resolve({done});\n  }\n\n  /** We check requests asynchronously, to prevent multiple updates */\n  _issueNewRequests(): void {\n    if (!this.deferredUpdate) {\n      this.deferredUpdate = setTimeout(() => this._issueNewRequestsAsync(), 0);\n    }\n  }\n\n  /** Refresh all requests  */\n  _issueNewRequestsAsync() {\n    // TODO - shouldn't we clear the timeout?\n    this.deferredUpdate = null;\n\n    const freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n    if (freeSlots === 0) {\n      return;\n    }\n\n    this._updateAllRequests();\n\n    // Resolve pending promises for the top-priority requests\n    for (let i = 0; i < freeSlots; ++i) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        this._issueRequest(request); // eslint-disable-line @typescript-eslint/no-floating-promises\n      }\n    }\n\n    // Uncomment to debug\n    // console.log(`${freeSlots} free slots, ${this.requestQueue.length} queued requests`);\n  }\n\n  /** Ensure all requests have updated priorities, and that no longer valid requests are cancelled */\n  _updateAllRequests() {\n    const requestQueue = this.requestQueue;\n    for (let i = 0; i < requestQueue.length; ++i) {\n      const request = requestQueue[i];\n      if (!this._updateRequest(request)) {\n        // Remove the element and make sure to adjust the counter to account for shortened array\n        requestQueue.splice(i, 1);\n        this.requestMap.delete(request.handle);\n        i--;\n      }\n    }\n\n    // Sort the remaining requests based on priority\n    requestQueue.sort((a, b) => a.priority - b.priority);\n  }\n\n  /** Update a single request by calling the callback */\n  _updateRequest(request) {\n    request.priority = request.getPriority(request.handle); // eslint-disable-line callback-return\n\n    // by returning a negative priority, the callback cancels the request\n    if (request.priority < 0) {\n      request.resolve(null);\n      return false;\n    }\n    return true;\n  }\n}\n","// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\n\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url: string): string {\n  const slashIndex = url && url.lastIndexOf('/');\n  return slashIndex >= 0 ? url.substr(0, slashIndex as number) : '';\n}\n\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts: string[]): string {\n  const separator = '/';\n  parts = parts.map((part, index) => {\n    if (index) {\n      part = part.replace(new RegExp(`^${separator}`), '');\n    }\n    if (index !== parts.length - 1) {\n      part = part.replace(new RegExp(`${separator}$`), '');\n    }\n    return part;\n  });\n  return parts.join(separator);\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","// fs wrapper (promisified fs + avoids bundling fs in browsers)\nimport fs from 'fs';\nimport {toArrayBuffer} from './buffer-utils.node';\nimport {promisify} from 'util';\n\nconst error = (fsFunction) => () => {\n  throw new Error(`${fsFunction} not available in browser`);\n};\n\nexport const isSupported = Boolean(fs);\n\nexport const open = fs?.open ? promisify(fs.open) : error('fs.open');\nexport const close = fs?.close ? promisify(fs.close) : error('fs.close');\nexport const read = fs?.read ? promisify(fs.read) : error('fs.read');\n\nexport const readFile = fs?.readFile ? promisify(fs.readFile) : error('fs.readFile');\nexport const readFileSync = fs?.readFileSync ? fs.readFileSync : error('fs.readFileSync');\nexport const writeFile = fs?.writeFile ? promisify(fs.writeFile) : error('fs.writeFile');\nexport const writeFileSync = fs?.writeFileSync ? fs.writeFileSync : error('fs.writeFileSync');\n\nexport async function _readToArrayBuffer(fd: number, start: number, length: number) {\n  const buffer = Buffer.alloc(length);\n  const {bytesRead} = await read(fd, buffer, 0, length, start);\n  if (bytesRead !== length) {\n    throw new Error('fs.read failed');\n  }\n  return toArrayBuffer(buffer);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","import * as node from '../node/buffer-utils.node';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n","import {getMeshBoundingBox} from '@loaders.gl/schema';\nimport Martini from '@mapbox/martini';\nimport Delatin from './delatin';\nimport {addSkirt} from './helpers/skirt';\n\nfunction getTerrain(imageData, width, height, elevationDecoder, tesselator) {\n  const {rScaler, bScaler, gScaler, offset} = elevationDecoder;\n\n  // From Martini demo\n  // https://observablehq.com/@mourner/martin-real-time-rtin-terrain-mesh\n  const terrain = new Float32Array((width + 1) * (height + 1));\n  // decode terrain values\n  for (let i = 0, y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++, i++) {\n      const k = i * 4;\n      const r = imageData[k + 0];\n      const g = imageData[k + 1];\n      const b = imageData[k + 2];\n      terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n    }\n  }\n\n  if (tesselator === 'martini') {\n    // backfill bottom border\n    for (let i = (width + 1) * width, x = 0; x < width; x++, i++) {\n      terrain[i] = terrain[i - width - 1];\n    }\n    // backfill right border\n    for (let i = height, y = 0; y < height + 1; y++, i += height + 1) {\n      terrain[i] = terrain[i - 1];\n    }\n  }\n\n  return terrain;\n}\n\nfunction getMeshAttributes(vertices, terrain, width, height, bounds) {\n  const gridSize = width + 1;\n  const numOfVerticies = vertices.length / 2;\n  // vec3. x, y in pixels, z in meters\n  const positions = new Float32Array(numOfVerticies * 3);\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(numOfVerticies * 2);\n\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, width, height];\n  const xScale = (maxX - minX) / width;\n  const yScale = (maxY - minY) / height;\n\n  for (let i = 0; i < numOfVerticies; i++) {\n    const x = vertices[i * 2];\n    const y = vertices[i * 2 + 1];\n    const pixelIdx = y * gridSize + x;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = -y * yScale + maxY;\n    positions[3 * i + 2] = terrain[pixelIdx];\n\n    texCoords[2 * i + 0] = x / width;\n    texCoords[2 * i + 1] = y / height;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n\n/**\n * Returns generated mesh object from image data\n *\n * @param {object} terrainImage terrain image data\n * @param {object} terrainOptions terrain options\n * @returns mesh object\n */\nfunction getMesh(terrainImage, terrainOptions) {\n  if (terrainImage === null) {\n    return null;\n  }\n  const {meshMaxError, bounds, elevationDecoder} = terrainOptions;\n\n  const {data, width, height} = terrainImage;\n\n  let terrain;\n  let mesh;\n  switch (terrainOptions.tesselator) {\n    case 'martini':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      break;\n    case 'delatin':\n      terrain = getTerrain(data, width, height, elevationDecoder, terrainOptions.tesselator);\n      mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      break;\n    // auto\n    default:\n      if (width === height && !(height & (width - 1))) {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'martini');\n        mesh = getMartiniTileMesh(meshMaxError, width, terrain);\n      } else {\n        terrain = getTerrain(data, width, height, elevationDecoder, 'delatin');\n        mesh = getDelatinTileMesh(meshMaxError, width, height, terrain);\n      }\n      break;\n  }\n\n  const {vertices} = mesh;\n  let {triangles} = mesh;\n  let attributes = getMeshAttributes(vertices, terrain, width, height, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (terrainOptions.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangles,\n      terrainOptions.skirtHeight\n    );\n    attributes = newAttributes;\n    triangles = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      vertexCount: triangles.length,\n      boundingBox\n    },\n    mode: 4, // TRIANGLES\n    indices: {value: Uint32Array.from(triangles), size: 1},\n    attributes\n  };\n}\n\n/**\n * Get Martini generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: Uint16Array, triangles: Uint32Array}} vertices and triangles data\n */\nfunction getMartiniTileMesh(meshMaxError, width, terrain) {\n  const gridSize = width + 1;\n  const martini = new Martini(gridSize);\n  const tile = martini.createTile(terrain);\n  const {vertices, triangles} = tile.getMesh(meshMaxError);\n\n  return {vertices, triangles};\n}\n\n/**\n * Get Delatin generated vertices and triangles\n *\n * @param {number} meshMaxError threshold for simplifying mesh\n * @param {number} width width of the input data array\n * @param {number} height height of the input data array\n * @param {number[] | Float32Array} terrain elevation data\n * @returns {{vertices: number[], triangles: number[]}} vertices and triangles data\n */\nfunction getDelatinTileMesh(meshMaxError, width, height, terrain) {\n  const tin = new Delatin(terrain, width + 1, height + 1);\n  tin.run(meshMaxError);\n  const {coords, triangles} = tin;\n  const vertices = coords;\n  return {vertices, triangles};\n}\n\nexport default async function loadTerrain(arrayBuffer, options, context) {\n  options.image = options.image || {};\n  options.image.type = 'data';\n  const image = await context.parse(arrayBuffer, options, options.baseUri);\n  // Extend function to support additional mesh generation options (square grid or delatin)\n  return getMesh(image, options.terrain);\n}\n","\nexport default class Martini {\n    constructor(gridSize = 257) {\n        this.gridSize = gridSize;\n        const tileSize = gridSize - 1;\n        if (tileSize & (tileSize - 1)) throw new Error(\n            `Expected grid size to be 2^n+1, got ${gridSize}.`);\n\n        this.numTriangles = tileSize * tileSize * 2 - 2;\n        this.numParentTriangles = this.numTriangles - tileSize * tileSize;\n\n        this.indices = new Uint32Array(this.gridSize * this.gridSize);\n\n        // coordinates for all possible triangles in an RTIN tile\n        this.coords = new Uint16Array(this.numTriangles * 4);\n\n        // get triangle coordinates from its index in an implicit binary tree\n        for (let i = 0; i < this.numTriangles; i++) {\n            let id = i + 2;\n            let ax = 0, ay = 0, bx = 0, by = 0, cx = 0, cy = 0;\n            if (id & 1) {\n                bx = by = cx = tileSize; // bottom-left triangle\n            } else {\n                ax = ay = cy = tileSize; // top-right triangle\n            }\n            while ((id >>= 1) > 1) {\n                const mx = (ax + bx) >> 1;\n                const my = (ay + by) >> 1;\n\n                if (id & 1) { // left half\n                    bx = ax; by = ay;\n                    ax = cx; ay = cy;\n                } else { // right half\n                    ax = bx; ay = by;\n                    bx = cx; by = cy;\n                }\n                cx = mx; cy = my;\n            }\n            const k = i * 4;\n            this.coords[k + 0] = ax;\n            this.coords[k + 1] = ay;\n            this.coords[k + 2] = bx;\n            this.coords[k + 3] = by;\n        }\n    }\n\n    createTile(terrain) {\n        return new Tile(terrain, this);\n    }\n}\n\nclass Tile {\n    constructor(terrain, martini) {\n        const size = martini.gridSize;\n        if (terrain.length !== size * size) throw new Error(\n            `Expected terrain data of length ${size * size} (${size} x ${size}), got ${terrain.length}.`);\n\n        this.terrain = terrain;\n        this.martini = martini;\n        this.errors = new Float32Array(terrain.length);\n        this.update();\n    }\n\n    update() {\n        const {numTriangles, numParentTriangles, coords, gridSize: size} = this.martini;\n        const {terrain, errors} = this;\n\n        // iterate over all possible triangles, starting from the smallest level\n        for (let i = numTriangles - 1; i >= 0; i--) {\n            const k = i * 4;\n            const ax = coords[k + 0];\n            const ay = coords[k + 1];\n            const bx = coords[k + 2];\n            const by = coords[k + 3];\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n            const cx = mx + my - ay;\n            const cy = my + ax - mx;\n\n            // calculate error in the middle of the long edge of the triangle\n            const interpolatedHeight = (terrain[ay * size + ax] + terrain[by * size + bx]) / 2;\n            const middleIndex = my * size + mx;\n            const middleError = Math.abs(interpolatedHeight - terrain[middleIndex]);\n\n            errors[middleIndex] = Math.max(errors[middleIndex], middleError);\n\n            if (i < numParentTriangles) { // bigger triangles; accumulate error with children\n                const leftChildIndex = ((ay + cy) >> 1) * size + ((ax + cx) >> 1);\n                const rightChildIndex = ((by + cy) >> 1) * size + ((bx + cx) >> 1);\n                errors[middleIndex] = Math.max(errors[middleIndex], errors[leftChildIndex], errors[rightChildIndex]);\n            }\n        }\n    }\n\n    getMesh(maxError = 0) {\n        const {gridSize: size, indices} = this.martini;\n        const {errors} = this;\n        let numVertices = 0;\n        let numTriangles = 0;\n        const max = size - 1;\n\n        // use an index grid to keep track of vertices that were already used to avoid duplication\n        indices.fill(0);\n\n        // retrieve mesh in two stages that both traverse the error map:\n        // - countElements: find used vertices (and assign each an index), and count triangles (for minimum allocation)\n        // - processTriangle: fill the allocated vertices & triangles typed arrays\n\n        function countElements(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                countElements(cx, cy, ax, ay, mx, my);\n                countElements(bx, by, cx, cy, mx, my);\n            } else {\n                indices[ay * size + ax] = indices[ay * size + ax] || ++numVertices;\n                indices[by * size + bx] = indices[by * size + bx] || ++numVertices;\n                indices[cy * size + cx] = indices[cy * size + cx] || ++numVertices;\n                numTriangles++;\n            }\n        }\n        countElements(0, 0, max, max, max, 0);\n        countElements(max, max, 0, 0, 0, max);\n\n        const vertices = new Uint16Array(numVertices * 2);\n        const triangles = new Uint32Array(numTriangles * 3);\n        let triIndex = 0;\n\n        function processTriangle(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                // triangle doesn't approximate the surface well enough; drill down further\n                processTriangle(cx, cy, ax, ay, mx, my);\n                processTriangle(bx, by, cx, cy, mx, my);\n\n            } else {\n                // add a triangle\n                const a = indices[ay * size + ax] - 1;\n                const b = indices[by * size + bx] - 1;\n                const c = indices[cy * size + cx] - 1;\n\n                vertices[2 * a] = ax;\n                vertices[2 * a + 1] = ay;\n\n                vertices[2 * b] = bx;\n                vertices[2 * b + 1] = by;\n\n                vertices[2 * c] = cx;\n                vertices[2 * c + 1] = cy;\n\n                triangles[triIndex++] = a;\n                triangles[triIndex++] = b;\n                triangles[triIndex++] = c;\n            }\n        }\n        processTriangle(0, 0, max, max, max, 0);\n        processTriangle(max, max, 0, 0, 0, max);\n\n        return {vertices, triangles};\n    }\n}\n","// ISC License\n\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n\n// Permission to use, copy, modify, and / or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS.IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n//   INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n  constructor(data, width, height = width) {\n    this.data = data; // height data\n    this.width = width;\n    this.height = height;\n\n    this.coords = []; // vertex coordinates (x, y)\n    this.triangles = []; // mesh triangle indices\n\n    // additional triangle data\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n\n    this._queue = []; // queue of added triangles\n    this._errors = [];\n    this._rms = [];\n    this._pending = []; // triangles pending addition to queue\n    this._pendingLen = 0;\n\n    this._rmsSum = 0;\n\n    const x1 = width - 1;\n    const y1 = height - 1;\n    const p0 = this._addPoint(0, 0);\n    const p1 = this._addPoint(x1, 0);\n    const p2 = this._addPoint(0, y1);\n    const p3 = this._addPoint(x1, y1);\n\n    // add initial two triangles\n    const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n    this._flush();\n  }\n\n  // refine the mesh until its maximum error gets below the given one\n  run(maxError = 1) {\n    while (this.getMaxError() > maxError) {\n      this.refine();\n    }\n  }\n\n  // refine the mesh with a single point\n  refine() {\n    this._step();\n    this._flush();\n  }\n\n  // max error of the current mesh\n  getMaxError() {\n    return this._errors[0];\n  }\n\n  // root-mean-square deviation of the current mesh\n  getRMSD() {\n    return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n  }\n\n  // height value at a given position\n  heightAt(x, y) {\n    return this.data[this.width * y + x];\n  }\n\n  // rasterize and queue all triangles that got added or updated in _step\n  _flush() {\n    const coords = this.coords;\n    for (let i = 0; i < this._pendingLen; i++) {\n      const t = this._pending[i];\n      // rasterize triangle to find maximum pixel error\n      const a = 2 * this.triangles[t * 3 + 0];\n      const b = 2 * this.triangles[t * 3 + 1];\n      const c = 2 * this.triangles[t * 3 + 2];\n      this._findCandidate(\n        coords[a],\n        coords[a + 1],\n        coords[b],\n        coords[b + 1],\n        coords[c],\n        coords[c + 1],\n        t\n      );\n    }\n    this._pendingLen = 0;\n  }\n\n  // rasterize a triangle, find its max error, and queue it for processing\n  _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n    // triangle bounding box\n    const minX = Math.min(p0x, p1x, p2x);\n    const minY = Math.min(p0y, p1y, p2y);\n    const maxX = Math.max(p0x, p1x, p2x);\n    const maxY = Math.max(p0y, p1y, p2y);\n\n    // forward differencing variables\n    let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n    let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n    let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n    const a01 = p1y - p0y;\n    const b01 = p0x - p1x;\n    const a12 = p2y - p1y;\n    const b12 = p1x - p2x;\n    const a20 = p0y - p2y;\n    const b20 = p2x - p0x;\n\n    // pre-multiplied z values at vertices\n    const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n    const z0 = this.heightAt(p0x, p0y) / a;\n    const z1 = this.heightAt(p1x, p1y) / a;\n    const z2 = this.heightAt(p2x, p2y) / a;\n\n    // iterate over pixels in bounding box\n    let maxError = 0;\n    let mx = 0;\n    let my = 0;\n    let rms = 0;\n    for (let y = minY; y <= maxY; y++) {\n      // compute starting offset\n      let dx = 0;\n      if (w00 < 0 && a12 !== 0) {\n        dx = Math.max(dx, Math.floor(-w00 / a12));\n      }\n      if (w01 < 0 && a20 !== 0) {\n        dx = Math.max(dx, Math.floor(-w01 / a20));\n      }\n      if (w02 < 0 && a01 !== 0) {\n        dx = Math.max(dx, Math.floor(-w02 / a01));\n      }\n\n      let w0 = w00 + a12 * dx;\n      let w1 = w01 + a20 * dx;\n      let w2 = w02 + a01 * dx;\n\n      let wasInside = false;\n\n      for (let x = minX + dx; x <= maxX; x++) {\n        // check if inside triangle\n        if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n          wasInside = true;\n\n          // compute z using barycentric coordinates\n          const z = z0 * w0 + z1 * w1 + z2 * w2;\n          const dz = Math.abs(z - this.heightAt(x, y));\n          rms += dz * dz;\n          if (dz > maxError) {\n            maxError = dz;\n            mx = x;\n            my = y;\n          }\n        } else if (wasInside) {\n          break;\n        }\n\n        w0 += a12;\n        w1 += a20;\n        w2 += a01;\n      }\n\n      w00 += b12;\n      w01 += b20;\n      w02 += b01;\n    }\n\n    if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n      maxError = 0;\n    }\n\n    // update triangle metadata\n    this._candidates[2 * t] = mx;\n    this._candidates[2 * t + 1] = my;\n    this._rms[t] = rms;\n\n    // add triangle to priority queue\n    this._queuePush(t, maxError, rms);\n  }\n\n  // process the next triangle in the queue, splitting it with a new point\n  _step() {\n    // pop triangle with highest error from priority queue\n    const t = this._queuePop();\n\n    const e0 = t * 3 + 0;\n    const e1 = t * 3 + 1;\n    const e2 = t * 3 + 2;\n\n    const p0 = this.triangles[e0];\n    const p1 = this.triangles[e1];\n    const p2 = this.triangles[e2];\n\n    const ax = this.coords[2 * p0];\n    const ay = this.coords[2 * p0 + 1];\n    const bx = this.coords[2 * p1];\n    const by = this.coords[2 * p1 + 1];\n    const cx = this.coords[2 * p2];\n    const cy = this.coords[2 * p2 + 1];\n    const px = this._candidates[2 * t];\n    const py = this._candidates[2 * t + 1];\n\n    const pn = this._addPoint(px, py);\n\n    if (orient(ax, ay, bx, by, px, py) === 0) {\n      this._handleCollinear(pn, e0);\n    } else if (orient(bx, by, cx, cy, px, py) === 0) {\n      this._handleCollinear(pn, e1);\n    } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n      this._handleCollinear(pn, e2);\n    } else {\n      const h0 = this._halfedges[e0];\n      const h1 = this._halfedges[e1];\n      const h2 = this._halfedges[e2];\n\n      const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n      const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n      const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n      this._legalize(t0);\n      this._legalize(t1);\n      this._legalize(t2);\n    }\n  }\n\n  // add coordinates for a new vertex\n  _addPoint(x, y) {\n    const i = this.coords.length >> 1;\n    this.coords.push(x, y);\n    return i;\n  }\n\n  // add or update a triangle in the mesh\n  _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n    const t = e / 3; // new triangle index\n\n    // add triangle vertices\n    this.triangles[e + 0] = a;\n    this.triangles[e + 1] = b;\n    this.triangles[e + 2] = c;\n\n    // add triangle halfedges\n    this._halfedges[e + 0] = ab;\n    this._halfedges[e + 1] = bc;\n    this._halfedges[e + 2] = ca;\n\n    // link neighboring halfedges\n    if (ab >= 0) {\n      this._halfedges[ab] = e + 0;\n    }\n    if (bc >= 0) {\n      this._halfedges[bc] = e + 1;\n    }\n    if (ca >= 0) {\n      this._halfedges[ca] = e + 2;\n    }\n\n    // init triangle metadata\n    this._candidates[2 * t + 0] = 0;\n    this._candidates[2 * t + 1] = 0;\n    this._queueIndices[t] = -1;\n    this._rms[t] = 0;\n\n    // add triangle to pending queue for later rasterization\n    this._pending[this._pendingLen++] = t;\n\n    // return first halfedge index\n    return e;\n  }\n\n  _legalize(a) {\n    // if the pair of triangles doesn't satisfy the Delaunay condition\n    // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n    // then do the same check/flip recursively for the new pair of triangles\n    //\n    //           pl                    pl\n    //          /||\\                  /  \\\n    //       al/ || \\bl            al/    \\a\n    //        /  ||  \\              /      \\\n    //       /  a||b  \\    flip    /___ar___\\\n    //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n    //        \\  ||  /              \\      /\n    //       ar\\ || /br             b\\    /br\n    //          \\||/                  \\  /\n    //           pr                    pr\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      return;\n    }\n\n    const a0 = a - (a % 3);\n    const b0 = b - (b % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const p1 = this.triangles[bl];\n    const coords = this.coords;\n\n    if (\n      !inCircle(\n        coords[2 * p0],\n        coords[2 * p0 + 1],\n        coords[2 * pr],\n        coords[2 * pr + 1],\n        coords[2 * pl],\n        coords[2 * pl + 1],\n        coords[2 * p1],\n        coords[2 * p1 + 1]\n      )\n    ) {\n      return;\n    }\n\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(a0 / 3);\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n    const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n    this._legalize(t0 + 1);\n    this._legalize(t1 + 2);\n  }\n\n  // handle a case where new vertex is on the edge of a triangle\n  _handleCollinear(pn, a) {\n    const a0 = a - (a % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n      const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n      this._legalize(t0 + 1);\n      this._legalize(t1 + 2);\n      return;\n    }\n\n    const b0 = b - (b % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p1 = this.triangles[bl];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n    const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n    const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n    const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n    this._legalize(t0);\n    this._legalize(t1);\n    this._legalize(t2);\n    this._legalize(t3);\n  }\n\n  // priority queue methods\n\n  _queuePush(t, error, rms) {\n    const i = this._queue.length;\n    this._queueIndices[t] = i;\n    this._queue.push(t);\n    this._errors.push(error);\n    this._rmsSum += rms;\n    this._queueUp(i);\n  }\n\n  _queuePop() {\n    const n = this._queue.length - 1;\n    this._queueSwap(0, n);\n    this._queueDown(0, n);\n    return this._queuePopBack();\n  }\n\n  _queuePopBack() {\n    const t = this._queue.pop();\n    this._errors.pop();\n    this._rmsSum -= this._rms[t];\n    this._queueIndices[t] = -1;\n    return t;\n  }\n\n  _queueRemove(t) {\n    const i = this._queueIndices[t];\n    if (i < 0) {\n      const it = this._pending.indexOf(t);\n      if (it !== -1) {\n        this._pending[it] = this._pending[--this._pendingLen];\n      } else {\n        throw new Error('Broken triangulation (something went wrong).');\n      }\n      return;\n    }\n    const n = this._queue.length - 1;\n    if (n !== i) {\n      this._queueSwap(i, n);\n      if (!this._queueDown(i, n)) {\n        this._queueUp(i);\n      }\n    }\n    this._queuePopBack();\n  }\n\n  _queueLess(i, j) {\n    return this._errors[i] > this._errors[j];\n  }\n\n  _queueSwap(i, j) {\n    const pi = this._queue[i];\n    const pj = this._queue[j];\n    this._queue[i] = pj;\n    this._queue[j] = pi;\n    this._queueIndices[pi] = j;\n    this._queueIndices[pj] = i;\n    const e = this._errors[i];\n    this._errors[i] = this._errors[j];\n    this._errors[j] = e;\n  }\n\n  _queueUp(j0) {\n    let j = j0;\n    while (true) {\n      const i = (j - 1) >> 1;\n      if (i === j || !this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      j = i;\n    }\n  }\n\n  _queueDown(i0, n) {\n    let i = i0;\n    while (true) {\n      const j1 = 2 * i + 1;\n      if (j1 >= n || j1 < 0) {\n        break;\n      }\n      const j2 = j1 + 1;\n      let j = j1;\n      if (j2 < n && this._queueLess(j2, j1)) {\n        j = j2;\n      }\n      if (!this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      i = j;\n    }\n    return i > i0;\n  }\n}\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for quantized meshes\n */\nexport const TerrainLoader = {\n  name: 'Terrain',\n  id: 'terrain',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['png', 'pngraw'],\n  mimeTypes: ['image/png'],\n  options: {\n    terrain: {\n      tesselator: 'auto',\n      bounds: null,\n      meshMaxError: 10,\n      elevationDecoder: {\n        rScaler: 1,\n        gScaler: 0,\n        bScaler: 0,\n        offset: 0\n      },\n      skirtHeight: null\n    }\n  }\n};\n\n/**\n * Loader for quantized meshes\n */\nexport const _typecheckTerrainWorkerLoader: Loader = TerrainLoader;\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\n\n/**\n * Worker loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  name: 'Quantized Mesh',\n  id: 'quantized-mesh',\n  module: 'terrain',\n  version: VERSION,\n  worker: true,\n  extensions: ['terrain'],\n  mimeTypes: ['application/vnd.quantized-mesh'],\n  options: {\n    'quantized-mesh': {\n      bounds: [0, 0, 1, 1],\n      skirtHeight: null\n    }\n  }\n};\n\nexport const _typecheckQuantizedMeshLoader: Loader = QuantizedMeshLoader;\n","import getHiResTimestamp from '../utils/hi-res-timestamp';\nexport default class Stat {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.sampleSize = 1;\n    this.reset();\n  }\n\n  setSampleSize(samples) {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  incrementCount() {\n    this.addCount(1);\n    return this;\n  }\n\n  decrementCount() {\n    this.subtractCount(1);\n    return this;\n  }\n\n  addCount(value) {\n    this._count += value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  subtractCount(value) {\n    this._count -= value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  addTime(time) {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  timeStart() {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n    return this;\n  }\n\n  timeEnd() {\n    if (!this._timerPending) {\n      return this;\n    }\n\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount() {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  getSampleAverageTime() {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  getSampleHz() {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount() {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  getAverageTime() {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  getHz() {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  reset() {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n    return this;\n  }\n\n  _checkSampling() {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n\n}\n//# sourceMappingURL=stat.js.map","import Stat from './stat';\nexport default class Stats {\n  constructor({\n    id,\n    stats\n  }) {\n    this.id = id;\n    this.stats = {};\n\n    this._initializeStats(stats);\n\n    Object.seal(this);\n  }\n\n  get(name, type = 'count') {\n    return this._getOrCreate({\n      name,\n      type\n    });\n  }\n\n  get size() {\n    return Object.keys(this.stats).length;\n  }\n\n  reset() {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn) {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable() {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n    return table;\n  }\n\n  _initializeStats(stats = []) {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat) {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {\n      name,\n      type\n    } = stat;\n\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n\n    return this.stats[name];\n  }\n\n}\n//# sourceMappingURL=stats.js.map"],"sourceRoot":""}