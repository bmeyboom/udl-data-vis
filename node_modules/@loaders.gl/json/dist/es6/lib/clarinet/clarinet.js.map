{"version":3,"sources":["../../../../src/lib/clarinet/clarinet.js"],"names":["env","EVENTS","MAX_BUFFER_LENGTH","Number","MAX_SAFE_INTEGER","DEBUG","CDEBUG","buffers","textNode","undefined","numberNode","S","STATE","BEGIN","VALUE","OPEN_OBJECT","CLOSE_OBJECT","OPEN_ARRAY","CLOSE_ARRAY","TEXT_ESCAPE","STRING","BACKSLASH","END","OPEN_KEY","CLOSE_KEY","TRUE","TRUE2","TRUE3","FALSE","FALSE2","FALSE3","FALSE4","NULL","NULL2","NULL3","NUMBER_DECIMAL_POINT","NUMBER_DIGIT","s_","Char","tab","lineFeed","carriageReturn","space","doubleQuote","plus","comma","minus","period","_0","_9","colon","E","openBracket","backslash","closeBracket","a","b","e","f","l","n","r","s","t","u","openBrace","closeBrace","checkBufferLength","parser","maxAllowed","Math","max","maxActual","buffer","len","length","closeText","error","bufferCheckPosition","position","stringTokenPattern","ClarinetParser","constructor","options","_initialize","_clearBuffers","q","c","p","closed","closedRoot","sawRoot","tag","state","stack","Array","column","line","slashed","unicodeI","unicodeS","depth","onready","onopenobject","onkey","oncloseobject","onopenarray","onclosearray","onvalue","onerror","onend","onchunkparsed","emit","end","closeValue","resume","close","write","chunk","i","charCodeAt","console","log","isWhitespace","push","pop","event","emitNode","String","fromCharCode","starti","STRING_BIGLOOP","parseInt","substring","lastIndex","reResult","exec","index","indexOf","closeNumber","data","textopts","parseFloat","opt","text","trim","normalize","replace","er","Error"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// @ts-nocheck\nconst env = {};\n\nexport const EVENTS = [\n  'value',\n  'string',\n  'key',\n  'openobject',\n  'closeobject',\n  'openarray',\n  'closearray',\n  'error',\n  'end',\n  'ready'\n];\n\n// Removes the MAX_BUFFER_LENGTH, originally set to 64 * 1024\nconst MAX_BUFFER_LENGTH = Number.MAX_SAFE_INTEGER;\nconst DEBUG = env.CDEBUG === 'debug';\n\nconst buffers = {\n  textNode: undefined,\n  numberNode: ''\n};\n\nlet S = 0;\n\nconst STATE = {\n  BEGIN: S++,\n  VALUE: S++, // general stuff\n  OPEN_OBJECT: S++, // {\n  CLOSE_OBJECT: S++, // }\n  OPEN_ARRAY: S++, // [\n  CLOSE_ARRAY: S++, // ]\n  TEXT_ESCAPE: S++, // \\ stuff\n  STRING: S++, // \"\"\n  BACKSLASH: S++,\n  END: S++, // No more stack\n  OPEN_KEY: S++, // , \"a\"\n  CLOSE_KEY: S++, // :\n  TRUE: S++, // r\n  TRUE2: S++, // u\n  TRUE3: S++, // e\n  FALSE: S++, // a\n  FALSE2: S++, // l\n  FALSE3: S++, // s\n  FALSE4: S++, // e\n  NULL: S++, // u\n  NULL2: S++, // l\n  NULL3: S++, // l\n  NUMBER_DECIMAL_POINT: S++, // .\n  NUMBER_DIGIT: S++ // [0-9]\n};\n\nfor (var s_ in STATE) STATE[STATE[s_]] = s_;\n\n// switcharoo\nS = STATE;\n\nconst Char = {\n  tab: 0x09, // \\t\n  lineFeed: 0x0a, // \\n\n  carriageReturn: 0x0d, // \\r\n  space: 0x20, // \" \"\n\n  doubleQuote: 0x22, // \"\n  plus: 0x2b, // +\n  comma: 0x2c, // ,\n  minus: 0x2d, // -\n  period: 0x2e, // .\n\n  _0: 0x30, // 0\n  _9: 0x39, // 9\n\n  colon: 0x3a, // :\n\n  E: 0x45, // E\n\n  openBracket: 0x5b, // [\n  backslash: 0x5c, // \\\n  closeBracket: 0x5d, // ]\n\n  a: 0x61, // a\n  b: 0x62, // b\n  e: 0x65, // e\n  f: 0x66, // f\n  l: 0x6c, // l\n  n: 0x6e, // n\n  r: 0x72, // r\n  s: 0x73, // s\n  t: 0x74, // t\n  u: 0x75, // u\n\n  openBrace: 0x7b, // {\n  closeBrace: 0x7d // }\n};\n\nfunction checkBufferLength(parser) {\n  const maxAllowed = Math.max(MAX_BUFFER_LENGTH, 10);\n  let maxActual = 0;\n\n  for (var buffer in buffers) {\n    var len = parser[buffer] === undefined ? 0 : parser[buffer].length;\n    if (len > maxAllowed) {\n      switch (buffer) {\n        case 'text':\n          closeText(parser);\n          break;\n\n        default:\n          error(parser, 'Max buffer length exceeded: ' + buffer);\n      }\n    }\n    maxActual = Math.max(maxActual, len);\n  }\n  parser.bufferCheckPosition = MAX_BUFFER_LENGTH - maxActual + parser.position;\n}\n\nvar stringTokenPattern = /[\\\\\"\\n]/g;\n\nexport default class ClarinetParser {\n  constructor(options = {}) {\n    this._initialize(options);\n  }\n\n  _initialize(options) {\n    this._clearBuffers(this);\n    this.bufferCheckPosition = MAX_BUFFER_LENGTH;\n    this.q = '';\n    this.c = '';\n    this.p = '';\n    this.options = options || {};\n    this.closed = false;\n    this.closedRoot = false;\n    this.sawRoot = false;\n    this.tag = null;\n    this.error = null;\n    this.state = S.BEGIN;\n    this.stack = new Array();\n    // mostly just for error reporting\n    this.position = this.column = 0;\n    this.line = 1;\n    this.slashed = false;\n    this.unicodeI = 0;\n    this.unicodeS = null;\n    this.depth = 0;\n\n    // install callbacks\n    if ('onready' in options) {\n      this.onready = options.onready;\n    }\n\n    if ('onopenobject' in options) {\n      this.onopenobject = options.onopenobject;\n    }\n\n    if ('onkey' in options) {\n      this.onkey = options.onkey;\n    }\n\n    if ('oncloseobject' in options) {\n      this.oncloseobject = options.oncloseobject;\n    }\n\n    if ('onopenarray' in options) {\n      this.onopenarray = options.onopenarray;\n    }\n\n    if ('onclosearray' in options) {\n      this.onclosearray = options.onclosearray;\n    }\n\n    if ('onvalue' in options) {\n      this.onvalue = options.onvalue;\n    }\n\n    if ('onerror' in options) {\n      this.onerror = options.onerror;\n    }\n\n    if ('onend' in options) {\n      this.onend = options.onend;\n    }\n\n    if ('onchunkparsed' in options) {\n      this.onchunkparsed = options.onchunkparsed;\n    }\n\n    emit(this, 'onready');\n  }\n\n  _clearBuffers() {\n    for (var buffer in buffers) {\n      this[buffer] = buffers[buffer];\n    }\n  }\n\n  end() {\n    if (this.state !== S.VALUE || this.depth !== 0) error(this, 'Unexpected end');\n\n    closeValue(this);\n    this.c = '';\n    this.closed = true;\n    emit(this, 'onend');\n    this._initialize(this.options);\n    return this;\n  }\n\n  resume() {\n    this.error = null;\n    return this;\n  }\n\n  close() {\n    return this.write(null);\n  }\n\n  write(chunk) {\n    if (this.error) {\n      throw this.error;\n    }\n    if (this.closed) {\n      return error(this, 'Cannot write after close. Assign an onready handler.');\n    }\n    if (chunk === null) {\n      return this.end();\n    }\n    var i = 0,\n      c = chunk.charCodeAt(0),\n      p = this.p;\n    if (DEBUG) console.log('write -> [' + chunk + ']');\n    while (c) {\n      p = c;\n      this.c = c = chunk.charCodeAt(i++);\n      // if chunk doesnt have next, like streaming char by char\n      // this way we need to check if previous is really previous\n      // if not we need to reset to what the this says is the previous\n      // from buffer\n      if (p !== c) {\n        this.p = p;\n      } else {\n        p = this.p;\n      }\n\n      if (!c) break;\n\n      if (DEBUG) console.log(i, c, STATE[this.state]);\n      this.position++;\n      if (c === Char.lineFeed) {\n        this.line++;\n        this.column = 0;\n      } else this.column++;\n\n      switch (this.state) {\n        case S.BEGIN:\n          if (c === Char.openBrace) this.state = S.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = S.OPEN_ARRAY;\n          else if (!isWhitespace(c)) {\n            error(this, 'Non-whitespace before {[.');\n          }\n          continue;\n\n        case S.OPEN_KEY:\n        case S.OPEN_OBJECT:\n          if (isWhitespace(c)) continue;\n          if (this.state === S.OPEN_KEY) this.stack.push(S.CLOSE_KEY);\n          else {\n            if (c === Char.closeBrace) {\n              emit(this, 'onopenobject');\n              this.depth++;\n              emit(this, 'oncloseobject');\n              this.depth--;\n              this.state = this.stack.pop() || S.VALUE;\n              continue;\n            } else this.stack.push(S.CLOSE_OBJECT);\n          }\n          if (c === Char.doubleQuote) this.state = S.STRING;\n          else error(this, 'Malformed object key should start with \"');\n          continue;\n\n        case S.CLOSE_KEY:\n        case S.CLOSE_OBJECT:\n          if (isWhitespace(c)) continue;\n          var event = this.state === S.CLOSE_KEY ? 'key' : 'object';\n          if (c === Char.colon) {\n            if (this.state === S.CLOSE_OBJECT) {\n              this.stack.push(S.CLOSE_OBJECT);\n              closeValue(this, 'onopenobject');\n              this.depth++;\n            } else closeValue(this, 'onkey');\n            this.state = S.VALUE;\n          } else if (c === Char.closeBrace) {\n            emitNode(this, 'oncloseobject');\n            this.depth--;\n            this.state = this.stack.pop() || S.VALUE;\n          } else if (c === Char.comma) {\n            if (this.state === S.CLOSE_OBJECT) this.stack.push(S.CLOSE_OBJECT);\n            closeValue(this);\n            this.state = S.OPEN_KEY;\n          } else error(this, 'Bad object');\n          continue;\n\n        case S.OPEN_ARRAY: // after an array there always a value\n        case S.VALUE:\n          if (isWhitespace(c)) continue;\n          if (this.state === S.OPEN_ARRAY) {\n            emit(this, 'onopenarray');\n            this.depth++;\n            this.state = S.VALUE;\n            if (c === Char.closeBracket) {\n              emit(this, 'onclosearray');\n              this.depth--;\n              this.state = this.stack.pop() || S.VALUE;\n              continue;\n            } else {\n              this.stack.push(S.CLOSE_ARRAY);\n            }\n          }\n          if (c === Char.doubleQuote) this.state = S.STRING;\n          else if (c === Char.openBrace) this.state = S.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = S.OPEN_ARRAY;\n          else if (c === Char.t) this.state = S.TRUE;\n          else if (c === Char.f) this.state = S.FALSE;\n          else if (c === Char.n) this.state = S.NULL;\n          else if (c === Char.minus) {\n            // keep and continue\n            this.numberNode += '-';\n          } else if (Char._0 <= c && c <= Char._9) {\n            this.numberNode += String.fromCharCode(c);\n            this.state = S.NUMBER_DIGIT;\n          } else error(this, 'Bad value');\n          continue;\n\n        case S.CLOSE_ARRAY:\n          if (c === Char.comma) {\n            this.stack.push(S.CLOSE_ARRAY);\n            closeValue(this, 'onvalue');\n            this.state = S.VALUE;\n          } else if (c === Char.closeBracket) {\n            emitNode(this, 'onclosearray');\n            this.depth--;\n            this.state = this.stack.pop() || S.VALUE;\n          } else if (isWhitespace(c)) continue;\n          else error(this, 'Bad array');\n          continue;\n\n        case S.STRING:\n          if (this.textNode === undefined) {\n            this.textNode = '';\n          }\n\n          // thanks thejh, this is an about 50% performance improvement.\n          var starti = i - 1,\n            slashed = this.slashed,\n            unicodeI = this.unicodeI;\n          STRING_BIGLOOP: while (true) {\n            if (DEBUG) console.log(i, c, STATE[this.state], slashed);\n            // zero means \"no unicode active\". 1-4 mean \"parse some more\". end after 4.\n            while (unicodeI > 0) {\n              this.unicodeS += String.fromCharCode(c);\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (unicodeI === 4) {\n                // TODO this might be slow? well, probably not used too often anyway\n                this.textNode += String.fromCharCode(parseInt(this.unicodeS, 16));\n                unicodeI = 0;\n                starti = i - 1;\n              } else {\n                unicodeI++;\n              }\n              // we can just break here: no stuff we skipped that still has to be sliced out or so\n              if (!c) break STRING_BIGLOOP;\n            }\n            if (c === Char.doubleQuote && !slashed) {\n              this.state = this.stack.pop() || S.VALUE;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            if (c === Char.backslash && !slashed) {\n              slashed = true;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (!c) break;\n            }\n            if (slashed) {\n              slashed = false;\n              if (c === Char.n) {\n                this.textNode += '\\n';\n              } else if (c === Char.r) {\n                this.textNode += '\\r';\n              } else if (c === Char.t) {\n                this.textNode += '\\t';\n              } else if (c === Char.f) {\n                this.textNode += '\\f';\n              } else if (c === Char.b) {\n                this.textNode += '\\b';\n              } else if (c === Char.u) {\n                // \\uxxxx. meh!\n                unicodeI = 1;\n                this.unicodeS = '';\n              } else {\n                this.textNode += String.fromCharCode(c);\n              }\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              starti = i - 1;\n              if (!c) break;\n              else continue;\n            }\n\n            stringTokenPattern.lastIndex = i;\n            var reResult = stringTokenPattern.exec(chunk);\n            if (reResult === null) {\n              i = chunk.length + 1;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            i = reResult.index + 1;\n            c = chunk.charCodeAt(reResult.index);\n            if (!c) {\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n          }\n          this.slashed = slashed;\n          this.unicodeI = unicodeI;\n          continue;\n\n        case S.TRUE:\n          if (c === Char.r) this.state = S.TRUE2;\n          else error(this, 'Invalid true started with t' + c);\n          continue;\n\n        case S.TRUE2:\n          if (c === Char.u) this.state = S.TRUE3;\n          else error(this, 'Invalid true started with tr' + c);\n          continue;\n\n        case S.TRUE3:\n          if (c === Char.e) {\n            emit(this, 'onvalue', true);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid true started with tru' + c);\n          continue;\n\n        case S.FALSE:\n          if (c === Char.a) this.state = S.FALSE2;\n          else error(this, 'Invalid false started with f' + c);\n          continue;\n\n        case S.FALSE2:\n          if (c === Char.l) this.state = S.FALSE3;\n          else error(this, 'Invalid false started with fa' + c);\n          continue;\n\n        case S.FALSE3:\n          if (c === Char.s) this.state = S.FALSE4;\n          else error(this, 'Invalid false started with fal' + c);\n          continue;\n\n        case S.FALSE4:\n          if (c === Char.e) {\n            emit(this, 'onvalue', false);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid false started with fals' + c);\n          continue;\n\n        case S.NULL:\n          if (c === Char.u) this.state = S.NULL2;\n          else error(this, 'Invalid null started with n' + c);\n          continue;\n\n        case S.NULL2:\n          if (c === Char.l) this.state = S.NULL3;\n          else error(this, 'Invalid null started with nu' + c);\n          continue;\n\n        case S.NULL3:\n          if (c === Char.l) {\n            emit(this, 'onvalue', null);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid null started with nul' + c);\n          continue;\n\n        case S.NUMBER_DECIMAL_POINT:\n          if (c === Char.period) {\n            this.numberNode += '.';\n            this.state = S.NUMBER_DIGIT;\n          } else error(this, 'Leading zero not followed by .');\n          continue;\n\n        case S.NUMBER_DIGIT:\n          if (Char._0 <= c && c <= Char._9) this.numberNode += String.fromCharCode(c);\n          else if (c === Char.period) {\n            if (this.numberNode.indexOf('.') !== -1) error(this, 'Invalid number has two dots');\n            this.numberNode += '.';\n          } else if (c === Char.e || c === Char.E) {\n            if (this.numberNode.indexOf('e') !== -1 || this.numberNode.indexOf('E') !== -1)\n              error(this, 'Invalid number has two exponential');\n            this.numberNode += 'e';\n          } else if (c === Char.plus || c === Char.minus) {\n            if (!(p === Char.e || p === Char.E)) error(this, 'Invalid symbol in number');\n            this.numberNode += String.fromCharCode(c);\n          } else {\n            closeNumber(this);\n            i--; // go back one\n            this.state = this.stack.pop() || S.VALUE;\n          }\n          continue;\n\n        default:\n          error(this, 'Unknown state: ' + this.state);\n      }\n    }\n    if (this.position >= this.bufferCheckPosition) {\n      checkBufferLength(this);\n    }\n\n    emit(this, 'onchunkparsed');\n\n    return this;\n  }\n}\n\nfunction emit(parser, event, data) {\n  if (DEBUG) {\n    console.log('-- emit', event, data);\n  }\n  if (parser[event]) {\n    parser[event](data, parser);\n  }\n}\n\nfunction emitNode(parser, event, data) {\n  closeValue(parser);\n  emit(parser, event, data);\n}\n\nfunction closeValue(parser, event) {\n  parser.textNode = textopts(parser.options, parser.textNode);\n  if (parser.textNode !== undefined) {\n    emit(parser, event ? event : 'onvalue', parser.textNode);\n  }\n  parser.textNode = undefined;\n}\n\nfunction closeNumber(parser) {\n  if (parser.numberNode) emit(parser, 'onvalue', parseFloat(parser.numberNode));\n  parser.numberNode = '';\n}\n\nfunction textopts(opt, text) {\n  if (text === undefined) {\n    return text;\n  }\n  if (opt.trim) text = text.trim();\n  if (opt.normalize) text = text.replace(/\\s+/g, ' ');\n  return text;\n}\n\nfunction error(parser, er) {\n  closeValue(parser);\n  er += '\\nLine: ' + parser.line + '\\nColumn: ' + parser.column + '\\nChar: ' + parser.c;\n  er = new Error(er);\n  parser.error = er;\n  emit(parser, 'onerror', er);\n  return parser;\n}\n\nfunction isWhitespace(c) {\n  return c === Char.carriageReturn || c === Char.lineFeed || c === Char.space || c === Char.tab;\n}\n"],"file":"clarinet.js"}