{"version":3,"sources":["../../../../src/lib/jsonpath/jsonpath.js"],"names":["JSONPath","constructor","path","Array","isArray","push","split","Error","clone","toString","join","name","pop","set","length","equals","other","i","setFieldAtPath","object","value","shift","field","component","getFieldAtPath"],"mappings":"AAQA,eAAe,MAAMA,QAAN,CAAe;AAC5BC,EAAAA,WAAW,CAACC,IAAI,GAAG,IAAR,EAAc;AACvB,SAAKA,IAAL,GAAY,CAAC,GAAD,CAAZ;;AAEA,QAAIA,IAAI,YAAYF,QAApB,EAA8B;AAC5B,WAAKE,IAAL,GAAY,CAAC,GAAGA,IAAI,CAACA,IAAT,CAAZ;AACA;AACD;;AAED,QAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACvB,WAAKA,IAAL,CAAUG,IAAV,CAAe,GAAGH,IAAlB;AACA;AACD;;AAGD,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAKA,IAAL,GAAYA,IAAI,CAACI,KAAL,CAAW,GAAX,CAAZ;;AACA,UAAI,KAAKJ,IAAL,CAAU,CAAV,MAAiB,GAArB,EAA0B;AACxB,cAAM,IAAIK,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF;AACF;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIR,QAAJ,CAAa,IAAb,CAAP;AACD;;AAEDS,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKP,IAAL,CAAUQ,IAAV,CAAe,GAAf,CAAP;AACD;;AAEDL,EAAAA,IAAI,CAACM,IAAD,EAAO;AACT,SAAKT,IAAL,CAAUG,IAAV,CAAeM,IAAf;AACD;;AAEDC,EAAAA,GAAG,GAAG;AACJ,WAAO,KAAKV,IAAL,CAAUU,GAAV,EAAP;AACD;;AAEDC,EAAAA,GAAG,CAACF,IAAD,EAAO;AACR,SAAKT,IAAL,CAAU,KAAKA,IAAL,CAAUY,MAAV,GAAmB,CAA7B,IAAkCH,IAAlC;AACD;;AAEDI,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,QAAI,CAAC,IAAD,IAAS,CAACA,KAAV,IAAmB,KAAKd,IAAL,CAAUY,MAAV,KAAqBE,KAAK,CAACd,IAAN,CAAWY,MAAvD,EAA+D;AAC7D,aAAO,KAAP;AACD;;AAED,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,IAAL,CAAUY,MAA9B,EAAsC,EAAEG,CAAxC,EAA2C;AACzC,UAAI,KAAKf,IAAL,CAAUe,CAAV,MAAiBD,KAAK,CAACd,IAAN,CAAWe,CAAX,CAArB,EAAoC;AAClC,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;;AAQDC,EAAAA,cAAc,CAACC,MAAD,EAASC,KAAT,EAAgB;AAC5B,UAAMlB,IAAI,GAAG,CAAC,GAAG,KAAKA,IAAT,CAAb;AACAA,IAAAA,IAAI,CAACmB,KAAL;AACA,UAAMC,KAAK,GAAGpB,IAAI,CAACU,GAAL,EAAd;;AACA,SAAK,MAAMW,SAAX,IAAwBrB,IAAxB,EAA8B;AAC5BiB,MAAAA,MAAM,GAAGA,MAAM,CAACI,SAAD,CAAf;AACD;;AACDJ,IAAAA,MAAM,CAACG,KAAD,CAAN,GAAgBF,KAAhB;AACD;;AAODI,EAAAA,cAAc,CAACL,MAAD,EAAS;AACrB,UAAMjB,IAAI,GAAG,CAAC,GAAG,KAAKA,IAAT,CAAb;AACAA,IAAAA,IAAI,CAACmB,KAAL;AACA,UAAMC,KAAK,GAAGpB,IAAI,CAACU,GAAL,EAAd;;AACA,SAAK,MAAMW,SAAX,IAAwBrB,IAAxB,EAA8B;AAC5BiB,MAAAA,MAAM,GAAGA,MAAM,CAACI,SAAD,CAAf;AACD;;AACD,WAAOJ,MAAM,CAACG,KAAD,CAAb;AACD;;AAtF2B","sourcesContent":["/**\n * A parser for a minimal subset of the jsonpath standard\n * Full JSON path parsers for JS exist but are quite large (bundle size)\n *\n * Supports\n *\n *   `$.component.component.component`\n */\nexport default class JSONPath {\n  constructor(path = null) {\n    this.path = ['$'];\n\n    if (path instanceof JSONPath) {\n      this.path = [...path.path];\n      return;\n    }\n\n    if (Array.isArray(path)) {\n      this.path.push(...path);\n      return;\n    }\n\n    // Parse a string as a JSONPath\n    if (typeof path === 'string') {\n      this.path = path.split('.');\n      if (this.path[0] !== '$') {\n        throw new Error('JSONPaths must start with $');\n      }\n    }\n  }\n\n  clone() {\n    return new JSONPath(this);\n  }\n\n  toString() {\n    return this.path.join('.');\n  }\n\n  push(name) {\n    this.path.push(name);\n  }\n\n  pop() {\n    return this.path.pop();\n  }\n\n  set(name) {\n    this.path[this.path.length - 1] = name;\n  }\n\n  equals(other) {\n    if (!this || !other || this.path.length !== other.path.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.path.length; ++i) {\n      if (this.path[i] !== other.path[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets the value pointed at by path\n   * TODO - handle root path\n   * @param {*} object\n   * @param {*} value\n   */\n  setFieldAtPath(object, value) {\n    const path = [...this.path];\n    path.shift();\n    const field = path.pop();\n    for (const component of path) {\n      object = object[component];\n    }\n    object[field] = value;\n  }\n\n  /**\n   * Gets the value pointed at by path\n   * TODO - handle root path\n   * @param {*} object\n   */\n  getFieldAtPath(object) {\n    const path = [...this.path];\n    path.shift();\n    const field = path.pop();\n    for (const component of path) {\n      object = object[component];\n    }\n    return object[field];\n  }\n}\n"],"file":"jsonpath.js"}