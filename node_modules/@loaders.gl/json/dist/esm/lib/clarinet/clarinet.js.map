{"version":3,"sources":["../../../../src/lib/clarinet/clarinet.js"],"names":["env","EVENTS","MAX_BUFFER_LENGTH","Number","MAX_SAFE_INTEGER","DEBUG","CDEBUG","buffers","textNode","undefined","numberNode","S","STATE","BEGIN","VALUE","OPEN_OBJECT","CLOSE_OBJECT","OPEN_ARRAY","CLOSE_ARRAY","TEXT_ESCAPE","STRING","BACKSLASH","END","OPEN_KEY","CLOSE_KEY","TRUE","TRUE2","TRUE3","FALSE","FALSE2","FALSE3","FALSE4","NULL","NULL2","NULL3","NUMBER_DECIMAL_POINT","NUMBER_DIGIT","s_","Char","tab","lineFeed","carriageReturn","space","doubleQuote","plus","comma","minus","period","_0","_9","colon","E","openBracket","backslash","closeBracket","a","b","e","f","l","n","r","s","t","u","openBrace","closeBrace","checkBufferLength","parser","maxAllowed","Math","max","maxActual","buffer","len","length","closeText","error","bufferCheckPosition","position","stringTokenPattern","ClarinetParser","options","_initialize","_clearBuffers","q","c","p","closed","closedRoot","sawRoot","tag","state","stack","Array","column","line","slashed","unicodeI","unicodeS","depth","onready","onopenobject","onkey","oncloseobject","onopenarray","onclosearray","onvalue","onerror","onend","onchunkparsed","emit","closeValue","write","chunk","end","i","charCodeAt","console","log","isWhitespace","push","pop","event","emitNode","String","fromCharCode","starti","STRING_BIGLOOP","parseInt","substring","lastIndex","reResult","exec","index","indexOf","closeNumber","data","textopts","parseFloat","opt","text","trim","normalize","replace","er","Error"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// @ts-nocheck\nconst env = {};\n\nexport const EVENTS = [\n  'value',\n  'string',\n  'key',\n  'openobject',\n  'closeobject',\n  'openarray',\n  'closearray',\n  'error',\n  'end',\n  'ready'\n];\n\n// Removes the MAX_BUFFER_LENGTH, originally set to 64 * 1024\nconst MAX_BUFFER_LENGTH = Number.MAX_SAFE_INTEGER;\nconst DEBUG = env.CDEBUG === 'debug';\n\nconst buffers = {\n  textNode: undefined,\n  numberNode: ''\n};\n\nlet S = 0;\n\nconst STATE = {\n  BEGIN: S++,\n  VALUE: S++, // general stuff\n  OPEN_OBJECT: S++, // {\n  CLOSE_OBJECT: S++, // }\n  OPEN_ARRAY: S++, // [\n  CLOSE_ARRAY: S++, // ]\n  TEXT_ESCAPE: S++, // \\ stuff\n  STRING: S++, // \"\"\n  BACKSLASH: S++,\n  END: S++, // No more stack\n  OPEN_KEY: S++, // , \"a\"\n  CLOSE_KEY: S++, // :\n  TRUE: S++, // r\n  TRUE2: S++, // u\n  TRUE3: S++, // e\n  FALSE: S++, // a\n  FALSE2: S++, // l\n  FALSE3: S++, // s\n  FALSE4: S++, // e\n  NULL: S++, // u\n  NULL2: S++, // l\n  NULL3: S++, // l\n  NUMBER_DECIMAL_POINT: S++, // .\n  NUMBER_DIGIT: S++ // [0-9]\n};\n\nfor (var s_ in STATE) STATE[STATE[s_]] = s_;\n\n// switcharoo\nS = STATE;\n\nconst Char = {\n  tab: 0x09, // \\t\n  lineFeed: 0x0a, // \\n\n  carriageReturn: 0x0d, // \\r\n  space: 0x20, // \" \"\n\n  doubleQuote: 0x22, // \"\n  plus: 0x2b, // +\n  comma: 0x2c, // ,\n  minus: 0x2d, // -\n  period: 0x2e, // .\n\n  _0: 0x30, // 0\n  _9: 0x39, // 9\n\n  colon: 0x3a, // :\n\n  E: 0x45, // E\n\n  openBracket: 0x5b, // [\n  backslash: 0x5c, // \\\n  closeBracket: 0x5d, // ]\n\n  a: 0x61, // a\n  b: 0x62, // b\n  e: 0x65, // e\n  f: 0x66, // f\n  l: 0x6c, // l\n  n: 0x6e, // n\n  r: 0x72, // r\n  s: 0x73, // s\n  t: 0x74, // t\n  u: 0x75, // u\n\n  openBrace: 0x7b, // {\n  closeBrace: 0x7d // }\n};\n\nfunction checkBufferLength(parser) {\n  const maxAllowed = Math.max(MAX_BUFFER_LENGTH, 10);\n  let maxActual = 0;\n\n  for (var buffer in buffers) {\n    var len = parser[buffer] === undefined ? 0 : parser[buffer].length;\n    if (len > maxAllowed) {\n      switch (buffer) {\n        case 'text':\n          closeText(parser);\n          break;\n\n        default:\n          error(parser, 'Max buffer length exceeded: ' + buffer);\n      }\n    }\n    maxActual = Math.max(maxActual, len);\n  }\n  parser.bufferCheckPosition = MAX_BUFFER_LENGTH - maxActual + parser.position;\n}\n\nvar stringTokenPattern = /[\\\\\"\\n]/g;\n\nexport default class ClarinetParser {\n  constructor(options = {}) {\n    this._initialize(options);\n  }\n\n  _initialize(options) {\n    this._clearBuffers(this);\n    this.bufferCheckPosition = MAX_BUFFER_LENGTH;\n    this.q = '';\n    this.c = '';\n    this.p = '';\n    this.options = options || {};\n    this.closed = false;\n    this.closedRoot = false;\n    this.sawRoot = false;\n    this.tag = null;\n    this.error = null;\n    this.state = S.BEGIN;\n    this.stack = new Array();\n    // mostly just for error reporting\n    this.position = this.column = 0;\n    this.line = 1;\n    this.slashed = false;\n    this.unicodeI = 0;\n    this.unicodeS = null;\n    this.depth = 0;\n\n    // install callbacks\n    if ('onready' in options) {\n      this.onready = options.onready;\n    }\n\n    if ('onopenobject' in options) {\n      this.onopenobject = options.onopenobject;\n    }\n\n    if ('onkey' in options) {\n      this.onkey = options.onkey;\n    }\n\n    if ('oncloseobject' in options) {\n      this.oncloseobject = options.oncloseobject;\n    }\n\n    if ('onopenarray' in options) {\n      this.onopenarray = options.onopenarray;\n    }\n\n    if ('onclosearray' in options) {\n      this.onclosearray = options.onclosearray;\n    }\n\n    if ('onvalue' in options) {\n      this.onvalue = options.onvalue;\n    }\n\n    if ('onerror' in options) {\n      this.onerror = options.onerror;\n    }\n\n    if ('onend' in options) {\n      this.onend = options.onend;\n    }\n\n    if ('onchunkparsed' in options) {\n      this.onchunkparsed = options.onchunkparsed;\n    }\n\n    emit(this, 'onready');\n  }\n\n  _clearBuffers() {\n    for (var buffer in buffers) {\n      this[buffer] = buffers[buffer];\n    }\n  }\n\n  end() {\n    if (this.state !== S.VALUE || this.depth !== 0) error(this, 'Unexpected end');\n\n    closeValue(this);\n    this.c = '';\n    this.closed = true;\n    emit(this, 'onend');\n    this._initialize(this.options);\n    return this;\n  }\n\n  resume() {\n    this.error = null;\n    return this;\n  }\n\n  close() {\n    return this.write(null);\n  }\n\n  write(chunk) {\n    if (this.error) {\n      throw this.error;\n    }\n    if (this.closed) {\n      return error(this, 'Cannot write after close. Assign an onready handler.');\n    }\n    if (chunk === null) {\n      return this.end();\n    }\n    var i = 0,\n      c = chunk.charCodeAt(0),\n      p = this.p;\n    if (DEBUG) console.log('write -> [' + chunk + ']');\n    while (c) {\n      p = c;\n      this.c = c = chunk.charCodeAt(i++);\n      // if chunk doesnt have next, like streaming char by char\n      // this way we need to check if previous is really previous\n      // if not we need to reset to what the this says is the previous\n      // from buffer\n      if (p !== c) {\n        this.p = p;\n      } else {\n        p = this.p;\n      }\n\n      if (!c) break;\n\n      if (DEBUG) console.log(i, c, STATE[this.state]);\n      this.position++;\n      if (c === Char.lineFeed) {\n        this.line++;\n        this.column = 0;\n      } else this.column++;\n\n      switch (this.state) {\n        case S.BEGIN:\n          if (c === Char.openBrace) this.state = S.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = S.OPEN_ARRAY;\n          else if (!isWhitespace(c)) {\n            error(this, 'Non-whitespace before {[.');\n          }\n          continue;\n\n        case S.OPEN_KEY:\n        case S.OPEN_OBJECT:\n          if (isWhitespace(c)) continue;\n          if (this.state === S.OPEN_KEY) this.stack.push(S.CLOSE_KEY);\n          else {\n            if (c === Char.closeBrace) {\n              emit(this, 'onopenobject');\n              this.depth++;\n              emit(this, 'oncloseobject');\n              this.depth--;\n              this.state = this.stack.pop() || S.VALUE;\n              continue;\n            } else this.stack.push(S.CLOSE_OBJECT);\n          }\n          if (c === Char.doubleQuote) this.state = S.STRING;\n          else error(this, 'Malformed object key should start with \"');\n          continue;\n\n        case S.CLOSE_KEY:\n        case S.CLOSE_OBJECT:\n          if (isWhitespace(c)) continue;\n          var event = this.state === S.CLOSE_KEY ? 'key' : 'object';\n          if (c === Char.colon) {\n            if (this.state === S.CLOSE_OBJECT) {\n              this.stack.push(S.CLOSE_OBJECT);\n              closeValue(this, 'onopenobject');\n              this.depth++;\n            } else closeValue(this, 'onkey');\n            this.state = S.VALUE;\n          } else if (c === Char.closeBrace) {\n            emitNode(this, 'oncloseobject');\n            this.depth--;\n            this.state = this.stack.pop() || S.VALUE;\n          } else if (c === Char.comma) {\n            if (this.state === S.CLOSE_OBJECT) this.stack.push(S.CLOSE_OBJECT);\n            closeValue(this);\n            this.state = S.OPEN_KEY;\n          } else error(this, 'Bad object');\n          continue;\n\n        case S.OPEN_ARRAY: // after an array there always a value\n        case S.VALUE:\n          if (isWhitespace(c)) continue;\n          if (this.state === S.OPEN_ARRAY) {\n            emit(this, 'onopenarray');\n            this.depth++;\n            this.state = S.VALUE;\n            if (c === Char.closeBracket) {\n              emit(this, 'onclosearray');\n              this.depth--;\n              this.state = this.stack.pop() || S.VALUE;\n              continue;\n            } else {\n              this.stack.push(S.CLOSE_ARRAY);\n            }\n          }\n          if (c === Char.doubleQuote) this.state = S.STRING;\n          else if (c === Char.openBrace) this.state = S.OPEN_OBJECT;\n          else if (c === Char.openBracket) this.state = S.OPEN_ARRAY;\n          else if (c === Char.t) this.state = S.TRUE;\n          else if (c === Char.f) this.state = S.FALSE;\n          else if (c === Char.n) this.state = S.NULL;\n          else if (c === Char.minus) {\n            // keep and continue\n            this.numberNode += '-';\n          } else if (Char._0 <= c && c <= Char._9) {\n            this.numberNode += String.fromCharCode(c);\n            this.state = S.NUMBER_DIGIT;\n          } else error(this, 'Bad value');\n          continue;\n\n        case S.CLOSE_ARRAY:\n          if (c === Char.comma) {\n            this.stack.push(S.CLOSE_ARRAY);\n            closeValue(this, 'onvalue');\n            this.state = S.VALUE;\n          } else if (c === Char.closeBracket) {\n            emitNode(this, 'onclosearray');\n            this.depth--;\n            this.state = this.stack.pop() || S.VALUE;\n          } else if (isWhitespace(c)) continue;\n          else error(this, 'Bad array');\n          continue;\n\n        case S.STRING:\n          if (this.textNode === undefined) {\n            this.textNode = '';\n          }\n\n          // thanks thejh, this is an about 50% performance improvement.\n          var starti = i - 1,\n            slashed = this.slashed,\n            unicodeI = this.unicodeI;\n          STRING_BIGLOOP: while (true) {\n            if (DEBUG) console.log(i, c, STATE[this.state], slashed);\n            // zero means \"no unicode active\". 1-4 mean \"parse some more\". end after 4.\n            while (unicodeI > 0) {\n              this.unicodeS += String.fromCharCode(c);\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (unicodeI === 4) {\n                // TODO this might be slow? well, probably not used too often anyway\n                this.textNode += String.fromCharCode(parseInt(this.unicodeS, 16));\n                unicodeI = 0;\n                starti = i - 1;\n              } else {\n                unicodeI++;\n              }\n              // we can just break here: no stuff we skipped that still has to be sliced out or so\n              if (!c) break STRING_BIGLOOP;\n            }\n            if (c === Char.doubleQuote && !slashed) {\n              this.state = this.stack.pop() || S.VALUE;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            if (c === Char.backslash && !slashed) {\n              slashed = true;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              if (!c) break;\n            }\n            if (slashed) {\n              slashed = false;\n              if (c === Char.n) {\n                this.textNode += '\\n';\n              } else if (c === Char.r) {\n                this.textNode += '\\r';\n              } else if (c === Char.t) {\n                this.textNode += '\\t';\n              } else if (c === Char.f) {\n                this.textNode += '\\f';\n              } else if (c === Char.b) {\n                this.textNode += '\\b';\n              } else if (c === Char.u) {\n                // \\uxxxx. meh!\n                unicodeI = 1;\n                this.unicodeS = '';\n              } else {\n                this.textNode += String.fromCharCode(c);\n              }\n              c = chunk.charCodeAt(i++);\n              this.position++;\n              starti = i - 1;\n              if (!c) break;\n              else continue;\n            }\n\n            stringTokenPattern.lastIndex = i;\n            var reResult = stringTokenPattern.exec(chunk);\n            if (reResult === null) {\n              i = chunk.length + 1;\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n            i = reResult.index + 1;\n            c = chunk.charCodeAt(reResult.index);\n            if (!c) {\n              this.textNode += chunk.substring(starti, i - 1);\n              this.position += i - 1 - starti;\n              break;\n            }\n          }\n          this.slashed = slashed;\n          this.unicodeI = unicodeI;\n          continue;\n\n        case S.TRUE:\n          if (c === Char.r) this.state = S.TRUE2;\n          else error(this, 'Invalid true started with t' + c);\n          continue;\n\n        case S.TRUE2:\n          if (c === Char.u) this.state = S.TRUE3;\n          else error(this, 'Invalid true started with tr' + c);\n          continue;\n\n        case S.TRUE3:\n          if (c === Char.e) {\n            emit(this, 'onvalue', true);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid true started with tru' + c);\n          continue;\n\n        case S.FALSE:\n          if (c === Char.a) this.state = S.FALSE2;\n          else error(this, 'Invalid false started with f' + c);\n          continue;\n\n        case S.FALSE2:\n          if (c === Char.l) this.state = S.FALSE3;\n          else error(this, 'Invalid false started with fa' + c);\n          continue;\n\n        case S.FALSE3:\n          if (c === Char.s) this.state = S.FALSE4;\n          else error(this, 'Invalid false started with fal' + c);\n          continue;\n\n        case S.FALSE4:\n          if (c === Char.e) {\n            emit(this, 'onvalue', false);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid false started with fals' + c);\n          continue;\n\n        case S.NULL:\n          if (c === Char.u) this.state = S.NULL2;\n          else error(this, 'Invalid null started with n' + c);\n          continue;\n\n        case S.NULL2:\n          if (c === Char.l) this.state = S.NULL3;\n          else error(this, 'Invalid null started with nu' + c);\n          continue;\n\n        case S.NULL3:\n          if (c === Char.l) {\n            emit(this, 'onvalue', null);\n            this.state = this.stack.pop() || S.VALUE;\n          } else error(this, 'Invalid null started with nul' + c);\n          continue;\n\n        case S.NUMBER_DECIMAL_POINT:\n          if (c === Char.period) {\n            this.numberNode += '.';\n            this.state = S.NUMBER_DIGIT;\n          } else error(this, 'Leading zero not followed by .');\n          continue;\n\n        case S.NUMBER_DIGIT:\n          if (Char._0 <= c && c <= Char._9) this.numberNode += String.fromCharCode(c);\n          else if (c === Char.period) {\n            if (this.numberNode.indexOf('.') !== -1) error(this, 'Invalid number has two dots');\n            this.numberNode += '.';\n          } else if (c === Char.e || c === Char.E) {\n            if (this.numberNode.indexOf('e') !== -1 || this.numberNode.indexOf('E') !== -1)\n              error(this, 'Invalid number has two exponential');\n            this.numberNode += 'e';\n          } else if (c === Char.plus || c === Char.minus) {\n            if (!(p === Char.e || p === Char.E)) error(this, 'Invalid symbol in number');\n            this.numberNode += String.fromCharCode(c);\n          } else {\n            closeNumber(this);\n            i--; // go back one\n            this.state = this.stack.pop() || S.VALUE;\n          }\n          continue;\n\n        default:\n          error(this, 'Unknown state: ' + this.state);\n      }\n    }\n    if (this.position >= this.bufferCheckPosition) {\n      checkBufferLength(this);\n    }\n\n    emit(this, 'onchunkparsed');\n\n    return this;\n  }\n}\n\nfunction emit(parser, event, data) {\n  if (DEBUG) {\n    console.log('-- emit', event, data);\n  }\n  if (parser[event]) {\n    parser[event](data, parser);\n  }\n}\n\nfunction emitNode(parser, event, data) {\n  closeValue(parser);\n  emit(parser, event, data);\n}\n\nfunction closeValue(parser, event) {\n  parser.textNode = textopts(parser.options, parser.textNode);\n  if (parser.textNode !== undefined) {\n    emit(parser, event ? event : 'onvalue', parser.textNode);\n  }\n  parser.textNode = undefined;\n}\n\nfunction closeNumber(parser) {\n  if (parser.numberNode) emit(parser, 'onvalue', parseFloat(parser.numberNode));\n  parser.numberNode = '';\n}\n\nfunction textopts(opt, text) {\n  if (text === undefined) {\n    return text;\n  }\n  if (opt.trim) text = text.trim();\n  if (opt.normalize) text = text.replace(/\\s+/g, ' ');\n  return text;\n}\n\nfunction error(parser, er) {\n  closeValue(parser);\n  er += '\\nLine: ' + parser.line + '\\nColumn: ' + parser.column + '\\nChar: ' + parser.c;\n  er = new Error(er);\n  parser.error = er;\n  emit(parser, 'onerror', er);\n  return parser;\n}\n\nfunction isWhitespace(c) {\n  return c === Char.carriageReturn || c === Char.lineFeed || c === Char.space || c === Char.tab;\n}\n"],"file":"clarinet.js"}