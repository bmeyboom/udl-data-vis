{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///../loader-utils/src/lib/env-utils/globals.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/process/browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/globals.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/util.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/utils/hi-res-timestamp.js","webpack:///(webpack)/buildin/global.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/is-browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/is-electron.js","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///./src/bundle.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/support/isBufferBrowser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///./src/javascript-utils/is-type.ts","webpack:///./src/lib/utils/mime-type-utils.ts","webpack:///./src/lib/utils/resource-utils.ts","webpack:///./src/lib/utils/response-utils.ts","webpack:///./src/lib/fetch/fetch-file.ts","webpack:///../loader-utils/src/lib/node/fs.ts","webpack:///./src/lib/fetch/read-array-buffer.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///./src/lib/fetch/read-file.ts","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///./src/lib/fetch/write-file.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/globals.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/local-storage.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/formatters.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/color.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/assert.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/hi-res-timestamp.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/lib/log.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/autobind.js","webpack:///./src/lib/loader-utils/loggers.ts","webpack:///./src/lib/loader-utils/option-defaults.ts","webpack:///./src/lib/loader-utils/option-utils.ts","webpack:///./src/lib/api/set-loader-options.ts","webpack:///./src/lib/loader-utils/normalize-loader.ts","webpack:///./src/lib/api/register-loaders.ts","webpack:///./src/lib/api/select-loader.ts","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///./src/iterators/make-iterator/make-array-buffer-iterator.ts","webpack:///./src/iterators/make-iterator/make-stream-iterator.ts","webpack:///./src/iterators/make-iterator/make-iterator.ts","webpack:///./src/iterators/make-iterator/make-string-iterator.ts","webpack:///./src/iterators/make-iterator/make-blob-iterator.ts","webpack:///./src/lib/loader-utils/get-data.ts","webpack:///./src/lib/loader-utils/loader-context.ts","webpack:///./src/lib/api/parse.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:///./src/lib/api/parse-sync.ts","webpack:///./src/lib/api/parse-in-batches.ts","webpack:///./src/lib/api/load.ts","webpack:///./src/lib/api/load-in-batches.ts","webpack:///./src/lib/api/encode.ts","webpack:///./src/lib/api/save.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stat.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stats.js","webpack:///../loader-utils/src/lib/request-utils/request-scheduler.ts","webpack:///./src/iterators/make-stream/make-dom-stream.ts","webpack:///./src/iterators/make-stream/make-stream.ts","webpack:///./src/null-loader.ts","webpack:///../loader-utils/src/json-loader.ts","webpack:///./src/lib/progress/fetch-progress.ts","webpack:///./src/lib/filesystems/browser-filesystem.ts","webpack:///../loader-utils/src/lib/iterators/text-iterators.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globals","self","global","document","self_","window_","global_","document_","isBrowser","process","String","browser","isWorker","importScripts","matches","version","exec","parseFloat","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","process_","console","getOwnPropertyDescriptors","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","join","str","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","output","base","braces","isArray","toUTCString","formatProperty","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","arg","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","test","pid","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","kCustomPromisifiedSymbol","undefined","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","then","rej","getHiResTimestamp","performance","now","hrtime","timeParts","g","Function","isElectron","mockUserAgent","type","Boolean","electron","realUserAgent","navigator","userAgent","isMobile","orientation","moduleExports","require","_global","loaders","assign","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","pathPrefix","fileAliases","setPathPrefix","prefix","getPathPrefix","resolvePath","filename","alias","startsWith","replacement","isPureObject","isPromise","isIterable","iterator","isAsyncIterable","asyncIterator","isIterator","next","isResponse","Response","arrayBuffer","text","json","isBlob","Blob","isReadableStream","ReadableStream","tee","cancel","getReader","isReadableDOMStream","read","pipe","readable","isReadableNodeStream","isWritableStream","abort","getWriter","isWritableDOMStream","end","write","isWritableNodeStream","DATA_URL_PATTERN","MIME_TYPE_PATTERN","parseMIMEType","mimeString","parseMIMETypeFromURL","url","QUERY_STRING_PATTERN","getResourceUrlAndType","resource","stripQueryString","headers","async","makeResponse","contentLength","size","ArrayBuffer","isView","byteLength","getResourceContentLength","initialDataUrl","slice","blobSlice","reader","FileReader","onload","event","target","result","readAsDataURL","buffer","binary","bytes","Uint8Array","fromCharCode","btoa","arrayBufferToBase64","getInitialDataUrl","TextEncoder","encode","response","checkResponse","ok","message","status","contentType","statusText","includes","getResponseError","fetchFile","options","fetchOptions","fetch","fsFunction","isSupported","fs","open","close","readFile","readFileSync","writeFile","writeFileSync","_readToArrayBuffer","fd","start","Buffer","alloc","bytesRead","toArrayBuffer","readArrayBuffer","file","blob","fileReader","onerror","readAsArrayBuffer","readBlob","data","node","_toArrayBuffer","concatenateArrayBuffers","sources","sourceArrays","source2","typedArray","offset","sourceArray","assert","condition","nothrow","toBuffer","filePath","arrayBufferOrString","flag","LocalStorage","id","defaultSettings","storage","setItem","removeItem","getStorage","config","_loadConfiguration","configuration","updateConfiguration","serialized","serializedConfiguration","getItem","parse","formatImage","image","scale","maxWidth","imageUrl","src","width","Math","min","height","floor","COLOR","BLACK","RED","GREEN","YELLOW","BLUE","MAGENTA","CYAN","WHITE","BRIGHT_BLACK","BRIGHT_RED","BRIGHT_GREEN","BRIGHT_YELLOW","BRIGHT_BLUE","BRIGHT_MAGENTA","BRIGHT_CYAN","BRIGHT_WHITE","getColor","color","originalConsole","debug","info","warn","DEFAULT_SETTINGS","enabled","level","cache","ONCE","getTableHeader","table","VERSION","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","userData","timeStamp","predefined","proto","propNames","find","autobind","seal","newLevel","setLevel","getLevel","toPrecision","newPriority","_getLogFunction","oldUsage","newUsage","logLevel","columns","tag","priority","_shouldLog","img","Image","element","nodeName","toLowerCase","toDataURL","logImageInBrowser","asciify","fit","round","logImageInNode","setting","timeEnd","collapsed","normalizeArguments","method","groupCollapsed","group","groupEnd","func","isEnabled","normalizeLogLevel","total","getTotal","delta","getDelta","string","padLength","max","repeat","leftPad","ms","formatted","toFixed","formatTime","background","decorateMessage","resolvedLevel","isFinite","from","shift","unshift","messageType","probeLog","Log","NullLog","DEFAULT_LOADER_OPTIONS","mimeType","CDN","worker","maxConcurrency","maxMobileConcurrency","reuseWorkers","_workerType","limit","_limitMB","batchSize","batchDebounceMs","metadata","transforms","REMOVED_LOADER_OPTIONS","throws","dataType","uri","body","credentials","redirect","referrer","referrerPolicy","integrity","keepalive","signal","getGlobalLoaderState","_state","getGlobalLoaderOptions","state","globalOptions","normalizeOptions","loader","validateOptionsObject","idOptions","loaderOptions","deprecatedOptions","validateOptions","normalizeOptionsInternal","getFetchFunction","context","defaultOptions","loaderName","isSubOptions","isBaseUriOption","isWorkerUrlOption","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","bestSuggestion","lowerCaseKey","mergedOptions","baseUri","addUrlOptions","mergeNestedFields","setLoaderOptions","setGlobalOptions","isLoaderObject","extensions","normalizeLoader","parseTextSync","parseText","getGlobalLoaderRegistry","loaderRegistry","registerLoaders","normalizedLoader","registeredLoader","_unregisterLoaders","EXT_PATTERN","selectLoader","validHTTPResponse","selectLoaderSync","getNoValidLoaderMessage","candidateLoaders","ignoreRegisteredLoaders","normalizeLoaders","testUrl","findLoaderByMIMEType","extension","loaderExtension","findLoaderByExtension","findLoaderByUrl","testDataAgainstText","testDataAgainstBinary","byteOffset","findLoaderByInitialBytes","fallbackMimeType","selectLoaderInternal","getMagicString","getFirstCharacters","mimeTypes","testText","tests","some","arrayBuffer1","arrayBuffer2","array1","array2","compareArrayBuffers","magic","testBinary","dataView","DataView","getUint8","workerURLCache","Map","getLoadableWorkerURL","props","source","workerURL","getLoadableWorkerURLFromSource","workerUrl","getLoadableWorkerURLFromURL","workerSource","URL","createObjectURL","isTransferable","MessagePort","ImageBitmap","OffscreenCanvas","NOOP","WorkerThread","Worker","onMessage","onError","_createBrowserWorker","destroy","terminate","terminated","postMessage","transferList","getTransferList","recursive","transfers","transfersSet","Set","_getErrorFromErrorEvent","lineno","colno","_loadableURL","onmessage","onmessageerror","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","payload","done","WorkerPool","setProps","idleQueue","isDestroyed","onDebug","job","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","backlog","returnWorkerToQueue","count","_getMaxConcurrency","DEFAULT_PROPS","WorkerFarm","_workerFarm","workerPools","workerPool","values","_getWorkerPoolProps","getWorkerPool","parseWithWorker","parseOnMainThread","workerOptions","workerFile","versionTag","getWorkerURL","getWorkerFarm","startJob","input","visitor","return","concatenateArrayBuffersAsync","arrayBuffers","chunk","DEFAULT_CHUNK_SIZE","makeStreamIterator","stream","nextBatchPromise","currentBatchPromise","_streamReadAhead","releaseLock","makeBrowserStreamIterator","makeNodeStreamIterator","makeIterator","chunkSize","textEncoder","chunkLength","makeStringIterator","chunkByteLength","makeArrayBufferIterator","makeBlobIterator","ERR_DATA","getArrayBufferOrStringFromDataSync","TextDecoder","decode","getAsyncIterableFromData","getIterableFromData","getLoaderContext","previousContext","resolvedContext","getLoadersFromContext","contextLoaders","coreVersion","workerVersion","validateWorkerVersion","isArrayBuffer","getArrayBufferOrStringFromData","canParseWithWorker","parseSync","parseWithLoader","parseWithLoaderSync","parseInBatches","outputIterator","inputIterator","transformedIterator","iteratorChain","transformBatches","applyInputTransforms","parsedData","batch","shape","batchType","parseChunkInBatches","parseToOutputIterator","metadataBatch","_loader","_context","bytesUsed","makeMetadataBatchIterator","parseWithLoaderInBatches","load","loadInBatches","files","loadOneFileInBatches","writer","encodeSync","encodeText","encodeInBatches","batches","chunks","encodeURLtoURL","tmpInputFilename","getTemporaryFilename","tmpOutputFilename","outputFilename","dataIterator","getIterator","inputUrl","outputUrl","save","encodedData","saveSync","sampleSize","reset","samples","addCount","subtractCount","_count","_samples","_checkSampling","_time","lastTiming","_startTime","_timerPending","addTime","lastSampleCount","lastSampleTime","stats","_initializeStats","_getOrCreate","stat","average","getAverageTime","hz","getHz","throttleRequests","maxRequests","RequestScheduler","Stats","scheduleRequest","handle","getPriority","requestMap","has","request","requestQueue","_issueNewRequests","_issueRequest","isDone","delete","activeRequestCount","deferredUpdate","_issueNewRequestsAsync","freeSlots","_updateAllRequests","_updateRequest","splice","sort","b","makeDOMStream","controller","enqueue","highWaterMark","makeStream","makeNodeStream","NullWorkerLoader","null","NullLoader","JSONLoader","category","fetchProgress","onProgress","onDone","totalBytes","parseInt","progressStream","loadedBytes","percent","BrowserFileSystem","_fetch","lowerCaseFiles","usedFiles","path","range","Headers","dirname","pathname","flags","position","_getFile","used","makeTextDecoderIterator","arrayBufferIterator","textDecoder","makeTextEncoderIterator","textIterator","makeLineIterator","previous","textChunk","eolIndex","makeNumberedLineIterator","lineIterator","counter"],"mappings":"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","file":"dist.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document,\n  process: typeof process === 'object' && process\n};\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\nconst process_ = globals.process || {};\nconst console_ = console;\nexport { self_ as self, window_ as window, global_ as global, document_ as document, process_ as process, console_ as console };\n//# sourceMappingURL=globals.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","export default function getHiResTimestamp() {\n  let timestamp;\n\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import isElectron from './is-electron';\nexport default function isBrowser() {\n  const isNode = typeof process === 'object' && String(process) === '[object process]' && !process.browser;\n  return !isNode || isElectron();\n}\nexport function isBrowserMainThread() {\n  return isBrowser() && typeof document !== 'undefined';\n}\n//# sourceMappingURL=is-browser.js.map","export default function isElectron(mockUserAgent) {\n  if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  if (typeof process !== 'undefined' && typeof process.versions === 'object' && Boolean(process.versions.electron)) {\n    return true;\n  }\n\n  const realUserAgent = typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n\n  if (userAgent && userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=is-electron.js.map","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","import type {Readable} from 'stream';\n\n/** A DOM or Node readable stream */\nexport type ReadableStreamType = ReadableStream | Readable;\n\nconst isBoolean: (x: any) => boolean = (x) => typeof x === 'boolean';\nconst isFunction: (x: any) => boolean = (x) => typeof x === 'function';\n\nexport const isObject: (x: any) => boolean = (x) => x !== null && typeof x === 'object';\nexport const isPureObject: (x: any) => boolean = (x) =>\n  isObject(x) && x.constructor === {}.constructor;\nexport const isPromise: (x: any) => boolean = (x) => isObject(x) && isFunction(x.then);\n\nexport const isIterable: (x: any) => boolean = (x) => x && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable: (x: any) => boolean = (x) =>\n  x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator: (x: any) => boolean = (x) => x && isFunction(x.next);\n\nexport const isResponse: (x: any) => boolean = (x) =>\n  (typeof Response !== 'undefined' && x instanceof Response) ||\n  (x && x.arrayBuffer && x.text && x.json);\n\nexport const isFile: (x: any) => boolean = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob: (x: any) => boolean = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n\nexport const isWritableDOMStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\n\nexport const isReadableDOMStream: (x: any) => boolean = (x) =>\n  (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n  (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\n\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer: (x: any) => boolean = (x) => x && typeof x === 'object' && x.isBuffer;\n\nexport const isWritableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream: (x: any) => boolean = (x) =>\n  isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream: (x: any) => boolean = (x) =>\n  isWritableDOMStream(x) || isWritableNodeStream(x);\n","// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\n\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString: string): string {\n  // If resource is a data url, extract any embedded mime type\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\n  if (matches) {\n    return matches[1];\n  }\n  return mimeString;\n}\n\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url: string): string {\n  // If resource is a data URL, extract any embedded mime type\n  const matches = DATA_URL_PATTERN.exec(url);\n  if (matches) {\n    return matches[1];\n  }\n  return '';\n}\n","import {isResponse, isBlob} from '../../javascript-utils/is-type';\nimport {parseMIMEType, parseMIMETypeFromURL} from './mime-type-utils';\n\nconst QUERY_STRING_PATTERN = /\\?.*/;\n\n/**\n * Returns an object with `url` and (MIME) `type` fields\n * If it cannot determine url or type, the corresponding value will be an empty string\n *\n * @param resource Any type, but only Responses, string URLs and data URLs are processed\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceUrlAndType(resource: any): {url: string; type: string} {\n  // If resource is a response, it contains the information directly\n  if (isResponse(resource)) {\n    const url = stripQueryString(resource.url || '');\n    const contentTypeHeader = resource.headers.get('content-type') || '';\n    return {\n      url,\n      type: parseMIMEType(contentTypeHeader) || parseMIMETypeFromURL(url)\n    };\n  }\n\n  // If the resource is a Blob or a File (subclass of Blob)\n  if (isBlob(resource)) {\n    return {\n      // File objects have a \"name\" property. Blob objects don't have any\n      // url (name) information\n      url: stripQueryString(resource.name || ''),\n      type: resource.type || ''\n    };\n  }\n\n  if (typeof resource === 'string') {\n    return {\n      // TODO this could mess up data URL but it doesn't matter as it is just used for inference\n      url: stripQueryString(resource),\n      // If a data url\n      type: parseMIMETypeFromURL(resource)\n    };\n  }\n\n  // Unknown\n  return {\n    url: '',\n    type: ''\n  };\n}\n\n/**\n  * Returns (approximate) content length for a resource if it can be determined.\n  * Returns -1 if content length cannot be determined.\n  * @param resource\n\n  * @note string parameters are NOT assumed to be URLs\n  */\nexport function getResourceContentLength(resource: any): number {\n  if (isResponse(resource)) {\n    return resource.headers['content-length'] || -1;\n  }\n  if (isBlob(resource)) {\n    return resource.size;\n  }\n  if (typeof resource === 'string') {\n    // TODO - handle data URL?\n    return resource.length;\n  }\n  if (resource instanceof ArrayBuffer) {\n    return resource.byteLength;\n  }\n  if (ArrayBuffer.isView(resource)) {\n    return resource.byteLength;\n  }\n  return -1;\n}\n\nfunction stripQueryString(url) {\n  return url.replace(QUERY_STRING_PATTERN, '');\n}\n","import {isResponse} from '../../javascript-utils/is-type';\nimport {getResourceContentLength, getResourceUrlAndType} from './resource-utils';\n\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource: any): Promise<Response> {\n  if (isResponse(resource)) {\n    return resource;\n  }\n\n  // Add content-length header if possible\n  const headers: {[header: string]: string} = {};\n\n  const contentLength = getResourceContentLength(resource);\n  if (contentLength >= 0) {\n    headers['content-length'] = String(contentLength);\n  }\n\n  // `new Response(File)` does not preserve content-type and URL\n  // so we add them here\n  const {url, type} = getResourceUrlAndType(resource);\n  if (type) {\n    headers['content-type'] = type;\n  }\n\n  // Add a custom header with initial bytes if available\n  const initialDataUrl = await getInitialDataUrl(resource);\n  if (initialDataUrl) {\n    headers['x-first-bytes'] = initialDataUrl;\n  }\n\n  // TODO - is this the best way of handling strings?\n  // Maybe package as data URL instead?\n  if (typeof resource === 'string') {\n    // Convert to ArrayBuffer to avoid Response treating it as a URL\n    resource = new TextEncoder().encode(resource);\n  }\n\n  // Attempt to create a Response from the resource, adding headers and setting url\n  const response = new Response(resource, {headers});\n  // We can't control `Response.url` via constructor, use a property override to record URL.\n  Object.defineProperty(response, 'url', {value: url});\n  return response;\n}\n\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response: Response): Promise<void> {\n  if (!response.ok) {\n    const message = await getResponseError(response);\n    throw new Error(message);\n  }\n}\n\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response: Response): void {\n  if (!response.ok) {\n    let message = `${response.status} ${response.statusText}`;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n    throw new Error(message);\n  }\n}\n\n// HELPERS\n\nasync function getResponseError(response): Promise<string> {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type');\n    let text = response.statusText;\n    if (contentType.includes('application/json')) {\n      text += ` ${await response.text()}`;\n    }\n    message += text;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n  } catch (error) {\n    // eslint forbids return in a finally statement, so we just catch here\n  }\n  return message;\n}\n\nasync function getInitialDataUrl(resource): Promise<string | null> {\n  const INITIAL_DATA_LENGTH = 5;\n  if (typeof resource === 'string') {\n    return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n  }\n  if (resource instanceof Blob) {\n    const blobSlice = resource.slice(0, 5);\n    return await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event?.target?.result as string);\n      reader.readAsDataURL(blobSlice);\n    });\n  }\n  if (resource instanceof ArrayBuffer) {\n    const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n    const base64 = arrayBufferToBase64(slice);\n    return `data:base64,${base64}`;\n  }\n  return null;\n}\n\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n","import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n","// fs wrapper (promisified fs + avoids bundling fs in browsers)\nimport fs from 'fs';\nimport {toArrayBuffer} from './buffer-utils.node';\nimport {promisify} from 'util';\n\nconst error = (fsFunction) => () => {\n  throw new Error(`${fsFunction} not available in browser`);\n};\n\nexport const isSupported = Boolean(fs);\n\nexport const open = fs?.open ? promisify(fs.open) : error('fs.open');\nexport const close = fs?.close ? promisify(fs.close) : error('fs.close');\nexport const read = fs?.read ? promisify(fs.read) : error('fs.read');\n\nexport const readFile = fs?.readFile ? promisify(fs.readFile) : error('fs.readFile');\nexport const readFileSync = fs?.readFileSync ? fs.readFileSync : error('fs.readFileSync');\nexport const writeFile = fs?.writeFile ? promisify(fs.writeFile) : error('fs.writeFile');\nexport const writeFileSync = fs?.writeFileSync ? fs.writeFileSync : error('fs.writeFileSync');\n\nexport async function _readToArrayBuffer(fd: number, start: number, length: number) {\n  const buffer = Buffer.alloc(length);\n  const {bytesRead} = await read(fd, buffer, 0, length, start);\n  if (bytesRead !== length) {\n    throw new Error('fs.read failed');\n  }\n  return toArrayBuffer(buffer);\n}\n","//\nimport {fs} from '@loaders.gl/loader-utils';\n\n/**\n * Reads a chunk from a random access file\n * @param file\n * @param start\n * @param length\n * @returns\n */\nexport async function readArrayBuffer(\n  file: Blob | ArrayBuffer | string | number,\n  start: number,\n  length: number\n): Promise<ArrayBuffer> {\n  if (typeof file === 'number') {\n    return await fs._readToArrayBuffer(file, start, length);\n  }\n  // TODO - we can do better for ArrayBuffer and string\n  if (!(file instanceof Blob)) {\n    file = new Blob([file]);\n  }\n  const slice = file.slice(start, start + length);\n  return await readBlob(slice);\n}\n\n/**\n * Read a slice of a Blob or File, without loading the entire file into memory\n * The trick when reading File objects is to read successive \"slices\" of the File\n * Per spec https://w3c.github.io/FileAPI/, slicing a File only updates the start and end fields\n * Actually reading from file happens in `readAsArrayBuffer`\n * @param blob to read\n */\nexport async function readBlob(blob: Blob): Promise<ArrayBuffer> {\n  return await new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = (event: ProgressEvent<FileReader>) =>\n      resolve(event?.target?.result as ArrayBuffer);\n    // TODO - reject with a proper Error\n    fileReader.onerror = (error: ProgressEvent<FileReader>) => reject(error);\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n","import {TypedArray} from '../../types';\nimport * as node from '../node/buffer-utils.node';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.toArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","// File read\nimport {isBrowser, resolvePath, fs, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\n// TODO - this is not tested\n// const isDataURL = (url) => url.startsWith('data:');\n\n/**\n * In a few cases (data URIs, node.js) \"files\" can be read synchronously\n */\nexport function readFileSync(url: string, options: object = {}) {\n  url = resolvePath(url);\n\n  // Only support this if we can also support sync data URL decoding in browser\n  // if (isDataURL(url)) {\n  //   return decodeDataUri(url);\n  // }\n\n  if (!isBrowser) {\n    const buffer = fs.readFileSync(url, options);\n    return typeof buffer !== 'string' ? toArrayBuffer(buffer) : buffer;\n  }\n\n  // @ts-ignore\n  if (!options.nothrow) {\n    // throw new Error('Cant load URI synchronously');\n    assert(false);\n  }\n\n  return null;\n}\n","import * as node from '../node/buffer-utils.node';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n","import checkIfBrowser from '../env/is-browser';\nexport { self, window, global, document, process, console } from '../env/globals';\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\nexport const isBrowser = checkIfBrowser();\n//# sourceMappingURL=globals.js.map","function getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default class LocalStorage {\n  constructor(id, defaultSettings, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = {};\n    Object.assign(this.config, defaultSettings);\n\n    this._loadConfiguration();\n  }\n\n  getConfiguration() {\n    return this.config;\n  }\n\n  setConfiguration(configuration) {\n    this.config = {};\n    return this.updateConfiguration(configuration);\n  }\n\n  updateConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n\n    return this;\n  }\n\n  _loadConfiguration() {\n    let configuration = {};\n\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n\n    Object.assign(this.config, configuration);\n    return this;\n  }\n\n}\n//# sourceMappingURL=local-storage.js.map","export function formatTime(ms) {\n  let formatted;\n\n  if (ms < 10) {\n    formatted = \"\".concat(ms.toFixed(2), \"ms\");\n  } else if (ms < 100) {\n    formatted = \"\".concat(ms.toFixed(1), \"ms\");\n  } else if (ms < 1000) {\n    formatted = \"\".concat(ms.toFixed(0), \"ms\");\n  } else {\n    formatted = \"\".concat((ms / 1000).toFixed(2), \"s\");\n  }\n\n  return formatted;\n}\nexport function leftPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(' '.repeat(padLength)).concat(string);\n}\nexport function rightPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(string).concat(' '.repeat(padLength));\n}\nexport function formatValue(v, opts = {}) {\n  const EPSILON = 1e-16;\n  const {\n    isInteger = false\n  } = opts;\n\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\nfunction formatArrayValue(v, opts) {\n  const {\n    maxElts = 16,\n    size = 1\n  } = opts;\n  let string = '[';\n\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += \",\".concat(i % size === 0 ? ' ' : '');\n    }\n\n    string += formatValue(v[i], opts);\n  }\n\n  const terminator = v.length > maxElts ? '...' : ']';\n  return \"\".concat(string).concat(terminator);\n}\n\nexport function formatImage(image, message, scale, maxWidth = 600) {\n  const imageUrl = image.src.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n\n  if (image.width > maxWidth) {\n    scale = Math.min(scale, maxWidth / image.width);\n  }\n\n  const width = image.width * scale;\n  const height = image.height * scale;\n  const style = ['font-size:1px;', \"padding:\".concat(Math.floor(height / 2), \"px \").concat(Math.floor(width / 2), \"px;\"), \"line-height:\".concat(height, \"px;\"), \"background:url(\".concat(imageUrl, \");\"), \"background-size:\".concat(width, \"px \").concat(height, \"px;\"), 'color:transparent;'].join('');\n  return [\"\".concat(message, \" %c+\"), style];\n}\n//# sourceMappingURL=formatters.js.map","import { isBrowser } from './globals';\nexport const COLOR = {\n  BLACK: 30,\n  RED: 31,\n  GREEN: 32,\n  YELLOW: 33,\n  BLUE: 34,\n  MAGENTA: 35,\n  CYAN: 36,\n  WHITE: 37,\n  BRIGHT_BLACK: 90,\n  BRIGHT_RED: 91,\n  BRIGHT_GREEN: 92,\n  BRIGHT_YELLOW: 93,\n  BRIGHT_BLUE: 94,\n  BRIGHT_MAGENTA: 95,\n  BRIGHT_CYAN: 96,\n  BRIGHT_WHITE: 97\n};\n\nfunction getColor(color) {\n  return typeof color === 'string' ? COLOR[color.toUpperCase()] || COLOR.WHITE : color;\n}\n\nexport function addColor(string, color, background) {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      color = getColor(color);\n      string = \"\\x1B[\".concat(color, \"m\").concat(string, \"\\x1B[39m\");\n    }\n\n    if (background) {\n      color = getColor(background);\n      string = \"\\x1B[\".concat(background + 10, \"m\").concat(string, \"\\x1B[49m\");\n    }\n  }\n\n  return string;\n}\n//# sourceMappingURL=color.js.map","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n//# sourceMappingURL=assert.js.map","import { window, process, isBrowser } from './globals';\nexport default function getHiResTimestamp() {\n  let timestamp;\n\n  if (isBrowser && window.performance) {\n    timestamp = window.performance.now();\n  } else if (process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","import { VERSION, isBrowser } from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport { formatImage, formatTime, leftPad } from '../utils/formatters';\nimport { addColor } from '../utils/color';\nimport { autobind } from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {\n  once: true\n};\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n\n  return 'empty';\n}\n\nexport default class Log {\n  constructor({\n    id\n  } = {\n    id: ''\n  }) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    this.LOG_THROTTLE_TIMEOUT = 0;\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.userData = {};\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({\n      enabled\n    });\n\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({\n      level\n    });\n\n    return this;\n  }\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  once(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n  }\n\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n\n    return noop;\n  }\n\n  image({\n    logLevel,\n    priority,\n    image,\n    message = '',\n    scale = 1\n  }) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n\n    return isBrowser ? logImageInBrowser({\n      image,\n      message,\n      scale\n    }) : logImageInNode({\n      image,\n      message,\n      scale\n    });\n  }\n\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  set(setting, value) {\n    this._storage.updateConfiguration({\n      [setting]: value\n    });\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {\n    collapsed: false\n  }) {\n    opts = normalizeArguments({\n      logLevel,\n      message,\n      opts\n    });\n    const {\n      collapsed\n    } = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {\n      collapsed: true\n    }));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      opts = normalizeArguments({\n        logLevel,\n        message,\n        args,\n        opts\n      });\n      method = method || opts.method;\n      assert(method);\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      this._deltaTs = getHiResTimestamp();\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      message = decorateMessage(this.id, opts.message, opts);\n      return method.bind(console, message, ...opts.args);\n    }\n\n    return noop;\n  }\n\n}\nLog.VERSION = VERSION;\n\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n  return resolvedLevel;\n}\n\nexport function normalizeArguments(opts) {\n  const {\n    logLevel,\n    message\n  } = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  const args = opts.args ? Array.from(opts.args) : [];\n\n  while (args.length && args.shift() !== message) {}\n\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n\n  const messageType = typeof opts.message;\n  assert(messageType === 'string' || messageType === 'object');\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n\n  return message;\n}\n\nfunction logImageInNode({\n  image,\n  message = '',\n  scale = 1\n}) {\n  let asciify = null;\n\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {}\n\n  if (asciify) {\n    return () => asciify(image, {\n      fit: 'box',\n      width: \"\".concat(Math.round(80 * scale), \"%\")\n    }).then(data => console.log(data));\n  }\n\n  return noop;\n}\n\nfunction logImageInBrowser({\n  image,\n  message = '',\n  scale = 1\n}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n\n    img.src = image;\n    return noop;\n  }\n\n  const element = image.nodeName || '';\n\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n\n    img.onload = () => console.log(...formatImage(img, message, scale));\n\n    img.src = image.toDataURL();\n    return noop;\n  }\n\n  return noop;\n}\n//# sourceMappingURL=log.js.map","export function autobind(obj, predefined = ['constructor']) {\n  const proto = Object.getPrototypeOf(obj);\n  const propNames = Object.getOwnPropertyNames(proto);\n\n  for (const key of propNames) {\n    if (typeof obj[key] === 'function') {\n      if (!predefined.find(name => key === name)) {\n        obj[key] = obj[key].bind(obj);\n      }\n    }\n  }\n}\n//# sourceMappingURL=autobind.js.map","// probe.gl Log compatible loggers\nimport {Log} from 'probe.gl';\n\nexport const probeLog = new Log({id: 'loaders.gl'});\n\n// Logs nothing\nexport class NullLog {\n  log() {\n    return () => {};\n  }\n  info() {\n    return () => {};\n  }\n  warn() {\n    return () => {};\n  }\n  error() {\n    return () => {};\n  }\n}\n\n// Logs to console\nexport class ConsoleLog {\n  console;\n\n  constructor() {\n    this.console = console; // eslint-disable-line\n  }\n  log(...args) {\n    return this.console.log.bind(this.console, ...args);\n  }\n  info(...args) {\n    return this.console.info.bind(this.console, ...args);\n  }\n  warn(...args) {\n    return this.console.warn.bind(this.console, ...args);\n  }\n  error(...args) {\n    return this.console.error.bind(this.console, ...args);\n  }\n}\n","import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {ConsoleLog} from './loggers';\n\nexport const DEFAULT_LOADER_OPTIONS: LoaderOptions = {\n  // baseUri\n  fetch: null,\n  mimeType: undefined,\n  nothrow: false,\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader.\n  maxConcurrency: 3, // How many worker instances should be created for each loader.\n  maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n  reuseWorkers: true, // By default reuse workers,\n  _workerType: '', // 'test' to use locally generated workers\n\n  limit: 0,\n  _limitMB: 0,\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: []\n};\n\nexport const REMOVED_LOADER_OPTIONS = {\n  throws: 'nothrow',\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n","import type {Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {global} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {probeLog, NullLog} from './loggers';\nimport {DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS} from './option-defaults';\n/**\n * Global state for loaders.gl. Stored on `global.loaders._state`\n */\ntype GlobalLoaderState = {\n  loaderRegistry: Loader[];\n  globalOptions: {[key: string]: any};\n};\n\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState(): GlobalLoaderState {\n  // @ts-ignore\n  global.loaders = global.loaders || {};\n  // @ts-ignore\n  const {loaders} = global;\n\n  // Add _state object to keep separate from modules added to global.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options: object): void {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(\n  options: object,\n  loader: Loader,\n  loaders?: Loader[],\n  url?: string\n): object {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(\n  options?: LoaderOptions,\n  context?: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>\n) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetchOptions = options || globalOptions;\n\n  // options.fetch can be a function\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetchOptions.fetch)) {\n    return (url) => fetchFile(url, fetchOptions);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n\n  // else return the default fetch function\n  return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options: LoaderOptions, loaders: Loader[]) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions =\n      (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(\n  options,\n  id: string | null,\n  defaultOptions,\n  deprecatedOptions,\n  loaders: Loader[]\n) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`\n        )();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`\n        )();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url?: string) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url?: string) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n","import {setGlobalOptions} from '../loader-utils/option-utils';\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setLoaderOptions(options: object): void {\n  setGlobalOptions(options);\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function isLoaderObject(loader?: any): boolean {\n  if (!loader) {\n    return false;\n  }\n\n  if (Array.isArray(loader)) {\n    loader = loader[0];\n  }\n\n  const hasExtensions = Array.isArray(loader?.extensions);\n\n  /* Now handled by types and worker loaders do not have these\n  let hasParser =\n    loader.parseTextSync ||\n    loader.parseSync ||\n    loader.parse ||\n    loader.parseStream || // TODO Remove, Replace with parseInBatches\n    loader.parseInBatches;\n  */\n\n  return hasExtensions;\n}\n\nexport function normalizeLoader(loader: Loader): Loader {\n  // This error is fairly easy to trigger by mixing up import statements etc\n  // So we make an exception and add a developer error message for this case\n  // To help new users from getting stuck here\n  assert(loader, 'null loader');\n  assert(isLoaderObject(loader), 'invalid loader');\n\n  // NORMALIZE [LOADER, OPTIONS] => LOADER\n\n  // If [loader, options], create a new loaders object with options merged in\n  let options;\n  if (Array.isArray(loader)) {\n    options = loader[1];\n    loader = loader[0];\n    loader = {\n      ...loader,\n      options: {...loader.options, ...options}\n    };\n  }\n\n  // NORMALIZE text and binary flags\n  // Ensure at least one of text/binary flags are properly set\n\n  // @ts-expect-error\n  if (loader?.parseTextSync || loader?.parseText) {\n    loader.text = true;\n  }\n\n  if (!loader.text) {\n    loader.binary = true;\n  }\n\n  return loader;\n}\n","import {Loader} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getGlobalLoaderState} from '../loader-utils/option-utils';\n\n// Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n// This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderRegistry = () => {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = state.loaderRegistry || [];\n  return state.loaderRegistry;\n};\n\nexport function registerLoaders(loaders: Loader[]) {\n  const loaderRegistry = getGlobalLoaderRegistry();\n\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  for (const loader of loaders) {\n    const normalizedLoader = normalizeLoader(loader);\n    if (!loaderRegistry.find((registeredLoader) => normalizedLoader === registeredLoader)) {\n      // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n      loaderRegistry.unshift(normalizedLoader);\n    }\n  }\n}\n\nexport function getRegisteredLoaders(): Loader[] {\n  return getGlobalLoaderRegistry();\n}\n\n// For testing\nexport function _unregisterLoaders() {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = [];\n}\n","import type {LoaderContext, LoaderOptions, Loader} from '@loaders.gl/loader-utils';\nimport {compareArrayBuffers} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {isBlob} from '../../javascript-utils/is-type';\n\nconst EXT_PATTERN = /\\.([^.]+)$/;\n\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport async function selectLoader(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<Loader | null> {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // First make a sync attempt, disabling exceptions\n  let loader = selectLoaderSync(data, loaders, {...options, nothrow: true}, context);\n  if (loader) {\n    return loader;\n  }\n\n  // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n  // to see if we can detect by initial content\n  if (isBlob(data)) {\n    data = await (data as Blob).slice(0, 10).arrayBuffer();\n    loader = selectLoaderSync(data, loaders, options, context);\n  }\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport function selectLoaderSync(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Loader | null {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // eslint-disable-next-line complexity\n  // if only a single loader was provided (not as array), force its use\n  // TODO - Should this behavior be kept and documented?\n  if (loaders && !Array.isArray(loaders)) {\n    // TODO - remove support for legacy loaders\n    return normalizeLoader(loaders);\n  }\n\n  // Build list of candidate loaders that will be searched in order for a match\n  let candidateLoaders: Loader[] = [];\n  // First search supplied loaders\n  if (loaders) {\n    candidateLoaders = candidateLoaders.concat(loaders);\n  }\n  // Then fall back to registered loaders\n  if (!options?.ignoreRegisteredLoaders) {\n    candidateLoaders.push(...getRegisteredLoaders());\n  }\n\n  // TODO - remove support for legacy loaders\n  normalizeLoaders(candidateLoaders);\n\n  const loader = selectLoaderInternal(data, candidateLoaders, options, context);\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/** Implements loaders selection logic */\nfunction selectLoaderInternal(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[],\n  options?: LoaderOptions,\n  context?: LoaderContext\n) {\n  const {url, type} = getResourceUrlAndType(data);\n\n  const testUrl = url || context?.url;\n\n  let loader: Loader | null = null;\n\n  // if options.mimeType is supplied, it takes precedence\n  if (options?.mimeType) {\n    loader = findLoaderByMIMEType(loaders, options?.mimeType);\n  }\n  // Look up loader by url\n  loader = loader || findLoaderByUrl(loaders, testUrl);\n  // Look up loader by mime type\n  loader = loader || findLoaderByMIMEType(loaders, type);\n  // Look for loader via initial bytes (Note: not always accessible (e.g. Response, stream, async iterator)\n  loader = loader || findLoaderByInitialBytes(loaders, data);\n  // Look up loader by fallback mime type\n  loader = loader || findLoaderByMIMEType(loaders, options?.fallbackMimeType);\n\n  return loader;\n}\n\n/** Check HTTP Response */\nfunction validHTTPResponse(data: any): boolean {\n  // HANDLE HTTP status\n  if (data instanceof Response) {\n    // 204 - NO CONTENT. This handles cases where e.g. a tile server responds with 204 for a missing tile\n    if (data.status === 204) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getNoValidLoaderMessage(data): string {\n  const {url, type} = getResourceUrlAndType(data);\n\n  let message = 'No valid loader found';\n  if (data) {\n    message += ` data: \"${getFirstCharacters(data)}\", contentType: \"${type}\"`;\n  }\n  if (url) {\n    message += ` url: ${url}`;\n  }\n  return message;\n}\n\nfunction normalizeLoaders(loaders: Loader[]): void {\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n  }\n}\n\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders: Loader[], url?: string): Loader | null {\n  // Get extension\n  const match = url && EXT_PATTERN.exec(url);\n  const extension = match && match[1];\n  return extension ? findLoaderByExtension(loaders, extension) : null;\n}\n\nfunction findLoaderByExtension(loaders: Loader[], extension: string): Loader | null {\n  extension = extension.toLowerCase();\n\n  for (const loader of loaders) {\n    for (const loaderExtension of loader.extensions) {\n      if (loaderExtension.toLowerCase() === extension) {\n        return loader;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByMIMEType(loaders, mimeType) {\n  for (const loader of loaders) {\n    if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n      return loader;\n    }\n\n    // Support referring to loaders using the \"unregistered tree\"\n    // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n    if (mimeType === `application/x.${loader.id}`) {\n      return loader;\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByInitialBytes(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  for (const loader of loaders) {\n    if (typeof data === 'string') {\n      if (testDataAgainstText(data, loader)) {\n        return loader;\n      }\n    } else if (ArrayBuffer.isView(data)) {\n      // Typed Arrays can have offsets into underlying buffer\n      if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n        return loader;\n      }\n    } else if (data instanceof ArrayBuffer) {\n      const byteOffset = 0;\n      if (testDataAgainstBinary(data, byteOffset, loader)) {\n        return loader;\n      }\n    }\n    // TODO Handle streaming case (requires creating a new AsyncIterator)\n  }\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  if (loader.testText) {\n    return loader.testText(data);\n  }\n\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => data.startsWith(test));\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => testBinary(data, byteOffset, loader, test));\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (typeof test) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n      const magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data, length = 5) {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big ArrayBuffer into chunks and yields them one-by-one\n * @param blob ArrayBuffer to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeArrayBufferIterator(\n  arrayBuffer: ArrayBuffer,\n  options: IteratorOptions = {}\n): Iterable<ArrayBuffer> {\n  const {chunkSize = DEFAULT_CHUNK_SIZE} = options;\n\n  let byteOffset = 0;\n\n  while (byteOffset < arrayBuffer.byteLength) {\n    // Create a chunk of the right size\n    const chunkByteLength = Math.min(arrayBuffer.byteLength - byteOffset, chunkSize);\n    const chunk = new ArrayBuffer(chunkByteLength);\n\n    // Copy data from the big chunk\n    const sourceArray = new Uint8Array(arrayBuffer, byteOffset, chunkByteLength);\n    const chunkArray = new Uint8Array(chunk);\n    chunkArray.set(sourceArray);\n\n    // yield the chunk\n    byteOffset += chunkByteLength;\n    yield chunk;\n  }\n}\n","import type {Readable} from 'stream';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport type StreamIteratorOptions = {\n  _streamReadAhead?: boolean;\n};\n\n/**\n * Returns an async iterable that reads from a stream (works in both Node.js and browsers)\n * @param stream stream to iterator over\n */\nexport function makeStreamIterator(\n  stream: ReadableStream | Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  return isBrowser\n    ? makeBrowserStreamIterator(stream as ReadableStream, options)\n    : makeNodeStreamIterator(stream as Readable, options);\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @see https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nasync function* makeBrowserStreamIterator(\n  stream: ReadableStream,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // WhatWG: stream is supposed to have a `getIterator` method\n  // if (typeof stream.getIterator === 'function') {\n  //   return stream.getIterator();\n  // }\n  // if (typeof stream[Symbol.asyncIterator] === 'function') {\n  //   return makeToArrayBufferIterator(stream);\n  // }\n\n  // In the browser, we first need to get a lock on the stream\n  const reader = stream.getReader();\n\n  let nextBatchPromise: Promise<{done?: boolean; value?: Uint8Array}> | undefined;\n\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const currentBatchPromise = nextBatchPromise || reader.read();\n      // Issue a read for an additional batch, while we await the next batch\n      // Idea is to make fetching happen in parallel with processing / parsing\n      if (options?._streamReadAhead) {\n        nextBatchPromise = reader.read();\n      }\n      // Read from the stream\n      // value is a Uint8Array\n      const {done, value} = await currentBatchPromise;\n      // Exit if we're done\n      if (done) {\n        return;\n      }\n      // Else yield the chunk\n      yield toArrayBuffer(value);\n    }\n  } catch (error) {\n    // TODO - examples makes it look like this should always be called,\n    // but that generates exceptions so only call it if we do not reach the end\n    reader.releaseLock();\n  }\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @note Requires Node.js >= 10\n */\nasync function* makeNodeStreamIterator(\n  stream: Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // Hacky test for node version to ensure we don't call bad polyfills\n  // NODE 10+: stream is an asyncIterator\n  for await (const chunk of stream) {\n    yield toArrayBuffer(chunk); // Coerce each chunk to ArrayBuffer\n  }\n}\n/* TODO - remove NODE < 10\n * @see https://github.com/bustle/streaming-iterables, MIT license\n *\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return;\n  }\n\n  // TODO - check if is this ever used in Node 10+?\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState?.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n\nasync function onceReadable(stream: Readable): Promise<any> {\n  return new Promise((resolve) => {\n    stream.once('readable', resolve);\n  });\n}\n  */\n","import type {ReadStream} from 'fs';\n\nimport {makeStringIterator} from './make-string-iterator';\nimport {makeArrayBufferIterator} from './make-array-buffer-iterator';\nimport {makeBlobIterator} from './make-blob-iterator';\nimport type {StreamIteratorOptions} from './make-stream-iterator';\nimport {makeStreamIterator} from './make-stream-iterator';\nimport {isBlob, isReadableStream, isResponse} from '../../javascript-utils/is-type';\n\n/**\n * @param [options.chunkSize]\n */\nexport type IteratorOptions = StreamIteratorOptions & {\n  chunkSize?: number;\n};\n\n/**\n * Returns an iterator that breaks its input into chunks and yields them one-by-one.\n * @param data\n * @param options\n * @returns\n * This function can e.g. be used to enable data sources that can only be read atomically\n * (such as `Blob` and `File` via `FileReader`) to still be parsed in batches.\n */\nexport function makeIterator(\n  data: ArrayBuffer | string | Blob | Response | ReadableStream | ReadStream,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer> {\n  if (typeof data === 'string') {\n    // Note: Converts string chunks to binary\n    return makeStringIterator(data, options);\n  }\n  if (data instanceof ArrayBuffer) {\n    return makeArrayBufferIterator(data, options);\n  }\n  if (isBlob(data)) {\n    return makeBlobIterator(data as Blob, options);\n  }\n  if (isReadableStream(data)) {\n    return makeStreamIterator(data as ReadableStream, options);\n  }\n  if (isResponse(data)) {\n    const response = data as Response;\n    return makeStreamIterator(response.body as ReadableStream, options);\n  }\n  throw new Error('makeIterator');\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big string into chunks and yields them one-by-one as ArrayBuffers\n * @param blob string to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeStringIterator(\n  string: string,\n  options?: IteratorOptions\n): Iterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  const textEncoder = new TextEncoder();\n  while (offset < string.length) {\n    // Create a chunk of the right size\n    const chunkLength = Math.min(string.length - offset, chunkSize);\n    const chunk = string.slice(offset, offset + chunkLength);\n    offset += chunkLength;\n\n    // yield an ArrayBuffer chunk\n    yield textEncoder.encode(chunk);\n  }\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB — biggest value that keeps UI responsive\n\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(\n  blob: Blob,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  while (offset < blob.size) {\n    const end = offset + chunkSize;\n\n    const chunk = await blob.slice(offset, end).arrayBuffer();\n\n    offset = end;\n    yield chunk;\n  }\n}\n","import type {\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  Loader,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\nimport {\n  isResponse,\n  isReadableStream,\n  isAsyncIterable,\n  isIterable,\n  isIterator,\n  isBlob,\n  isBuffer\n} from '../../javascript-utils/is-type';\nimport {makeIterator} from '../../iterators/make-iterator/make-iterator';\nimport {checkResponse, makeResponse} from '../utils/response-utils';\n\nconst ERR_DATA = 'Cannot convert supplied data type';\n\n// eslint-disable-next-line complexity\nexport function getArrayBufferOrStringFromDataSync(\n  data: SyncDataType,\n  loader: Loader,\n  options: LoaderOptions\n): ArrayBuffer | string {\n  if (loader.text && typeof data === 'string') {\n    return data;\n  }\n\n  if (isBuffer(data)) {\n    // @ts-ignore\n    data = data.buffer;\n  }\n\n  if (data instanceof ArrayBuffer) {\n    const arrayBuffer = data;\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(arrayBuffer);\n    }\n    return arrayBuffer;\n  }\n\n  // We may need to handle offsets\n  if (ArrayBuffer.isView(data)) {\n    // TextDecoder is invoked on typed arrays and will handle offsets\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(data);\n    }\n\n    let arrayBuffer = data.buffer;\n\n    // Since we are returning the underlying arrayBuffer, we must create a new copy\n    // if this typed array / Buffer is a partial view into the ArryayBuffer\n    // TODO - this is a potentially unnecessary copy\n    const byteLength = data.byteLength || data.length;\n    if (data.byteOffset !== 0 || byteLength !== arrayBuffer.byteLength) {\n      // console.warn(`loaders.gl copying arraybuffer of length ${byteLength}`);\n      arrayBuffer = arrayBuffer.slice(data.byteOffset, data.byteOffset + byteLength);\n    }\n    return arrayBuffer;\n  }\n\n  throw new Error(ERR_DATA);\n}\n\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(\n  data: DataType,\n  loader: Loader,\n  options: LoaderOptions\n): Promise<ArrayBuffer | string> {\n  const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n  if (typeof data === 'string' || isArrayBuffer) {\n    return getArrayBufferOrStringFromDataSync(data as string | ArrayBuffer, loader, options);\n  }\n\n  // Blobs and files are FileReader compatible\n  if (isBlob(data)) {\n    data = await makeResponse(data);\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    await checkResponse(response);\n    return loader.binary ? await response.arrayBuffer() : await response.text();\n  }\n\n  if (isReadableStream(data)) {\n    // @ts-expect-error TS2559 options type\n    data = makeIterator(data as ReadableStream, options);\n  }\n\n  if (isIterable(data) || isAsyncIterable(data)) {\n    // Assume arrayBuffer iterator - attempt to concatenate\n    return concatenateArrayBuffersAsync(data as AsyncIterable<ArrayBuffer>);\n  }\n\n  throw new Error(ERR_DATA);\n}\n\nexport async function getAsyncIterableFromData(\n  data: BatchableDataType,\n  options: LoaderOptions\n): Promise<AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>> {\n  if (isIterator(data)) {\n    return data as AsyncIterable<ArrayBuffer>;\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    // Note Since this function is not async, we currently can't load error message, just status\n    await checkResponse(response);\n    // TODO - bug in polyfill, body can be a Promise under Node.js\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const body = await response.body;\n    // TODO - body can be null?\n    return makeIterator(body as ReadableStream<Uint8Array>, options as any);\n  }\n\n  if (isBlob(data) || isReadableStream(data)) {\n    return makeIterator(data as Blob | ReadableStream, options as any);\n  }\n\n  if (isAsyncIterable(data)) {\n    return data[Symbol.asyncIterator]();\n  }\n\n  return getIterableFromData(data);\n}\n\nexport async function getReadableStream(data: BatchableDataType): Promise<ReadableStream> {\n  if (isReadableStream(data)) {\n    return data as ReadableStream;\n  }\n  if (isResponse(data)) {\n    // @ts-ignore\n    return data.body;\n  }\n  const response = await makeResponse(data);\n  // @ts-ignore\n  return response.body;\n}\n\n// HELPERS\n\nfunction getIterableFromData(data) {\n  // generate an iterator that emits a single chunk\n  if (ArrayBuffer.isView(data)) {\n    return (function* oneChunk() {\n      yield data.buffer;\n    })();\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return (function* oneChunk() {\n      yield data;\n    })();\n  }\n\n  if (isIterator(data)) {\n    return data;\n  }\n\n  if (isIterable(data)) {\n    return data[Symbol.iterator]();\n  }\n\n  throw new Error(ERR_DATA);\n}\n","import type {Loader, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {getFetchFunction} from './option-utils';\n\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(\n  context: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>,\n  options?: LoaderOptions,\n  previousContext: LoaderContext | null = null\n): LoaderContext {\n  // For recursive calls, we already have a context\n  // TODO - add any additional loaders to context?\n  if (previousContext) {\n    return previousContext;\n  }\n\n  const resolvedContext: LoaderContext = {\n    fetch: getFetchFunction(options, context),\n    ...context\n  };\n\n  // Recursive loading does not use single loader\n  if (!Array.isArray(resolvedContext.loaders)) {\n    resolvedContext.loaders = null;\n  }\n\n  return resolvedContext;\n}\n\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(\n  loaders: Loader[] | Loader | undefined,\n  context?: LoaderContext\n) {\n  // A single non-array loader is force selected, but only on top-level (context === null)\n  if (!context && loaders && !Array.isArray(loaders)) {\n    return loaders;\n  }\n\n  // Create a merged list\n  let candidateLoaders;\n  if (loaders) {\n    candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n  }\n  if (context && context.loaders) {\n    const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n    candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n  }\n  // If no loaders, return null to look in globally registered loaders\n  return candidateLoaders && candidateLoaders.length ? candidateLoaders : null;\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {assert, validateWorkerVersion} from '@loaders.gl/worker-utils';\nimport {parseWithWorker, canParseWithWorker} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parse(\n  data: DataType | Promise<DataType>,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  assert(!context || typeof context === 'object'); // parse no longer accepts final url\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  // todo hacky type cast\n  const loader = await selectLoader(data as ArrayBuffer, candidateLoaders, options);\n  // Note: if no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateWorkerVersion(loader);\n\n  data = await getArrayBufferOrStringFromData(data, loader, options);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, options)) {\n    return await parseWithWorker(loader, data, options, context, parse);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","import type {\n  SyncDataType,\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {selectLoaderSync} from './select-loader';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromDataSync} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\n\n/**\n * Parses `data` synchronously using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport function parseSync(\n  data: SyncDataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): any {\n  assert(!context || typeof context === 'object'); // parseSync no longer accepts final url\n\n  // Signature: parseSync(data, options)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  options = options || {};\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  const loader = selectLoaderSync(data, candidateLoaders, options);\n  // Note: if nothrow option was set, it is possible that no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders);\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  const parse = () => {\n    throw new Error('parseSync called parse');\n  };\n  context = getLoaderContext({url, parseSync, parse, loaders: loaders as Loader[]}, options);\n\n  return parseWithLoaderSync(loader as LoaderWithParser, data, options, context);\n}\n\n// TODO - should accept loader.parseSync/parse and generate 1 chunk asyncIterator\nfunction parseWithLoaderSync(\n  loader: LoaderWithParser,\n  data: SyncDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n) {\n  data = getArrayBufferOrStringFromDataSync(data, loader, options);\n\n  if (loader.parseTextSync && typeof data === 'string') {\n    return loader.parseTextSync(data, options); // , context, loader);\n  }\n\n  if (loader.parseSync && data instanceof ArrayBuffer) {\n    return loader.parseSync(data, options, context); // , loader);\n  }\n\n  // TBD - If synchronous parser not available, return null\n  throw new Error(\n    `${loader.name} loader: 'parseSync' not supported by this loader, use 'parse' instead. ${\n      context.url || ''\n    }`\n  );\n}\n","import type {Batch} from '@loaders.gl/schema';\nimport type {\n  BatchableDataType,\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {assert, concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getLoaderContext} from '../loader-utils/loader-context';\nimport {getAsyncIterableFromData} from '../loader-utils/get-data';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n// Ensure `parse` is available in context if loader falls back to `parse`\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parseInBatches(\n  data: BatchableDataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>> {\n  assert(!context || typeof context === 'object'); // parseInBatches no longer accepts final url\n\n  // Signature: parseInBatches(data, options, url) - Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader and normalizes it\n  // Note - only uses URL and contentType for streams and iterator inputs\n  const loader = await selectLoader(data as ArrayBuffer, loaders as Loader[], options);\n  // Note: if options.nothrow was set, it is possible that no loader was found, if so just return null\n  if (!loader) {\n    // @ts-ignore\n    return null;\n  }\n\n  // Normalize options\n  // @ts-ignore\n  options = normalizeOptions(options, loader, loaders, url);\n  // @ts-ignore\n  context = getLoaderContext(\n    // @ts-ignore\n    {url, parseInBatches, parse, loaders: loaders as Loader[]},\n    options,\n    context\n  );\n\n  return await parseWithLoaderInBatches(loader as LoaderWithParser, data, options, context);\n}\n\n/**\n * Loader has been selected and context has been prepared, see if we need to emit a metadata batch\n */\nasync function parseWithLoaderInBatches(\n  loader: LoaderWithParser,\n  data: BatchableDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n): Promise<AsyncIterable<any>> {\n  const outputIterator = await parseToOutputIterator(loader, data, options, context);\n\n  // Generate metadata batch if requested\n  if (!options.metadata) {\n    return outputIterator;\n  }\n\n  const metadataBatch = {\n    batchType: 'metadata',\n    metadata: {\n      _loader: loader,\n      _context: context\n    },\n    // Populate with some default fields to avoid crashing\n    data: [],\n    bytesUsed: 0\n  };\n\n  async function* makeMetadataBatchIterator(iterator) {\n    yield metadataBatch;\n    yield* iterator;\n  }\n\n  return makeMetadataBatchIterator(outputIterator);\n}\n\n/**\n * Prep work is done, now it is time to start parsing into an output operator\n * The approach depends on which parse function the loader exposes\n * `parseInBatches` (preferred), `parse` (fallback)\n */\nasync function parseToOutputIterator(\n  loader: LoaderWithParser,\n  data: BatchableDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n): Promise<AsyncIterable<any>> {\n  // Get an iterator from the input\n  const inputIterator = await getAsyncIterableFromData(data, options);\n\n  // Apply any iterator transforms (options.transforms)\n  const transformedIterator = await applyInputTransforms(inputIterator, options?.transforms || []);\n\n  // If loader supports parseInBatches, we are done\n  if (loader.parseInBatches) {\n    return loader.parseInBatches(transformedIterator, options, context);\n  }\n\n  // Fallback: load atomically using `parse` concatenating input iterator into single chunk\n  async function* parseChunkInBatches() {\n    const arrayBuffer = await concatenateArrayBuffersAsync(transformedIterator);\n    // Call `parse` instead of `loader.parse` to ensure we can call workers etc.\n    const parsedData = await parse(\n      arrayBuffer,\n      loader,\n      // TODO - Hack: supply loaders MIME type to ensure we match it\n      {...options, mimeType: loader.mimeTypes[0]},\n      context\n    );\n    // yield a single batch, the output from loader.parse()\n    // TODO - run through batch builder to apply options etc...\n    const batch: Batch = {\n      mimeType: loader.mimeTypes[0],\n      shape: Array.isArray(parsedData) ? 'row-table' : 'unknown',\n      batchType: 'data',\n      data: parsedData,\n      length: Array.isArray(parsedData) ? parsedData.length : 1\n    };\n    yield batch;\n  }\n\n  return parseChunkInBatches();\n}\n\ntype TransformBatches = (\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n) => AsyncIterable<ArrayBuffer>;\n\n/**\n * Create an iterator chain with any transform iterators (crypto, decompression)\n * @param inputIterator\n * @param options\n */\nasync function applyInputTransforms(\n  inputIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  transforms: TransformBatches[] = []\n): Promise<AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>> {\n  let iteratorChain = inputIterator;\n  for await (const transformBatches of transforms) {\n    iteratorChain = transformBatches(iteratorChain);\n  }\n  return iteratorChain;\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isBlob} from '../../javascript-utils/is-type';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * Note: Load does duplicate a lot of parse.\n * it can also call fetchFile on string urls, which `parse` won't do.\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function load(\n  url: string | DataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options);\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetch(url);\n    // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  }\n\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    data = await fetch(url);\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  return await parse(data, loaders, options);\n}\n","import type {LoaderWithParser, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parseInBatches} from './parse-in-batches';\n\ntype FileType = string | File | Blob | Response | (string | File | Blob | Response)[] | FileList;\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport function loadInBatches(\n  files: FileType,\n  loaders?: LoaderWithParser | LoaderWithParser[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>>;\n\nexport function loadInBatches(\n  files: FileType[] | FileList,\n  loaders?: LoaderWithParser | LoaderWithParser[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>>;\n\nexport function loadInBatches(files, loaders, options, context) {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders;\n    loaders = null;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options || {});\n\n  // Single url/file\n  if (!Array.isArray(files)) {\n    return loadOneFileInBatches(files, loaders, options, fetch);\n  }\n\n  // Multiple URLs / files\n  const promises = files.map((file) => loadOneFileInBatches(file, loaders, options, fetch));\n\n  // No point in waiting here for all responses before starting to stream individual streams?\n  return promises;\n}\n\nasync function loadOneFileInBatches(file, loaders, options, fetch) {\n  if (typeof file === 'string') {\n    const url = file;\n    const response = await fetch(url);\n    return await parseInBatches(response, loaders, options);\n  }\n  return await parseInBatches(file, loaders, options);\n}\n","import type {Writer, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {concatenateArrayBuffers, resolvePath} from '@loaders.gl/loader-utils';\nimport {isBrowser} from '@loaders.gl/loader-utils';\nimport {writeFile} from '../fetch/write-file';\nimport {fetchFile} from '../fetch/fetch-file';\n\n/**\n * Encode loaded data into a binary ArrayBuffer using the specified Writer.\n */\nexport async function encode(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): Promise<ArrayBuffer> {\n  if (writer.encode) {\n    return await writer.encode(data, options);\n  }\n\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n\n  if (writer.encodeText) {\n    return new TextEncoder().encode(await writer.encodeText(data, options));\n  }\n\n  if (writer.encodeInBatches) {\n    // Create an iterator representing the data\n    // TODO - Assumes this is a table\n    const batches = encodeInBatches(data, writer, options);\n\n    // Concatenate the output\n    const chunks: any[] = [];\n    for await (const batch of batches) {\n      chunks.push(batch);\n    }\n    // @ts-ignore\n    return concatenateArrayBuffers(...chunks);\n  }\n\n  if (!isBrowser && writer.encodeURLtoURL) {\n    // TODO - how to generate filenames with correct extensions?\n    const tmpInputFilename = getTemporaryFilename('input');\n    await writeFile(tmpInputFilename, data);\n\n    const tmpOutputFilename = getTemporaryFilename('output');\n\n    const outputFilename = await encodeURLtoURL(\n      tmpInputFilename,\n      tmpOutputFilename,\n      writer,\n      options\n    );\n\n    const response = await fetchFile(outputFilename);\n    return response.arrayBuffer();\n  }\n\n  throw new Error('Writer could not encode data');\n}\n\n/**\n * Encode loaded data into a binary ArrayBuffer using the specified Writer.\n */\nexport function encodeSync(data: any, writer: Writer, options?: LoaderOptions): ArrayBuffer {\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n  throw new Error('Writer could not synchronously encode data');\n}\n\n/**\n * Encode loaded data to text using the specified Writer\n * @note This is a convenience function not intended for production use on large input data.\n * It is not optimized for performance. Data maybe converted from text to binary and back.\n * @throws if the writer does not generate text output\n */\nexport async function encodeText(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): Promise<string> {\n  if (writer.text && writer.encodeText) {\n    return await writer.encodeText(data, options);\n  }\n\n  if (writer.text && (writer.encode || writer.encodeInBatches)) {\n    const arrayBuffer = await encode(data, writer, options);\n    return new TextDecoder().decode(arrayBuffer);\n  }\n\n  throw new Error('Writer could not encode data as text');\n}\n\n/**\n * Encode loaded data into a sequence (iterator) of binary ArrayBuffers using the specified Writer.\n */\nexport function encodeInBatches(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): AsyncIterable<ArrayBuffer> {\n  if (writer.encodeInBatches) {\n    const dataIterator = getIterator(data);\n    return writer.encodeInBatches(dataIterator, options);\n  }\n  // TODO -fall back to atomic encode?\n  throw new Error('Writer could not encode data in batches');\n}\n\n/**\n * Encode data stored in a file (on disk) to another file.\n * @note Node.js only. This function enables using command-line converters as \"writers\".\n */\nexport async function encodeURLtoURL(\n  inputUrl,\n  outputUrl,\n  writer: Writer,\n  options\n): Promise<string> {\n  inputUrl = resolvePath(inputUrl);\n  outputUrl = resolvePath(outputUrl);\n  if (isBrowser || !writer.encodeURLtoURL) {\n    throw new Error();\n  }\n  const outputFilename = await writer.encodeURLtoURL(inputUrl, outputUrl, options);\n  return outputFilename;\n}\n\n/**\n * @todo TODO - this is an unacceptable hack!!!\n */\nfunction getIterator(data) {\n  const dataIterator = [{table: data, start: 0, end: data.length}];\n  return dataIterator;\n}\n\n/**\n * @todo Move to utils\n */\nfunction getTemporaryFilename(filename: string): string {\n  return `/tmp/${filename}`;\n}\n","import type {Writer, WriterOptions} from '@loaders.gl/loader-utils';\nimport {encode, encodeSync} from './encode';\nimport {writeFile, writeFileSync} from '../fetch/write-file';\n\nexport async function save(data, url, writer: Writer, options: WriterOptions) {\n  const encodedData = await encode(data, writer, options);\n  return await writeFile(url, encodedData);\n}\n\nexport function saveSync(data, url, writer, options) {\n  const encodedData = encodeSync(data, writer, options);\n  return writeFileSync(url, encodedData);\n}\n","import getHiResTimestamp from '../utils/hi-res-timestamp';\nexport default class Stat {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.sampleSize = 1;\n    this.reset();\n  }\n\n  setSampleSize(samples) {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  incrementCount() {\n    this.addCount(1);\n    return this;\n  }\n\n  decrementCount() {\n    this.subtractCount(1);\n    return this;\n  }\n\n  addCount(value) {\n    this._count += value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  subtractCount(value) {\n    this._count -= value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  addTime(time) {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  timeStart() {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n    return this;\n  }\n\n  timeEnd() {\n    if (!this._timerPending) {\n      return this;\n    }\n\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount() {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  getSampleAverageTime() {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  getSampleHz() {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount() {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  getAverageTime() {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  getHz() {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  reset() {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n    return this;\n  }\n\n  _checkSampling() {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n\n}\n//# sourceMappingURL=stat.js.map","import Stat from './stat';\nexport default class Stats {\n  constructor({\n    id,\n    stats\n  }) {\n    this.id = id;\n    this.stats = {};\n\n    this._initializeStats(stats);\n\n    Object.seal(this);\n  }\n\n  get(name, type = 'count') {\n    return this._getOrCreate({\n      name,\n      type\n    });\n  }\n\n  get size() {\n    return Object.keys(this.stats).length;\n  }\n\n  reset() {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn) {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable() {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n    return table;\n  }\n\n  _initializeStats(stats = []) {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat) {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {\n      name,\n      type\n    } = stat;\n\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n\n    return this.stats[name];\n  }\n\n}\n//# sourceMappingURL=stats.js.map","import {Stats} from '@probe.gl/stats';\n\ntype Handle = any;\ntype DoneFunction = () => any;\ntype GetPriorityFunction = () => number;\ntype RequestResult = {\n  done: DoneFunction;\n} | null;\n\n/** RequestScheduler Options */\nexport type RequestSchedulerProps = {\n  id?: string;\n  throttleRequests?: boolean;\n  maxRequests?: number;\n};\n\nconst STAT_QUEUED_REQUESTS = 'Queued Requests';\nconst STAT_ACTIVE_REQUESTS = 'Active Requests';\nconst STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nconst STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nconst STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\n\nconst DEFAULT_PROPS: Required<RequestSchedulerProps> = {\n  id: 'request-scheduler',\n  // Specifies if the request scheduler should throttle incoming requests, mainly for comparative testing\n  throttleRequests: true,\n  // The maximum number of simultaneous active requests. Un-throttled requests do not observe this limit.\n  maxRequests: 6\n};\n\n/** Tracks one request */\ntype Request = {\n  handle: Handle;\n  priority: number;\n  getPriority: GetPriorityFunction;\n  resolve?: (value: any) => any;\n};\n\n/**\n * Used to issue a request, without having them \"deeply queued\" by the browser.\n * @todo - Track requests globally, across multiple servers\n */\nexport default class RequestScheduler {\n  readonly props: Required<RequestSchedulerProps>;\n  readonly stats: Stats;\n  activeRequestCount: number = 0;\n\n  /** Tracks the number of active requests and prioritizes/cancels queued requests. */\n  private requestQueue: Request[] = [];\n  private requestMap: Map<Handle, Promise<RequestResult>> = new Map();\n  private deferredUpdate: any = null;\n\n  constructor(props: RequestSchedulerProps = {}) {\n    this.props = {...DEFAULT_PROPS, ...props};\n\n    // Returns the statistics used by the request scheduler.\n    this.stats = new Stats({id: this.props.id});\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n  }\n\n  /**\n   * Called by an application that wants to issue a request, without having it deeply queued by the browser\n   *\n   * When the returned promise resolved, it is OK for the application to issue a request.\n   * The promise resolves to an object that contains a `done` method.\n   * When the application's request has completed (or failed), the application must call the `done` function\n   *\n   * @param handle\n   * @param getPriority will be called when request \"slots\" open up,\n   *    allowing the caller to update priority or cancel the request\n   *    Highest priority executes first, priority < 0 cancels the request\n   * @returns a promise\n   *   - resolves to a object (with a `done` field) when the request can be issued without queueing,\n   *   - resolves to `null` if the request has been cancelled (by the callback return < 0).\n   *     In this case the application should not issue the request\n   */\n  scheduleRequest(\n    handle: Handle,\n    getPriority: GetPriorityFunction = () => 0\n  ): Promise<RequestResult> {\n    // Allows throttling to be disabled\n    if (!this.props.throttleRequests) {\n      return Promise.resolve({done: () => {}});\n    }\n\n    // dedupe\n    if (this.requestMap.has(handle)) {\n      return this.requestMap.get(handle) as Promise<any>;\n    }\n\n    const request: Request = {handle, priority: 0, getPriority};\n    const promise = new Promise<RequestResult>((resolve) => {\n      // @ts-ignore\n      request.resolve = resolve;\n      return request;\n    });\n\n    this.requestQueue.push(request);\n    this.requestMap.set(handle, promise);\n    this._issueNewRequests();\n    return promise;\n  }\n\n  // PRIVATE\n\n  _issueRequest(request: Request): Promise<any> {\n    const {handle, resolve} = request;\n    let isDone = false;\n\n    const done = () => {\n      // can only be called once\n      if (!isDone) {\n        isDone = true;\n\n        // Stop tracking a request - it has completed, failed, cancelled etc\n        this.requestMap.delete(handle);\n        this.activeRequestCount--;\n        // A slot just freed up, see if any queued requests are waiting\n        this._issueNewRequests();\n      }\n    };\n\n    // Track this request\n    this.activeRequestCount++;\n\n    return resolve ? resolve({done}) : Promise.resolve({done});\n  }\n\n  /** We check requests asynchronously, to prevent multiple updates */\n  _issueNewRequests(): void {\n    if (!this.deferredUpdate) {\n      this.deferredUpdate = setTimeout(() => this._issueNewRequestsAsync(), 0);\n    }\n  }\n\n  /** Refresh all requests  */\n  _issueNewRequestsAsync() {\n    // TODO - shouldn't we clear the timeout?\n    this.deferredUpdate = null;\n\n    const freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n    if (freeSlots === 0) {\n      return;\n    }\n\n    this._updateAllRequests();\n\n    // Resolve pending promises for the top-priority requests\n    for (let i = 0; i < freeSlots; ++i) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        this._issueRequest(request); // eslint-disable-line @typescript-eslint/no-floating-promises\n      }\n    }\n\n    // Uncomment to debug\n    // console.log(`${freeSlots} free slots, ${this.requestQueue.length} queued requests`);\n  }\n\n  /** Ensure all requests have updated priorities, and that no longer valid requests are cancelled */\n  _updateAllRequests() {\n    const requestQueue = this.requestQueue;\n    for (let i = 0; i < requestQueue.length; ++i) {\n      const request = requestQueue[i];\n      if (!this._updateRequest(request)) {\n        // Remove the element and make sure to adjust the counter to account for shortened array\n        requestQueue.splice(i, 1);\n        this.requestMap.delete(request.handle);\n        i--;\n      }\n    }\n\n    // Sort the remaining requests based on priority\n    requestQueue.sort((a, b) => a.priority - b.priority);\n  }\n\n  /** Update a single request by calling the callback */\n  _updateRequest(request) {\n    request.priority = request.getPriority(request.handle); // eslint-disable-line callback-return\n\n    // by returning a negative priority, the callback cancels the request\n    if (request.priority < 0) {\n      request.resolve(null);\n      return false;\n    }\n    return true;\n  }\n}\n","export type MakeDOMStreamOptions = {\n  /** Stream allocates an arrayBuffer. Enables use of a default reader. */\n  autoAllocateChunkSize?: number;\n  /** Total number of chunks in queue before back pressure is applied */\n  highWaterMark?: number;\n};\n\n/** Builds a DOM stream from an iterator */\nexport function makeDOMStream<ArrayBuffer>(\n  source: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: MakeDOMStreamOptions\n): ReadableStream {\n  const iterator = source[Symbol.asyncIterator]\n    ? source[Symbol.asyncIterator]()\n    : source[Symbol.iterator]();\n\n  return new ReadableStream<Uint8Array>(\n    {\n      // Create a byte stream (enables `Response(stream).arrayBuffer()`)\n      // Only supported on Chrome\n      // See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController\n      // @ts-expect-error Only Chrome supports byte streams\n      type: 'bytes',\n\n      async pull(controller) {\n        try {\n          const {done, value} = await iterator.next();\n          if (done) {\n            controller.close();\n          } else {\n            // TODO - ignores controller.desiredSize\n            controller.enqueue(new Uint8Array(value));\n          }\n        } catch (error) {\n          controller.error(error);\n        }\n      },\n\n      async cancel() {\n        await iterator?.return?.();\n      }\n    },\n    // options: QueingStrategy<Uint8Array>\n    {\n      // This is bytes, not chunks\n      highWaterMark: 2 ** 24,\n      ...options\n    }\n  );\n}\n","import type {ReadableStreamType} from '../../javascript-utils/is-type';\nimport type {MakeDOMStreamOptions} from './make-dom-stream';\nimport type {MakeNodeStreamOptions} from './make-node-stream';\n\nimport {isBrowser} from '@loaders.gl/loader-utils';\nimport {makeDOMStream} from './make-dom-stream';\nimport {makeNodeStream} from './make-node-stream';\n\nexport type MakeStreamOptions = MakeDOMStreamOptions | MakeNodeStreamOptions;\n\n/**\n * Returns a stream for an (async) iterator (works in both Node.js and browsers)\n */\nexport function makeStream(\n  data: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: MakeStreamOptions\n): ReadableStreamType {\n  return isBrowser ? makeDOMStream(data, options) : makeNodeStream(data, options);\n}\n","// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nimport {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullWorkerLoader: Loader = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  worker: true,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullLoader: LoaderWithParser = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: async (arrayBuffer) => arrayBuffer,\n  parseSync: (arrayBuffer) => arrayBuffer,\n  parseInBatches: async function* generator(asyncIterator) {\n    for await (const batch of asyncIterator) {\n      yield batch;\n    }\n  },\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n","import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n","// Forked from github AnthumChris/fetch-progress-indicators under MIT license\n\n/**\n * Intercepts the Response stream and creates a new Response\n */\nexport default async function fetchProgress(\n  response: Response | Promise<Response>,\n  onProgress: any, // TODO better callback types\n  onDone = () => {},\n  onError = () => {}\n) {\n  response = await response;\n  if (!response.ok) {\n    // ERROR checking needs to be done separately\n    return response;\n  }\n  const body = response.body;\n  if (!body) {\n    // 'ReadableStream not yet supported in this browser.\n    return response;\n  }\n  const contentLength = response.headers.get('content-length') || 0;\n  const totalBytes = contentLength && parseInt(contentLength);\n  if (!(contentLength > 0)) {\n    return response;\n  }\n  // Currently override only implemented in browser\n  if (typeof ReadableStream === 'undefined' || !body.getReader) {\n    return response;\n  }\n\n  // Create a new stream that invisbly wraps original stream\n  const progressStream = new ReadableStream({\n    async start(controller) {\n      const reader = body.getReader();\n      await read(controller, reader, 0, totalBytes, onProgress, onDone, onError);\n    }\n  });\n\n  return new Response(progressStream);\n}\n\n// Forward to original streams controller\n// TODO - this causes a crazy deep \"async stack\"... rewrite as async iterator?\n// eslint-disable-next-line max-params\nasync function read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError) {\n  try {\n    const {done, value} = await reader.read();\n    if (done) {\n      onDone();\n      controller.close();\n      return;\n    }\n    loadedBytes += value.byteLength;\n    const percent = Math.round((loadedBytes / totalBytes) * 100);\n    onProgress(percent, {loadedBytes, totalBytes});\n    controller.enqueue(value);\n    await read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError);\n  } catch (error) {\n    controller.error(error);\n    onError(error);\n  }\n}\n","import type {FileSystem} from './filesystem';\n\ntype BrowserFileSystemOptions = {\n  fetch?: typeof fetch;\n};\n\n/**\n * FileSystem adapter for a browser FileList.\n * Holds a list of browser 'File' objects.\n */\nexport default class BrowserFileSystem implements FileSystem {\n  private _fetch: typeof fetch;\n  private files: {[filename: string]: File} = {};\n  private lowerCaseFiles: {[filename: string]: File} = {};\n  private usedFiles: {[filename: string]: boolean} = {};\n\n  /**\n   * A FileSystem API wrapper around a list of browser 'File' objects\n   * @param files\n   * @param options\n   */\n  constructor(files: FileList | File[], options?: BrowserFileSystemOptions) {\n    this._fetch = options?.fetch || fetch;\n\n    for (let i = 0; i < files.length; ++i) {\n      const file = files[i];\n      this.files[file.name] = file;\n      this.lowerCaseFiles[file.name.toLowerCase()] = file;\n      this.usedFiles[file.name] = false;\n    }\n\n    this.fetch = this.fetch.bind(this);\n  }\n\n  // implements IFileSystem\n\n  /**\n   * Implementation of fetch against this file system\n   * Delegates to global fetch for http{s}:// or data://\n   */\n  async fetch(path: string, options?: RequestInit): Promise<Response> {\n    // Fallback to handle https:/http:/data: etc fetches\n    if (path.includes('://')) {\n      return this._fetch(path, options);\n    }\n\n    // Local fetches are served from the list of files\n    const file = this.files[path];\n    if (!file) {\n      return new Response(path, {status: 400, statusText: 'NOT FOUND'});\n    }\n\n    const headers = new Headers(options?.headers);\n    const range = headers.get('Range');\n    const bytes = range && /bytes=($1)-($2)/.exec(range);\n\n    if (bytes) {\n      const start = parseInt(bytes[1]);\n      const end = parseInt(bytes[2]);\n      // The trick when reading File objects is to read successive \"slices\" of the File\n      // Per spec https://w3c.github.io/FileAPI/, slicing a File should only update the start and end fields\n      // Actually reading from file should happen in `readAsArrayBuffer` (and as far we can tell it does)\n      const data = await file.slice(start, end).arrayBuffer();\n      const response = new Response(data);\n      Object.defineProperty(response, 'url', {value: path});\n      return response;\n    }\n\n    // return makeResponse()\n    const response = new Response(file);\n    Object.defineProperty(response, 'url', {value: path});\n    return response;\n  }\n\n  /**\n   * List filenames in this filesystem\n   * @param dirname\n   * @returns\n   */\n  async readdir(dirname?: string): Promise<string[]> {\n    const files: string[] = [];\n    for (const path in this.files) {\n      files.push(path);\n    }\n    // TODO filter by dirname\n    return files;\n  }\n\n  /**\n   * Return information (size) about files in this file system\n   */\n  async stat(path: string, options?: object): Promise<{size: number}> {\n    const file = this.files[path];\n    if (!file) {\n      throw new Error(path);\n    }\n    return {size: file.size};\n  }\n\n  /**\n   * Just removes the file from the list\n   */\n  async unlink(path: string): Promise<void> {\n    delete this.files[path];\n    delete this.lowerCaseFiles[path];\n    this.usedFiles[path] = true;\n  }\n\n  // implements IRandomAccessFileSystem\n\n  // RANDOM ACCESS\n  async open(pathname: string, flags, mode?): Promise<any> {\n    return this.files[pathname];\n  }\n\n  /**\n   * Read a range into a buffer\n   * @todo - handle position memory\n   * @param buffer is the buffer that the data (read from the fd) will be written to.\n   * @param offset is the offset in the buffer to start writing at.\n   * @param length is an integer specifying the number of bytes to read.\n   * @param position is an argument specifying where to begin reading from in the file. If position is null, data will be read from the current file position, and the file position will be updated. If position is an integer, the file position will remain unchanged.\n   */\n  async read(\n    fd: any,\n    buffer: ArrayBuffer,\n    offset: number = 0,\n    length: number = buffer.byteLength,\n    position: number | null = null\n  ): Promise<{bytesRead: number; buffer: ArrayBuffer}> {\n    const file = fd as File;\n    const startPosition = 0; // position\n    const arrayBuffer = await file.slice(startPosition, startPosition + length).arrayBuffer();\n    // copy into target buffer\n    return {bytesRead: length, buffer: arrayBuffer};\n  }\n\n  async close(fd: number): Promise<void> {\n    // NO OP\n  }\n\n  // fstat(fd: number): Promise<object>; // Stat\n\n  // PRIVATE\n\n  // Supports case independent paths, and file usage tracking\n  _getFile(path, used) {\n    // Prefer case match, but fall back to case indepent.\n    const file = this.files[path] || this.lowerCaseFiles[path];\n    if (file && used) {\n      this.usedFiles[path] = true;\n    }\n    return file;\n  }\n}\n","// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* makeTextDecoderIterator(\n  arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: TextDecoderOptions = {}\n): AsyncIterable<string> {\n  const textDecoder = new TextDecoder(undefined, options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* makeTextEncoderIterator(\n  textIterator: AsyncIterable<string> | Iterable<ArrayBuffer>\n): AsyncIterable<ArrayBuffer> {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* makeLineIterator(\n  textIterator: AsyncIterable<string>\n): AsyncIterable<string> {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* makeNumberedLineIterator(\n  lineIterator: AsyncIterable<string>\n): AsyncIterable<{counter: number; line: string}> {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n"],"sourceRoot":""}