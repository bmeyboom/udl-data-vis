{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/common.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/lib/common.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/lib/validators.js","webpack:///../loader-utils/src/index.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/vec3.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/index.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/mat4.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/globals.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/vec4.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/lib/assert.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/mat3.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/process/browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/vec2.js","webpack:///../core/src/javascript-utils/is-type.ts","webpack:///../core/src/lib/loader-utils/option-utils.ts","webpack:///../math/src/index.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/euler.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/base/math-array.js","webpack:///../worker-utils/src/lib/env-utils/assert.ts","webpack:///../core/src/lib/loader-utils/normalize-loader.ts","webpack:///./src/lib/constants.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/is-browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/vector3.js","webpack:///(webpack)/buildin/global.js","webpack:///../gltf/src/lib/gltf-utils/gltf-constants.ts","webpack:///../gltf/src/lib/utils/assert.js","webpack:///../gltf/src/lib/api/gltf-scenegraph.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/is-electron.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/base/vector.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/matrix4.js","webpack:///../core/src/lib/utils/resource-utils.ts","webpack:///../tiles/src/constants.ts","webpack:///../tiles/src/tileset/traversers/tileset-traverser.ts","webpack:///../math/src/geometry/constants.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/geospatial/dist/esm/constants.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/geospatial/dist/esm/type-utils.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/helpers/scale-to-geodetic-surface.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/helpers/ellipsoid-transform.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/geospatial/dist/esm/ellipsoid/ellipsoid.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stat.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/lib/stats.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@probe.gl/stats/dist/esm/utils/hi-res-timestamp.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/gl-matrix/esm/quat.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/quaternion.js","webpack:///../worker-utils/src/index.ts","webpack:///../worker-utils/src/lib/env-utils/version.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/spherical-coordinates.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/pose.js","webpack:///../core/src/lib/api/select-loader.ts","webpack:///./src/lib/classes/tile-3d-feature-table.js","webpack:///./src/lib/parsers/helpers/parse-3d-tile-header.js","webpack:///../gltf/src/lib/utils/version.js","webpack:///../images/src/lib/utils/assert.js","webpack:///../images/src/lib/category-api/parsed-image-api.ts","webpack:///./src/lib/encoders/helpers/encode-3d-tile-header.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/base/matrix.js","webpack:///../worker-utils/src/lib/env-utils/globals.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-thread.ts","webpack:///../worker-utils/src/lib/worker-utils/get-transfer-list.ts","webpack:///../tiles/src/tileset/tile-3d.ts","webpack:///../core/src/index.ts","webpack:///../core/src/lib/fetch/fetch-file.ts","webpack:///../core/src/lib/fetch/write-file.ts","webpack:///../core/src/lib/api/parse.ts","webpack:///../core/src/lib/loader-utils/get-data.ts","webpack:///../core/src/lib/loader-utils/loader-context.ts","webpack:///../schema/src/lib/schema/index.ts","webpack:///../math/src/geometry/utils/assert.ts","webpack:///./src/lib/classes/tile-3d-batch-table.js","webpack:///./src/lib/parsers/helpers/parse-3d-tile-tables.js","webpack:///../images/src/lib/utils/globals.ts","webpack:///../images/src/lib/category-api/binary-image-api.ts","webpack:///../gltf/src/lib/gltf-utils/gltf-utils.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/constants.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/axis-aligned-bounding-box.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/bounding-sphere.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/bounding-volumes/oriented-bounding-box.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/plane.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/culling-volume.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/perspective-off-center-frustum.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/perspective-frustum.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/algorithms/bounding-sphere-from-points.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/algorithms/compute-eigen-decomposition.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/culling/dist/esm/lib/algorithms/bounding-box-from-points.js","webpack:///./src/tiles-3d-loader.ts","webpack:///../loader-utils/src/lib/env-utils/assert.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-job.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-farm.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-pool.ts","webpack:///../worker-utils/src/lib/worker-farm/worker-body.ts","webpack:///../worker-utils/src/lib/worker-api/get-worker-url.ts","webpack:///../worker-utils/src/lib/async-queue/async-queue.ts","webpack:///../loader-utils/src/lib/binary-utils/get-first-characters.ts","webpack:///../loader-utils/src/lib/binary-utils/array-buffer-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/memory-copy-utils.ts","webpack:///../tiles/src/index.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/vector2.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/vector4.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/classes/matrix3.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/@math.gl/core/dist/esm/lib/math-utils.js","webpack:///../tiles/src/tileset/tileset-cache.ts","webpack:///../tiles/src/tileset/helpers/transform-utils.ts","webpack:///../tiles/src/tileset/helpers/frame-state.ts","webpack:///../core/src/lib/utils/response-utils.ts","webpack:///../core/src/lib/loader-utils/loggers.ts","webpack:///../core/src/lib/api/register-loaders.ts","webpack:///../core/src/iterators/make-iterator/make-iterator.ts","webpack:///../core/src/lib/api/parse-in-batches.ts","webpack:///../core/src/lib/api/encode.ts","webpack:///../core/src/iterators/make-stream/make-dom-stream.ts","webpack:///../tiles/src/tileset/helpers/bounding-volume.ts","webpack:///../tiles/src/tileset/helpers/i3s-lod.ts","webpack:///./src/lib/utils/version.js","webpack:///./src/lib/parsers/helpers/parse-utils.js","webpack:///../draco/src/index.ts","webpack:///../draco/src/lib/utils/version.ts","webpack:///../schema/src/index.ts","webpack:///../schema/src/lib/table/row-table-batch-aggregator.ts","webpack:///../schema/src/lib/utils/row-utils.ts","webpack:///../schema/src/lib/table/columnar-table-batch-aggregator.ts","webpack:///../draco/src/lib/draco-module-loader.ts","webpack:///../math/src/geometry/is-geometry.ts","webpack:///../math/src/geometry/iterators/primitive-iterator.ts","webpack:///../math/src/geometry/primitives/modes.ts","webpack:///./src/lib/parsers/helpers/parse-3d-tile-gltf-view.js","webpack:///../images/src/index.ts","webpack:///../images/src/lib/utils/version.ts","webpack:///../images/src/lib/parsers/parse-image.ts","webpack:///../images/src/lib/category-api/image-type.ts","webpack:///../images/src/lib/parsers/parse-to-image.ts","webpack:///../images/src/lib/parsers/svg-utils.ts","webpack:///../gltf/src/lib/api/post-process-gltf.js","webpack:///../gltf/src/lib/parsers/parse-glb.ts","webpack:///../gltf/src/lib/encoders/encode-glb.js","webpack:///./src/lib/ion/ion.js","webpack:///./src/bundle.ts","webpack:///./src/index.ts","webpack:///../loader-utils/src/lib/env-utils/globals.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/create-loader-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/get-loadable-worker-url.ts","webpack:///../worker-utils/src/lib/worker-api/process-on-worker.ts","webpack:///../worker-utils/src/lib/worker-utils/remove-nontransferable-options.ts","webpack:///../worker-utils/src/lib/worker-api/create-worker.ts","webpack:///../worker-utils/src/lib/worker-api/validate-worker-version.ts","webpack:///../worker-utils/src/lib/library-utils/library-utils.ts","webpack:///../worker-utils/src/lib/process-utils/child-process-proxy.ts","webpack:///../worker-utils/src/lib/process-utils/process-utils.ts","webpack:///../loader-utils/src/lib/worker-loader-utils/parse-with-worker.ts","webpack:///../loader-utils/src/lib/parser-utils/parse-json.ts","webpack:///../loader-utils/src/lib/binary-utils/binary-copy-utils.ts","webpack:///../loader-utils/src/lib/binary-utils/encode-utils.ts","webpack:///../loader-utils/src/lib/iterators/text-iterators.ts","webpack:///../loader-utils/src/lib/iterators/async-iteration.ts","webpack:///../loader-utils/src/lib/request-utils/request-scheduler.ts","webpack:///../loader-utils/src/lib/path-utils/path.ts","webpack:///../loader-utils/src/lib/path-utils/file-aliases.ts","webpack:///../loader-utils/src/lib/node/fs.ts","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/util.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/support/isBufferBrowser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///../loader-utils/src/lib/binary-utils/buffer-utils.ts","webpack:///../loader-utils/src/json-loader.ts","webpack:///../tiles/src/tileset/tileset-3d.ts","webpack:///../tiles/src/utils/doubly-linked-list.js","webpack:///../tiles/src/utils/doubly-linked-list-node.js","webpack:///../tiles/src/tileset/helpers/zoom.ts","webpack:///../core/src/lib/utils/mime-type-utils.ts","webpack:///../core/src/lib/fetch/read-array-buffer.ts","webpack:///../core/src/lib/fetch/read-file.ts","webpack:///../core/src/lib/api/set-loader-options.ts","webpack:///../core/src/lib/loader-utils/option-defaults.ts","webpack:///../core/src/iterators/make-iterator/make-string-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-array-buffer-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-blob-iterator.ts","webpack:///../core/src/iterators/make-iterator/make-stream-iterator.ts","webpack:///../core/src/lib/api/parse-sync.ts","webpack:///../core/src/lib/api/load.ts","webpack:///../core/src/lib/api/load-in-batches.ts","webpack:///../core/src/lib/api/save.ts","webpack:///../core/src/iterators/make-stream/make-stream.ts","webpack:///../core/src/null-loader.ts","webpack:///../core/src/lib/progress/fetch-progress.ts","webpack:///../core/src/lib/filesystems/browser-filesystem.ts","webpack:///../tiles/src/tileset/helpers/tiles-3d-lod.ts","webpack:///../tiles/src/tileset/helpers/3d-tiles-options.ts","webpack:///../tiles/src/utils/managed-array.js","webpack:///../tiles/src/tileset/traversers/tileset-3d-traverser.ts","webpack:///../tiles/src/tileset/traversers/i3s-tileset-traverser.ts","webpack:///../tiles/src/tileset/traversers/i3s-tile-manager.ts","webpack:///./src/lib/parsers/parse-3d-tile.js","webpack:///./src/lib/parsers/parse-3d-tile-point-cloud.js","webpack:///../draco/src/draco-loader.ts","webpack:///../draco/src/lib/draco-parser.ts","webpack:///../schema/src/lib/table/table-batch-builder.ts","webpack:///../schema/src/lib/table/base-table-batch-aggregator.ts","webpack:///../schema/src/category/mesh/mesh-utils.ts","webpack:///../schema/src/lib/schema/impl/schema.ts","webpack:///../schema/src/lib/utils/assert.ts","webpack:///../schema/src/lib/schema/impl/field.ts","webpack:///../schema/src/lib/schema/impl/type.ts","webpack:///../schema/src/lib/schema/impl/enum.ts","webpack:///../schema/src/lib/schema-utils/deduce-table-schema.ts","webpack:///../schema/src/lib/schema-utils/get-type-info.ts","webpack:///../schema/src/lib/schema-utils/type-utils.ts","webpack:///../schema/src/lib/utils/async-queue.ts","webpack:///../draco/src/lib/utils/schema-attribute-utils.ts","webpack:///../draco/src/draco-writer.ts","webpack:///../draco/src/lib/draco-builder.ts","webpack:///../math/src/geometry/gl/gl-type.ts","webpack:///../math/src/geometry/iterators/attribute-iterator.ts","webpack:///../math/src/geometry/attributes/compute-vertex-normals.ts","webpack:///../math/src/geometry/attributes/get-attribute-from-geometry.ts","webpack:///../math/src/geometry/colors/rgb565.ts","webpack:///../math/src/geometry/typed-arrays/typed-array-utils.ts","webpack:///../math/src/geometry/compression/attribute-compression.ts","webpack:///./src/lib/classes/helpers/tile-3d-accessor-utils.js","webpack:///./src/lib/classes/tile-3d-batch-table-hierarchy.js","webpack:///./src/lib/parsers/helpers/normalize-3d-tile-colors.js","webpack:///./src/lib/parsers/helpers/normalize-3d-tile-normals.js","webpack:///./src/lib/parsers/helpers/normalize-3d-tile-positions.js","webpack:///./src/lib/parsers/parse-3d-tile-batched-model.js","webpack:///../gltf/src/index.ts","webpack:///../gltf/src/gltf-loader.ts","webpack:///../gltf/src/lib/parsers/parse-gltf.ts","webpack:///../images/src/image-loader.ts","webpack:///../images/src/lib/parsers/parse-to-image-bitmap.ts","webpack:///../images/src/lib/parsers/parse-to-node-image.ts","webpack:///../images/src/image-writer.ts","webpack:///../images/src/lib/encoders/encode-image.ts","webpack:///../images/src/lib/texture-api/load-image.ts","webpack:///../images/src/lib/texture-api/generate-url.ts","webpack:///../images/src/lib/texture-api/deep-load.ts","webpack:///../images/src/lib/texture-api/async-deep-map.ts","webpack:///../gltf/src/lib/gltf-utils/resolve-url.ts","webpack:///../gltf/src/lib/gltf-utils/get-typed-array.ts","webpack:///../gltf/src/lib/extensions/gltf-extensions.ts","webpack:///../gltf/src/lib/extensions/KHR_draco_mesh_compression.ts","webpack:///../gltf/src/lib/gltf-utils/gltf-attribute-utils.ts","webpack:///../gltf/src/lib/extensions/KHR_materials_unlit.ts","webpack:///../gltf/src/lib/extensions/KHR_lights_punctual.ts","webpack:///../gltf/src/lib/extensions/KHR_techniques_webgl.ts","webpack:///../gltf/src/lib/api/normalize-gltf-v1.js","webpack:///../gltf/src/lib/extensions/KHR_binary_gltf.ts","webpack:///../gltf/src/gltf-writer.ts","webpack:///../gltf/src/lib/encoders/encode-gltf.js","webpack:///../gltf/src/glb-loader.ts","webpack:///../gltf/src/glb-writer.ts","webpack:///./src/lib/parsers/parse-3d-tile-instanced-model.js","webpack:///./src/lib/parsers/parse-3d-tile-composite.js","webpack:///./src/lib/parsers/parse-3d-tile-header.js","webpack:///./src/cesium-ion-loader.ts","webpack:///./src/tile-3d-writer.ts","webpack:///./src/lib/encoders/encode-3d-tile.js","webpack:///./src/lib/encoders/encode-3d-tile-composite.js","webpack:///./src/lib/encoders/encode-3d-tile-batched-model.js","webpack:///./src/lib/encoders/encode-3d-tile-instanced-model.js","webpack:///./src/lib/encoders/encode-3d-tile-point-cloud.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/globals.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/local-storage.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/formatters.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/color.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/autobind.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/assert.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/utils/hi-res-timestamp.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/lib/log.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/env/get-browser.js","webpack:////home/user/apps/loaders.gl_duplicate/node_modules/probe.gl/dist/esm/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","PI","hypot","y","arguments","length","sqrt","RADIANS_TO_DEGREES","DEGREES_TO_RADIANS","config","configure","options","formatValue","precision","round","concat","parseFloat","toPrecision","isArray","ArrayBuffer","isView","DataView","clone","array","map","func","result","toRadians","degrees","radians","toDegrees","sin","angle","cos","tan","asin","acos","atan","clamp","min","max","lerp","a","b","ai","equals","epsilon","oldEpsilon","Number","isFinite","abs","exactEquals","constructor","withEpsilon","oldPrecision","debug","printTypes","printDegrees","printRowMajor","checkNumber","Error","checkVector","v","callerName","validateVector","deprecated","method","version","console","warn","out","x","z","fromValues","normalize","len","dot","cross","ax","ay","az","bx","by","bz","transformMat4","w","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","rotateX","rad","rotateY","rotateZ","mag","cosine","vec","globals","self","window","global","mathgl","transpose","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","multiply","b0","b1","b2","b3","translate","scale","rotate","axis","b12","b20","b21","b22","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","fromQuat","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","Infinity","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","identity","document","process","self_","window_","global_","document_","process_","console_","copy","set","add","squaredLength","aw","ix","iy","iz","iw","a0","a1","a2","a3","assert","condition","message","vec2_transformMat4AsVector","vec3_transformMat4AsVector","vec3_transformMat2","vec4_transformMat2","vec4_transformMat3","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","push","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","transformMat2","transformMat2d","isBoolean","isFunction","isObject","then","iterator","asyncIterator","next","Response","arrayBuffer","text","json","File","Blob","isWritableDOMStream","abort","getWriter","isReadableDOMStream","ReadableStream","tee","cancel","getReader","isBuffer","isWritableNodeStream","end","write","writable","isReadableNodeStream","read","pipe","readable","state","getGlobalLoaderState","globalOptions","getGlobalLoaderOptions","normalizeOptionsInternal","loader","loaders","url","validateOptionsObject","DEFAULT_LOADER_OPTIONS","REMOVED_LOADER_OPTIONS","idOptions","id","loaderOptions","deprecatedOptions","validateOptions","context","fetchOptions","fetch","fetchFile","_state","defaultOptions","loaderName","prefix","isSubOptions","probeLog","suggestion","findSimilarOption","optionKey","lowerCaseOptionKey","toLowerCase","bestSuggestion","lowerCaseKey","startsWith","mergedOptions","baseUri","addUrlOptions","log","NullLog","mergeNestedFields","isPureObject","Euler","ZYX","order","RotationOrders","DefaultOrder","super","fromVector3","quaternion","ysqr","t0","t1","t2","t3","t4","roll","atan2","pitch","yaw","RollPitchYaw","check","offset","checkOrder","undefined","_fromRotationMatrix","_getRotationMatrix","XYZ","YXZ","ZXY","YZX","XZY","te","elements","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","cy","sy","cr","sr","cp","sp","MathArray","cls","ExtendableBuiltin","instance","Reflect","construct","from","setPrototypeOf","getPrototypeOf","configurable","__proto__","_extendableBuiltin","arrayOrObject","fromObject","ELEMENTS","toArray","toObject","target","to","formatString","opts","string","vector","minVector","maxVector","vectors","subtract","addScalar","scalar","validate","valid","isLoaderObject","parseTextSync","parseText","binary","extensions","TILE3D_TYPE","COMPOSITE","POINT_CLOUD","BATCHED_3D_MODEL","INSTANCED_3D_MODEL","GEOMETRY","VECTOR","TILE3D_TYPES","keys","BATCHED_MODEL","INSTANCED_MODEL","NOT_COMPUTED","USE_OPTIMIZATION","SKIP_OPTIMIZATION","isBrowser","String","isBrowserMainThread","ORIGIN","constants","Vector3","ZERO","freeze","origin","matrix4","transformAsPoint","matrix3","matrix2","g","Function","componentType","BYTES","type","COMPONENTS","parameter","magFilter","minFilter","wrapS","wrapT","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","5120","5121","5122","5123","5125","5126","DEFAULT_GLTF_JSON","asset","generator","buffers","GLTFScenegraph","gltf","sourceBuffers","byteLength","extras","extensionName","isExtension","getUsedExtensions","find","getRequiredExtensions","getExtension","extensionsRequired","extensionsUsed","index","getObject","bufferView","bufferIndex","getBufferView","buffer","binChunk","byteOffset","Uint8Array","accessor","getAccessor","getBuffer","data","getAccessorArrayTypeAndLength","ArrayType","image","registerUsedExtension","extension","extensionData","addExtension","registerRequiredExtension","ext","_removeStringFromArray","sceneIndex","scene","nodeIndices","scenes","nodes","node","meshIndex","matrix","nodeData","mesh","attributes","indices","material","glTFMesh","primitives","_addAttributes","indicesAccessor","_addIndices","meshes","imageData","mimeTypeOpt","metadata","getBinaryImageMetadata","mimeType","glTFImage","addBufferView","images","glTFBufferView","padToNBytes","bufferViews","bufferViewIndex","glTFAccessor","getAccessorTypeFromSize","size","count","accessors","sourceBuffer","minMax","_getAccessorMinMax","accessorDefaults","getComponentTypeFromArray","addAccessor","assign","texture","glTFTexture","source","imageIndex","textures","pbrMaterialInfo","materials","totalByteLength","targetArray","dstByteOffset","copyToArray","found","indexOf","splice","attributeKey","attributeData","attrName","_getGltfAttributeName","addBinaryBuffer","attributeName","subarray","componentIndex","isElectron","mockUserAgent","Boolean","electron","realUserAgent","navigator","userAgent","Vector","lengthSquared","mathArray","distanceSquared","dist","product","magnitude","distance","multiplyScalar","IDENTITY","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","Matrix4","m00","m10","m20","m30","m01","m02","m03","_computeInfinitePerspectiveOffCenter","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","focalDistance","halfY","fov","scaleResult","getScale","inverseScale0","inverseScale1","inverseScale2","rx","ry","rz","factor","transformAsVector","resource","isResponse","stripQueryString","contentTypeHeader","headers","parseMIMEType","parseMIMETypeFromURL","isBlob","QUERY_STRING_PATTERN","replace","UNLOADED","LOADING","PROCESSING","READY","EXPIRED","FAILED","ADD","REPLACE","EMPTY","SCENEGRAPH","POINTCLOUD","MESH","I3S","TILES3D","GEOMETRIC_ERROR","MAX_SCREEN_THRESHOLD","DEFAULT_PROPS","loadSiblings","skipLevelOfDetail","maximumScreenSpaceError","updateTransforms","onTraversalEnd","viewportTraversersMap","basePath","TilesetTraverser","_traversalStack","ManagedArray","_emptyTraversalStack","_frameNumber","root","selectedTiles","requestedTiles","emptyTiles","frameState","reset","updateTile","frameNumber","executeTraversal","stack","_selectionDepth","tile","pop","shouldRefine","canTraverse","updateChildTiles","updateAndPushChildren","hasRenderContent","parent","parentRefines","_shouldRefine","stoppedRefining","refine","TILE_REFINEMENT","loadTile","selectTile","touchTile","children","child","depth","sort","compareDistanceToCamera","checkRefines","hasVisibleChild","refines","isVisibleAndInRequestVolume","childRefines","_inRequestVolume","contentAvailable","executeEmptyTraversal","updateTileVisibility","shouldSelectTile","_selectedFrame","shouldLoadTile","_requestedFrame","_priority","_getPriority","tileset","_cache","touch","_touchedFrame","useParentMetric","ignoreVisibility","hasChildren","hasTilesetContent","contentExpired","hasUnloadedContent","screenSpaceError","_screenSpaceError","getScreenSpaceError","viewportIds","viewport","updateVisibility","_distanceToCamera","anyVisible","allDescendantsLoaded","POINTS","LINES","TRIANGLES","GL_PRIMITIVE_MODE","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","GL_TYPE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DOUBLE","GL","WGS84_CONSTANTS","radii","radiiSquared","WGS84_RADIUS_X","WGS84_RADIUS_Y","WGS84_RADIUS_Z","oneOverRadii","oneOverRadiiSquared","maximumRadius","centerToleranceSquared","scratchVector","fromCartographic","cartographic","longitude","latitude","height","toCartographic","isWGS84","scaleToGeodeticSurfaceIntersection","scaleToGeodeticSurfaceGradient","scratchOrigin","VECTOR_PRODUCT_LOCAL_FRAME","south","north","west","east","down","degeneratePositionLocalFrame","scratchAxisVectors","scratchVector1","scratchVector2","scratchVector3","localFrameToFixedFrame","ellipsoid","firstAxis","secondAxis","thirdAxis","cartesianOrigin","thirdAxisInferred","firstAxisVector","secondAxisVector","thirdAxisVector","sign","fromArray","geodeticSurfaceNormal","scratchNormal","scratchK","scratchPosition","scratchHeight","scratchCartesian","wgs84","radiiToTheFourth","minimumRadius","EPSILON1","squaredXOverSquaredZ","toString","normal","k","geodeticSurfaceNormalCartographic","gamma","cartesian","point","scaleToGeodeticSurface","h","vec3","_cartographicRadians","cartographicVectorRadians","fromCartographicToRadians","cosLatitude","positionX","positionY","positionZ","oneOverRadiiX","oneOverRadiiY","oneOverRadiiZ","squaredNorm","ratio","intersection","oneOverRadiiSquaredX","oneOverRadiiSquaredY","oneOverRadiiSquaredZ","gradient","xMultiplier","yMultiplier","zMultiplier","lambda","correction","xMultiplier2","yMultiplier2","zMultiplier2","EPSILON12","beta","position","EPSILON15","sampleSize","samples","addCount","subtractCount","_count","_samples","_checkSampling","time","_time","lastTiming","_startTime","_timerPending","addTime","lastSampleCount","lastSampleTime","stats","_initializeStats","seal","_getOrCreate","fn","table","forEach","stat","average","getAverageTime","hz","getHz","getHiResTimestamp","timestamp","performance","now","hrtime","timeParts","Date","setAxisAngle","bw","slerp","omega","cosom","sinom","scale0","scale1","fromMat3","fRoot","fTrace","j","vec4","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","mat3","IDENTITY_QUATERNION","fromAxisRotation","vectorA","vectorB","invDot","start","multiplyLeft","multiplyRight","NullWorker","VERSION","null","SphericalCoordinates","phi","theta","radius","bearing","altitude","radiusScale","other","lng","lat","Pose","orientation","pose","sw","cw","setRowMajor","getTransformationMatrix","EXT_PATTERN","validHTTPResponse","selectLoaderSync","nothrow","slice","getNoValidLoaderMessage","normalizeLoader","candidateLoaders","ignoreRegisteredLoaders","getRegisteredLoaders","normalizeLoaders","selectLoaderInternal","getResourceUrlAndType","testUrl","findLoaderByMIMEType","match","exec","findLoaderByExtension","findLoaderByUrl","testDataAgainstText","testDataAgainstBinary","findLoaderByInitialBytes","fallbackMimeType","status","getMagicString","getFirstCharacters","mimeTypes","includes","testText","tests","some","test","compareArrayBuffers","magic","testBinary","dataView","fromCharCode","getUint8","Tile3DFeatureTable","featureTableJson","featureTableBinary","featuresLength","_cachedTypedArrays","propertyName","componentLength","jsonValue","_getTypedArrayFromBinary","GLType","fromName","_getTypedArrayFromArray","featureId","typedArray","getPropertyArray","cachedTypedArrays","createTypedArray","view","getUint32","getImageType","format","getImageTypeOrNull","getImageData","canvas","createElement","getContext","width","drawImage","ImageBitmap","Image","close","setUint8","setUint32","byteOffsetTileStart","Matrix","row","RANK","col","columnIndex","fill","firstIndex","columnVector","isWorker","importScripts","isMobile","matches","nodeVersion","NOOP","WorkerThread","props","onMessage","onError","error","worker","_createBrowserWorker","Worker","terminate","terminated","transferList","getTransferList","postMessage","event","lineno","colno","_loadableURL","getLoadableWorkerURL","onmessage","onerror","_getErrorFromErrorEvent","onmessageerror","isTransferable","MessagePort","OffscreenCanvas","recursive","transfers","transfersSet","Set","TileHeader","header","parentHeader","extendedId","_getRefine","contentUrl","lodMetricType","lodMetricValue","boundingVolume","content","contentState","TILE_CONTENT_STATE","gpuMemoryUsageInBytes","hasEmptyContent","userData","_visitedFrame","_cacheNode","traverser","_centerZDepth","_visible","_stackLength","_initialTransform","transform","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","_lodJudge","_expireDate","_expiredContent","contentReady","contentFailed","contentUnloaded","useParentLodMetric","TILESET_TYPE","getI3ScreenSize","getTiles3DScreenSpaceError","_traverser","maySkipTile","isVisible","rootScreenSpaceError","_requestScheduler","scheduleRequest","requestToken","getTileUrl","loadOptions","isTileset","_getLoaderSpecificOptions","load","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","done","destroy","parentVisibilityPlaneMask","_visibilityPlaneMask","CullingVolume","MASK_INDETERMINATE","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","distanceSquaredTo","camera","subVectors","direction","viewerRequestVolume","_viewerRequestVolume","lessThan","tileHeader","parentInitialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","level","disableSkipLevelOfDetail","createBoundingVolume","didTransformChange","loaderId","i3s","isTileHeader","get3dTilesOptions","resolvePath","makeResponse","filePath","arrayBufferOrString","fs","writeFileSync","toBuffer","flag","writeFile","parse","typedLoaders","getLoadersFromContext","selectLoader","normalizeOptions","getLoaderContext","parseWithLoader","validateWorkerVersion","getArrayBufferOrStringFromData","dataType","canParseWithWorker","parseWithWorker","parseSync","ERR_DATA","getArrayBufferOrStringFromDataSync","TextDecoder","decode","isArrayBuffer","response","checkResponse","isReadableStream","makeIterator","isIterable","isAsyncIterable","concatenateArrayBuffersAsync","isIterator","body","getIterableFromData","oneChunk","previousContext","resolvedContext","getFetchFunction","contextLoaders","defined","IGNORED_PROPERTY_FIELDS","HIERARCHY","Tile3DBatchTableParser","featureCount","_extensions","_properties","_binaryProperties","_initializeBinaryProperties","_hierarchy","initializeHierarchy","batchId","className","_checkBatchId","traverseHierarchy","hierarchy","instanceIndex","classId","classIds","classes","getExactClassName","_hasPropertyInHierarchy","results","propertyNames","_getPropertyNamesInHierarchy","binaryProperty","_getBinaryProperty","propertyValues","hierarchyProperty","_getHierarchyProperty","_setBinaryProperty","_setHierarchyProperty","unpack","pack","binaryProperties","_initializeBinaryProperty","tile3DAccessor","createTypedArrayFromAccessor","values","componentCount","unpacker","packer","instances","instanceClass","indexInClass","classIndexes","batchTable","batchLength","featureTableJsonByteLength","featureTableBinaryByteLength","batchTableJsonByteLength","batchTableBinaryByteLength","SIZEOF_UINT32","BATCH_LENGTH","featureTableString","getStringFromArrayBuffer","JSON","parse3DTileFeatureTable","batchTableString","batchTableJson","batchTableBinary","parse3DTileBatchTable","binaryData","toDataView","getPngMetadata","getUint16","tableMarkers","sofMarkers","getJpegMarkers","has","getJpegMetadata","getGifMetadata","getBmpMetadata","TYPES","ARRAY_TO_COMPONENT_TYPE","ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY","components","ATTRIBUTE_TYPE_TO_COMPONENTS","bytesPerComponent","ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE","ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float64Array","Map","INTERSECTION","OUTSIDE","INTERSECTING","INSIDE","minimum","maximum","halfDiagonal","transformation","plane","fromCenterRadius","corner","oppositeCorner","boundingSphere","leftCenter","leftRadius","rightCenter","rightRadius","toRightCenter","centerSeparation","halfDistanceBetweenTangentPoints","mat4","distanceToPlane","scratchOffset","scratchVectorU","scratchVectorV","scratchVectorW","scratchCorner","scratchToCenter","MATRIX3","halfAxes","xAxis","getColumn","yAxis","zAxis","normXAxis","normYAxis","normZAxis","fromMatrix3","halfSize","quaternionObject","directionsMatrix","fromQuaternion","u","cornerVector","normalX","normalY","normalZ","radEffective","uHalf","vHalf","wHalf","minDist","POSITIVE_INFINITY","maxDist","NEGATIVE_INFINITY","toCenter","fromNormalDistance","fromPointNormal","pointDistance","getPointDistance","scaledNormal","faces","scratchPlaneCenter","scratchPlaneNormal","planes","every","planeIndex","faceNormal","plane0","plane1","plane0Center","plane1Center","negatedFaceNormal","negate","intersect","intersectPlane","parentPlaneMask","MASK_INSIDE","mask","scratchPlaneUpVector","scratchPlaneRightVector","scratchPlaneNearCenter","scratchPlaneFarCenter","_left","_right","_top","_bottom","_near","_far","_cullingVolume","_perspectiveMatrix","_infinitePerspective","update","nearCenter","multiplyByScalar","farCenter","drawingBufferWidth","drawingBufferHeight","inverseNear","tanTheta","pixelHeight","pixelWidth","xOffset","yOffset","_offCenterFrustum","_fov","_fovy","_sseDenominator","aspectRatio","_aspectRatio","_xOffset","_yOffset","val","projectionMatrix","infiniteProjectionMatrix","computeCullingVolume","getPixelDimensions","fromPointsXMin","fromPointsYMin","fromPointsZMin","fromPointsXMax","fromPointsYMax","fromPointsZMax","fromPointsCurrentPos","fromPointsScratch","fromPointsRitterCenter","fromPointsMinBoxPt","fromPointsMaxBoxPt","fromPointsNaiveCenterScratch","makeBoundingSphereFromPoints","positions","currentPos","xMin","yMin","zMin","xMax","yMax","zMax","xSpan","magnitudeSquared","ySpan","zSpan","diameter1","diameter2","maxSpan","ritterCenter","radiusSquared","ritterRadius","minBoxPt","maxBoxPt","naiveCenter","naiveRadius","oldCenterToPointSquared","oldCenterToPoint","oldToNew","scratchMatrix","scratchUnitary","scratchDiagonal","jMatrix","jMatrixTranspose","computeEigenDecomposition","EIGEN_TOLERANCE","EPSILON20","sweep","unitaryMatrix","diagonalMatrix","norm","temp","computeFrobeniusNorm","offDiagonalFrobeniusNorm","shurDecomposition","unitary","toTarget","diagonal","rowVal","colVal","getElementIndex","tolerance","maxDiagonal","rotAxis","tau","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","makeOrientedBoundingBoxFromPoints","meanPoint","invLength","exx","exy","exz","eyy","eyz","ezz","covarianceMatrix","rotation","v1","v2","v3","u1","MAX_VALUE","u2","u3","l1","l2","l3","scaleMatrix","makeAxisAlignedBoundingBoxFromPoints","minimumX","minimumY","minimumZ","maximumX","maximumY","maximumZ","Tiles3DLoader","loadGLTF","decodeQuantizedPositions","assetGltfUpAxis","getBaseUri","path","dirname","parseTile","featureIds","parse3DTile","parseTileset","tilesetJson","normalizeTileHeaders","LOD_METRIC_TYPE","WorkerJob","jobName","workerThread","isRunning","_resolve","_reject","Promise","resolve","reject","payload","maxConcurrency","maxMobileConcurrency","onDebug","reuseWorkers","WorkerFarm","setProps","workerPools","isSupported","_workerFarm","_getWorkerPoolProps","workerPool","WorkerPool","idleQueue","isDestroyed","job","startPromise","onStart","jobQueue","_startQueuedJob","_getAvailableWorker","queuedJob","shift","backlog","returnWorkerToQueue","_getMaxConcurrency","onMessageWrapperMap","WorkerBody","isKnownMessage","onMessageWrapper","addEventListener","removeEventListener","warning","workerOptions","workerFile","workerUrl","_workerType","versionTag","AsyncQueue","_values","_settlers","_closed","enqueue","settler","toArrayBuffer","TextEncoder","encode","_toArrayBuffer","arrayBuffer1","arrayBuffer2","array1","array2","sources","sourceArrays","source2","reduce","sourceArray","typedArrays","arrays","TypedArrayConstructor","sumLength","acc","subArray","targetBuffer","targetOffset","srcByteOffset","srcByteLength","padding","Vector2","matrix2x3","Vector4","Matrix3","EPSILON2","EPSILON3","EPSILON4","EPSILON5","EPSILON6","EPSILON7","EPSILON8","EPSILON9","EPSILON10","EPSILON11","EPSILON13","EPSILON14","EPSILON16","EPSILON17","EPSILON18","EPSILON19","PI_OVER_TWO","PI_OVER_FOUR","PI_OVER_SIX","TWO_PI","TilesetCache","_list","DoublyLinkedList","_sentinel","_trimTiles","tail","addCallback","unloadCallback","remove","trimTiles","list","maximumMemoryUsageInBytes","maximumMemoryUsage","sentinel","head","item","unloadTile","rtcCenter","gltfUpAxis","rotationY","rotationX","isQuantized","quantizedVolumeOffset","quantizedVolumeScale","cartesianModelMatrix","cartographicOrigin","Ellipsoid","WGS84","cartesianToCartographic","toFixedFrameMatrix","eastNorthUpToFixedFrame","cartographicModelMatrix","cameraDirection","cameraUp","metersPerUnit","distanceScales","viewportCenterCartographic","viewportCenterCartesian","cartographicToCartesian","enuToFixedTransform","cameraPositionCartographic","unprojectPosition","cameraPosition","cameraPositionCartesian","cameraDirectionCartesian","cameraUpCartesian","frustumPlanes","getFrustumPlanes","distanceToCenter","cartographicPos","cartesianPos","commonSpacePlanesToWGS84","sseDenominator","Plane","ok","statusText","contentLength","getResourceContentLength","getInitialDataUrl","initialDataUrl","getResponseError","contentType","INITIAL_DATA_LENGTH","blobSlice","reader","FileReader","onload","readAsDataURL","base64","arrayBufferToBase64","bytes","btoa","Log","ConsoleLog","info","loaderRegistry","getGlobalLoaderRegistry","normalizedLoader","registeredLoader","unshift","makeStringIterator","makeArrayBufferIterator","makeBlobIterator","makeStreamIterator","parseInBatches","parseWithLoaderInBatches","makeMetadataBatchIterator","async","metadataBatch","parseToOutputIterator","outputIterator","batchType","_loader","_context","bytesUsed","parseChunkInBatches","transformedIterator","parsedData","batch","shape","getAsyncIterableFromData","inputIterator","applyInputTransforms","transforms","iteratorChain","writer","encodeSync","encodeText","encodeInBatches","batches","chunks","concatenateArrayBuffers","encodeURLtoURL","tmpInputFilename","getTemporaryFilename","tmpOutputFilename","outputFilename","dataIterator","getIterator","inputUrl","outputUrl","filename","pull","controller","highWaterMark","boundingVolumeHeader","box","Quaternion","transformByQuaternion","OrientedBoundingBox","createBox","region","minHeight","maxHeight","northWest","scratchNorthWest","southEast","scratchSouthEast","centerInCartesian","addVectors","createSphere","sphere","scratchScale","uniformScale","BoundingSphere","metersPerPixel","mbsLat","mbs","mbsLon","mbsZ","mbsR","viewportCenter","mbsCenter","mbsLatProjected","mbsLonProjected","diagonalInMeters","distanceInMeters","getDistanceFromLatLon","visibleHeight","visibleWidth","screenSize","qualityFactor","projectVertexToSphere","azim","incl","radCosInc","observer","observerLon","observerLat","observerZ","centerLon","centerLat","projectedCenter","projectedObserver","dx","dy","dz","mbsRNormalized","getTanOfHalfVFAngle","textDecoder","DracoLoader","DracoWorkerLoader","loadDracoDecoderModule","draco","dracoParser","DracoParser","_TypecheckDracoLoader","RowTableBatchAggregator","schema","_headers","cursor","rowObject","convertToObjectRow","addObjectRow","arrayRows","rowArray","convertToArrayRow","addArrayRow","objectRows","rows","arrayRow","objectRow","ColumnarTableBatchAggregator","_reallocateColumns","fieldName","columns","_pruneColumns","field","allocated","oldColumn","entries","columnName","column","loadDecoderPromise","loadEncoderPromise","DRACO_JS_DECODER_URL","DRACO_WASM_WRAPPER_URL","DRACO_WASM_DECODER_URL","DRACO_ENCODER_URL","draco3d","createDecoderModule","loadDracoDecoder","createEncoderModule","loadDracoEncoder","decoderType","loadLibrary","DracoDecoderModule","all","wasmBinary","globalThis","initializeDracoDecoder","onModuleLoaded","DracoEncoderModule","geometry","makePrimitiveIterator","getPrimitiveModeType","i1","i2","i3","rotateYtoZ","gltfByteLength","gltfArrayBuffer","sliceArrayBuffer","gltfByteOffset","GLTF_FORMAT","URI","EMBEDDED","gltfFormat","tile3DOptions","extractGLTFBufferOrURL","gltfUrl","GLTFLoader","gltfUrlBytes","imageOptions","imageType","loadType","getLoadableImageType","getDefaultImageType","isImageTypeSupported","IMAGE_BITMAP_SUPPORTED","IMAGE_SUPPORTED","DATA_SUPPORTED","_parseImageNode","NODE_IMAGE_SUPPORTED","blobOrDataUrl","getBlobOrSVGDataUrl","URL","webkitURL","objectUrl","createObjectURL","loadToImage","revokeObjectURL","src","err","isSVG","xmlText","getBlob","SVG_DATA_URL_PATTERN","SVG_URL_PATTERN","GLTFPostProcessor","postProcess","GL_SAMPLER","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","REPEAT","LINEAR","NEAREST_MIPMAP_LINEAR","SAMPLER_PARAMETER_GLTF_TO_GL","DEFAULT_SAMPLER","TEXTURE_WRAP_","_resolveTree","bufView","_resolveBufferView","_resolveImage","samplers","sampler","_resolveSampler","_resolveTexture","_resolveAccessor","_resolveMaterial","_resolveMesh","_resolveNode","skins","skin","_resolveSkin","_resolveScene","_get","getNode","getMesh","accum","getCamera","getSkin","inverseBindMatrices","primitive","attribute","getMaterial","normalTexture","getTexture","occlusionTexture","occlustionTexture","emissiveTexture","emmisiveTexture","emissiveFactor","pbrMetallicRoughness","mr","baseColorTexture","metallicRoughnessTexture","bytesPerElement","cutBufffer","getSampler","getImage","parameters","glEnum","_enumSamplerParameter","preloadedImage","orthographic","magic1","glb","hasBinChunk","binChunks","parseGLBV1","parseGLBV2","GLB_FILE_HEADER_SIZE","contentFormat","parseJSONChunk","parseBINChunk","chunkLength","chunkFormat","strict","parseGLBChunksSync","jsonChunk","jsonText","byteOffsetStart","byteOffsetFileLength","byteOffsetJsonHeader","jsonString","stringify","copyPaddedStringToDataView","jsonByteLength","byteOffsetBinHeader","copyPaddedArrayBufferToDataView","binByteLength","fileByteLength","CESIUM_ION_URL","accessToken","assetId","getIonAssets","assets","items","getIonAssetMetadata","ionAssetMetadata","Authorization","tilesetInfo","moduleExports","require","_global","input","parseData","parseOnMainThread","requestId","parser","workerURL","workerURLCache","getLoadableWorkerURLFromSource","getLoadableWorkerURLFromURL","workerSource","blob","getWorkerName","getWorkerURL","workerFarm","getWorkerFarm","getWorkerPool","startJob","transferableOptions","removeNontransferableOptions","cache","processInBatches","processOnMainThread","inputBatches","resultIterator","coreVersion","workerVersion","loadLibraryPromises","libraryUrl","moduleName","getLibraryUrl","loadLibraryFromFile","library","CDN","endsWith","requireFromFile","scriptSource","loadLibraryFromString","requireFromString","eval","script","appendChild","createTextNode","command","port","autoPort","wait","onSuccess","processProxy","ChildProcessProxy","portArg","getAvailablePort","_setTimeout","join","childProcess","spawn","stdout","stderr","_clearTimeout","code","kill","statusCode","stop","exit","callback","successTimer","defaultPort","ChildProcess","portsInUse","regex","split","line","_","stringBuffer","paddedLength","padLength","byteAlignment","ceil","whitespace","charCodeAt","arrayBufferIterator","stream","textIterator","textEncoder","previous","eolIndex","lineIterator","counter","visitor","arrayBuffers","chunk","strings","throttleRequests","maxRequests","RequestScheduler","Stats","handle","getPriority","requestMap","request","priority","promise","requestQueue","_issueNewRequests","isDone","activeRequestCount","deferredUpdate","_issueNewRequestsAsync","freeSlots","_updateAllRequests","_issueRequest","_updateRequest","slashIndex","lastIndexOf","substr","parts","separator","part","RegExp","pathPrefix","aliases","fileAliases","alias","replacement","fsFunction","open","promisify","readFile","readFileSync","fd","Buffer","alloc","bytesRead","getOwnPropertyDescriptors","obj","descriptors","getOwnPropertyDescriptor","formatRegExp","isString","objects","inspect","str","isNull","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","ctx","seen","stylize","stylizeNoColor","colors","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","styleType","style","styles","recurseTimes","ret","simple","isNumber","formatPrimitive","visibleKeys","hash","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","output","base","braces","toUTCString","formatProperty","formatArray","prev","cur","numLinesEst","reduceToSingleString","desc","ar","arg","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","pid","isNullOrUndefined","isSymbol","isPrimitive","months","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","original","TypeError","promiseResolve","promiseReject","defineProperties","custom","callbackify","callbackified","maybeCb","rej","readUInt8","ctor","superCtor","super_","TempCtor","JSONLoader","category","_typecheckJSONLoader","description","onTileLoad","onTileUnload","onTileError","onTraversalComplete","viewDistanceScale","loadTiles","attributions","Tileset3D","roots","cartographicCenter","cartesianCenter","zoom","traverseCounter","geometricError","_initializeTraverser","_pendingCount","_tiles","_emptyTiles","_requestedTiles","frameStateData","lastUpdatedVieports","_queryParams","_queryParamsString","_extensionsUsed","dynamicScreenSpaceErrorComputedDensity","credits","_initializeTileSet","_destroy","queryParams","queryParamStrings","getQueryParamString","tilePath","viewports","viewportsToTraverse","_needTraverse","getFrameState","traverse","viewportId","traverserId","currentFrameStateData","_updateTiles","frameStateKey","frameStateDataValue","_loadTiles","_unloadTiles","_updateStats","oldSelectedTiles","set1","set2","changed","filter","_loadTile","unloadTiles","_unloadTile","tilesRenderable","pointsRenderable","pointCount","_initializeCesiumTileset","_initializeI3STileset","_calculateViewProps","getZoomFromBoundingVolume","parentTileHeader","rootTile","Tile3D","incrementCount","childHeader","childTile","TraverserClass","Tileset3DTraverser","I3SetTraverser","_onTraversalEnd","parentTile","_destroySubtree","_onStartTileLoading","loadContent","loaded","_onTileLoadError","_onEndTileLoading","_onTileLoad","calculateTransformProps","_addTileToCache","decrementCount","_updateCacheStats","unloadContent","_destroyTile","tilesetVersion","properties","token","_length","DoublyLinkedListNode","nextNode","_insert","oldNodeNext","obbSize","axeY","axeZ","getObbSize","log2","zoomX","zoomY","mimeString","MIME_TYPE_PATTERN","DATA_URL_PATTERN","file","_readToArrayBuffer","readBlob","fileReader","readAsArrayBuffer","setGlobalOptions","limit","_limitMB","batchSize","batchDebounceMs","throws","uri","credentials","redirect","referrer","referrerPolicy","integrity","keepalive","signal","chunkSize","chunkByteLength","makeBrowserStreamIterator","makeNodeStreamIterator","currentBatchPromise","nextBatchPromise","_streamReadAhead","releaseLock","parseWithLoaderSync","files","loadOneFileInBatches","encodedData","makeDOMStream","makeNodeStream","NullWorkerLoader","NullLoader","onProgress","onDone","totalBytes","parseInt","progressStream","loadedBytes","percent","BrowserFileSystem","_fetch","lowerCaseFiles","usedFiles","Headers","range","pathname","flags","startPosition","used","minimumHeight","maximumHeight","mapProjection","dynamicScreenSpaceErrorHeightFalloff","dynamicScreenSpaceErrorDensity","tileBoundingVolume","contentBoundingVolume","TileBoundingRegion","Cartesian3","positionWC","scratchPositionNormal","directionWC","positionCartographic","transformLocal","inverseTransformation","centerLocal","multiplyByPoint","scratchCenter","centerCartographic","Cartographic","fromCartesian","scratchCartographic","positionLocal","UNIT_Z","multiplyByPointAsVector","scratchDirection","TileOrientedBoundingBox","boxHeight","_header","TileBoundingSphere","heightFalloff","heightClose","heightFar","horizonFactor","parentLodMetricValue","getDynamicScreenSpaceError","fog","distanceToCamera","density","exp","dynamicScreenSpaceError","dynamicScreenSpaceErrorFactor","_array","_map","element","firstChild","meetsScreenSpaceErrorEarly","useOptimization","_optimChildrenWithinParent","TILE3D_OPTIMIZATION_HINT","anyChildrenVisible","I3STilesetTraverser","_tileManager","I3STileManager","lodJudge","childTiles","nodePages","nodePagesTile","formTileFromNodePages","nodeId","nodeUrl","STATUS","_statusMap","parseComposite3DTile","parseBatchedModel3DTile","parseInstancedModel3DTile","parsePointCloud3DTile","parse3DTileHeaderSync","parse3DTileTablesHeaderSync","parse3DTileTablesSync","initializeTile","parsePointCloudTables","featureTable","parseDraco","parsePositions","parseColors","parseNormals","normals","batchIds","isTranslucent","isRGB565","isOctEncoded16P","pointsLength","getGlobalProperty","hasProperty","batchFeatureLength","Tile3DBatchTable","parseBatchIds","quantizedRange","normalize3DTilePositionAttribute","normalize3DTileColorAttribute","constantRGBA","normalize3DTileNormalAttribute","batchTableDraco","dracoBatchTableProperties","featureTableDraco","dracoFeatureTableProperties","dracoByteOffset","dracoByteLength","dracoBuffer","hasPositions","POSITION","hasColors","RGB","RGBA","hasNormals","NORMAL","hasBatchIds","BATCH_ID","dracoData","featureTableProperties","batchTableProperties","dequantizeInShader","loadDraco","dracoOptions","extraAttributes","decodedPositions","decodedColors","COLOR_0","decodedNormals","decodedBatchIds","isQuantizedDraco","quantization","isOctEncodedDraco","minValues","quantizationBits","octEncodedRange","batchTableAttributes","DEFAULT_DRACO_OPTIONS","WebAssembly","libraryPath","attributeNameEntry","DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP","COLOR","TEX_COORD","DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP","1","2","3","4","5","Int32Array","6","9","decoder","Decoder","metadataQuerier","MetadataQuerier","DecoderBuffer","Init","_disableAttributeTransforms","geometry_type","GetEncodedGeometryType","dracoGeometry","TRIANGULAR_MESH","Mesh","PointCloud","dracoStatus","DecodeBufferToMesh","DecodeBufferToPointCloud","ptr","error_msg","loaderData","_getDracoLoaderData","_getMeshData","boundingBox","getMeshBoundingBox","makeSchemaFromAttributes","vertexCount","num_points","_getTopLevelMetadata","_getDracoAttributes","num_attributes","num_faces","dracoAttributes","attributeId","dracoAttribute","GetAttribute","_getAttributeMetadata","unique_id","attribute_type","data_type","num_components","byte_offset","byte_stride","normalized","attribute_index","_getQuantizationTransform","quantization_transform","octahedron","_getOctahedronTransform","octahedron_transform","_getMeshAttributes","topology","_getTriangleStripIndices","_getTriangleListIndices","loaderAttribute","_deduceAttributeName","_getAttributeValues","byteStride","numIndices","_malloc","GetTrianglesUInt32Array","HEAPF32","_free","dracoArray","DracoInt32Array","GetTriangleStripsFromMesh","numValues","intArray","GetValue","getUint32Array","TypedArrayCtor","numComponents","BYTES_PER_ELEMENT","attributeType","DT_FLOAT32","DT_INT8","DT_INT16","DT_INT32","DT_UINT8","DT_UINT16","DT_UINT32","DT_INVALID","getDracoDataType","GetAttributeDataArrayForAllPoints","uniqueId","thisAttributeType","dracoAttributeConstant","entryName","dracoMetadata","GetMetadata","_getDracoMetadata","GetAttributeMetadata","numEntries","NumEntries","entryIndex","GetEntryName","_getDracoMetadataField","GetIntEntryArray","getInt32Array","int","GetIntEntry","GetStringEntry","double","GetDoubleEntry","quantizedAttributes","octahedronAttributes","dracoAttributeName","SkipAttributeTransform","AttributeQuantizationTransform","InitFromAttribute","quantization_bits","min_values","min_value","DEFAULT_OPTIONS","TableBatchBuilder","totalLength","limitReached","rowBytes","_estimateRowMB","aggregator","TableBatchType","_getTableBatchType","isChunkComplete","_isFull","_getBatch","rowCount","lastBatchEmittedMs","normalizedBatch","getBatch","batchCount","BaseTableBatchAggregator","ArrowBatch","minX","minY","minZ","maxX","maxY","maxZ","Schema","fields","usedNames","checkNames","compareTo","nameMap","columnNames","selectedFields","columnIndices","schemaOrFields","otherSchema","mergeMaps","fieldMap","m1","m2","Field","nullable","typeId","DataType","Type","NONE","Null","Int","Float","Binary","Utf8","Bool","Decimal","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Dictionary","isSigned","bitWidth","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","valueType","deduceTypeFromValue","deducedSchema","rowTable","deduceSchemaForRowTable","columnarTable","deduceSchemaForColumnarTable","arrowTypeLike","typeName","typeEnumName","getTypeKey","ReverseType","typeKey","ArrayQueue","dequeue","asyncIterable","metadataMap","makeMetadata","namedLoaderDataAttributes","transformAttributesLoaderData","getArrowFieldFromAttribute","indicesField","getArrowTypeFromTypedArray","DracoWriter","pointcloud","loadDracoEncoderModule","dracoBuilder","DRACOBuilder","GLTF_TO_DRACO_ATTRIBUTE_NAME_MAP","TEXCOORD_0","DracoBuilder","dracoEncoder","Encoder","dracoMeshBuilder","MeshBuilder","dracoMetadataBuilder","MetadataBuilder","destroyEncodedObject","_setOptions","_encodePointCloud","_encodeMesh","dracoPointCloud","_addGeometryMetadata","_getAttributesFromMesh","_createDracoPointCloud","DracoInt8Array","encodedLen","EncodePointCloudToDracoBuffer","dracoInt8ArrayToArrayBuffer","dracoMesh","_createDracoMesh","EncodeMeshToDracoBuffer","SetSpeedOptions","speed","dracoMethod","SetEncodingMethod","bits","dracoPosition","SetAttributeQuantization","optionalMetadata","attributesMetadata","_getPositionAttribute","_addAttributeToMesh","_addAttributeMetadata","_getDracoAttributeType","numFaces","AddFacesToMesh","builder","AddInt8Attribute","AddInt16Attribute","AddInt32Attribute","Uint8ClampedArray","AddUInt8Attribute","AddUInt16Attribute","AddUInt32Attribute","AddFloatAttribute","GENERIC","Metadata","_populateDracoMetadata","AddMetadata","uniqueAttributeId","dracoAttributeMetadata","SetMetadataForAttribute","container","trunc","AddIntEntry","AddDoubleEntry","AddIntEntryArray","AddStringEntry","outputBuffer","outputData","GL_TYPE_TO_ARRAY_TYPE","NAME_TO_GL_TYPE","arrayOrType","glType","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","getArrayType","getByteSize","makeAttributeIterator","getPositions","vectorC","vectorCB","vectorAB","primitiveIndex","rgb565","r5","g6","b5","rgb","floor","octEncodeInRange","octEncodeScratch","forceUint8","encoded","octDecodeInRange","encoded1","octEncodeFloat","encoded2","encoded3","octEncode","scratchEncodeVector2","packed","encodedFloat1","encodedFloat2","octDecodeFloat","octDecode","textureCoordinates","compressed","xZeroTo4095","uBuffer","vBuffer","heightBuffer","zigZagDecode","uint8ForceArray","fromSNorm","rangeMaximum","toSNorm","signNotZero","rangeMax","vector3","_MathUtils","oldVX","octPackFloat","vector2","COMPONENTS_PER_ATTRIBUTE","UNPACKER","PACKER","jsonHeader","binaryBody","legacyHierarchy","hierarchyJson","binaryAccessor","parentIndexes","instancesLength","parentCounts","parentIds","parentIdsLength","defaultValue","AttributeType","getBinaryAccessor","createArrayBufferView","classesLength","classInstancesLength","getBinaryProperties","combine","classCounts","validateInstance","validateHierarchy","initializeHierarchyValues","endConditionCallback","visited","scratchVisited","visitedMarker","scratchStack","parentCount","parentIndex","parentId","traverseHierarchyMultipleParents","hasParent","traverseHierarchySingleParent","colorArray","color","getProperty","decodeRGB565","decodedArray","parseBatchedModel","extractGLTF","CESIUM_RTC","parse3DTileGLTFViewSync","loadBuffers","loadImages","decompressMeshes","fetchImages","createImages","decompress","parseGLTF","isGLB","parseGLTFContainerSync","normalizeGLTFV1","promises","decodeExtensions","postProcessGLTF","parseJSON","_glb","resolveUrl","loadImage","getTypedArrayForBufferView","ImageLoader","parsedImage","parseImage","_typecheckImageLoader","EMPTY_OBJECT","imagebitmapOptionsSupported","imagebitmapOptions","imagebitmap","safeCreateImageBitmap","isEmptyObject","createImageBitmap","ImageWriter","jpegQuality","encodeImage","_encodeImageNode","encodeImageInBrowser","qualityParamSupported","getImageSize","drawImageToCanvas","toBlob","transferFromImageBitmap","clampedArray","ImageData","putImageData","getUrl","getImageUrls","imageUrls","deepLoad","urlOptions","mipLevels","getMipmappedImageUrls","generateUrl","urls","lod","shallowLoad","getMipLevels","mipLevel","baseUrl","urlTree","asyncDeepMap","tree","mapSubtree","mapArray","mapObject","urlArray","EXTENSIONS","KHR_draco_mesh_compression","KHR_materials_unlit","KHR_lights_punctual","KHR_techniques_webgl","excludes","excludeExtensions","gltfData","scenegraph","Scenegraph","compressMesh","addRequiredExtension","KHR_DRACO_MESH_COMPRESSION","makeMeshPrimitiveIterator","getObjectExtension","decompressPrimitive","removeExtension","dracoExtension","bufferCopy","decodedData","decodedAttributes","getGLTFAccessors","decodedAttribute","accessorIndex","getGLTFAccessor","checkPrimitive","compressedData","fauxAccessors","_addFauxAttributes","convertTypedArrays","toTypedArray","getAccessorData","gltfScenegraph","unlit","addObjectExtension","KHR_MATERIALS_UNLIT","removeObjectExtension","KHR_LIGHTS_PUNCTUAL","lights","nodeExtension","light","KHR_TECHNIQUES_WEBGL","techniques","resolveTechniques","materialExtension","technique","resolveValues","techniquesExtension","programs","shaders","shader","program","fragmentShader","vertexShader","uniforms","uniform","GLTFV1Normalizer","GLTF_ARRAYS","animations","GLTF_KEYS","idToIndexMap","_addAsset","_convertTopLevelObjectsToArrays","KHR_binary_glTF","_convertObjectIdsToArrayIndices","_updateObjects","_updateMaterial","arrayName","_convertTopLevelObjectToArray","mapName","objectMap","_convertIdsToIndices","_convertIdToIndex","_convertTextureIds","_convertMeshIds","_convertNodeIds","_convertSceneIds","topLevelArrayName","baseColorFactor","metallicFactor","roughnessFactor","textureId","tex","textureIndex","findIndex","KHR_BINARY_GLTF","GLTFWriter","encodeGLTFSync","_TypecheckGLBLoader","firstBuffer","convertBuffersToBase64","GLBLoader","GLBWriter","parseInstancedModel","eastNorthUp","_batchTable","collectionOptions","instancePosition","instanceRotation","instanceQuaternion","instanceScale","instanceTranslationRotationScale","instanceTransform","scratch1","scratch2","translation","normalUp","normalRight","hasCustomOrientation","octNormalUp","octNormalRight","getRotationMatrix3","nonUniformScale","rotationMatrix","extractInstancedAttributes","tilesLength","tiles","subtile","normalizeTileData","contentUri","transformMatrix","TILE_TYPE","fileExtension","getTileType","getRefine","matched","getIonTilesetMetadata","CesiumIonLoader","preload","Tile3DWriter","encode3DTileToDataView","encodeComposite3DTile","encodePointCloud3DTile","encodeBatchedModel3DTile","encodeInstancedModel3DTile","encode3DTile","MAGIC_ARRAY","encode3DTileHeader","encode3DTileByteLength","featureTableJsonString","batchTableJsonString","gltfEncoded","copyBinaryToDataView","gltfUri","gltfUriByteLength","INSTANCES_LENGTH","copyStringToDataView","DEFAULT_FEATURE_TABLE_JSON","padStringToByteAlignment","POINTS_LENGTH","POSITIONS","LocalStorage","defaultSettings","storage","setItem","removeItem","getStorage","_loadConfiguration","configuration","updateConfiguration","serialized","serializedConfiguration","getItem","leftPad","repeat","rightPad","formatImage","maxWidth","imageUrl","BLACK","RED","GREEN","YELLOW","BLUE","MAGENTA","CYAN","WHITE","BRIGHT_BLACK","BRIGHT_RED","BRIGHT_GREEN","BRIGHT_YELLOW","BRIGHT_BLUE","BRIGHT_MAGENTA","BRIGHT_CYAN","BRIGHT_WHITE","getColor","addColor","background","autobind","predefined","proto","propNames","originalConsole","DEFAULT_SETTINGS","enabled","ONCE","getTableHeader","_startTs","_deltaTs","LOG_THROTTLE_TIMEOUT","_storage","timeStamp","newLevel","setLevel","getLevel","newPriority","_getLogFunction","oldUsage","newUsage","logLevel","tag","_shouldLog","img","nodeName","toDataURL","logImageInBrowser","asciify","fit","logImageInNode","setting","timeEnd","collapsed","normalizeArguments","groupCollapsed","group","groupEnd","isEnabled","normalizeLogLevel","total","getTotal","delta","getDelta","ms","formatted","toFixed","formatTime","decorateMessage","resolvedLevel","messageType","getBrowser","navigator_","isMSIE","isTrident","chrome","safari","mozInnerScreenX"],"mappings":"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","file":"dist.es5.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 122);\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import assert from './assert';\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\nexport { config };\nexport function configure(options = {}) {\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {\n  precision = config.precision || 4\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n//# sourceMappingURL=common.js.map","import { config } from './common';\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Invalid number \".concat(value));\n  }\n\n  return value;\n}\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n  }\n\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n  }\n}\n//# sourceMappingURL=validators.js.map","// TYPES\nexport type {\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions,\n  Writer,\n  WriterOptions,\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  IFileSystem,\n  IRandomAccessReadFileSystem\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {\n  isBrowser,\n  isWorker,\n  nodeVersion,\n  self,\n  window,\n  global,\n  document\n} from './lib/env-utils/globals';\n\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport {createLoaderWorker} from './lib/worker-loader-utils/create-loader-worker';\nexport {parseWithWorker, canParseWithWorker} from './lib/worker-loader-utils/parse-with-worker';\n\n// PARSER UTILS\nexport {parseJSON} from './lib/parser-utils/parse-json';\n\n// MEMORY COPY UTILS\nexport {\n  toArrayBuffer,\n  sliceArrayBuffer,\n  concatenateArrayBuffers,\n  concatenateTypedArrays,\n  compareArrayBuffers\n} from './lib/binary-utils/array-buffer-utils';\nexport {padToNBytes, copyToArray, copyArrayBuffer} from './lib/binary-utils/memory-copy-utils';\nexport {\n  copyPaddedArrayBufferToDataView,\n  copyPaddedStringToDataView\n} from './lib/binary-utils/binary-copy-utils';\nexport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from './lib/binary-utils/encode-utils';\nexport {getFirstCharacters, getMagicString} from './lib/binary-utils/get-first-characters';\n\n// ITERATOR UTILS\nexport {\n  makeTextEncoderIterator,\n  makeTextDecoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from './lib/iterators/text-iterators';\nexport {forEach, concatenateArrayBuffersAsync} from './lib/iterators/async-iteration';\n\n// REQUEST UTILS\nexport {default as RequestScheduler} from './lib/request-utils/request-scheduler';\n\n// NODE `path`` REPLACEMENT\nimport * as path from './lib/path-utils/path';\nexport {path};\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/path-utils/file-aliases';\nexport {addAliases as _addAliases} from './lib/path-utils/file-aliases';\n\n// NODE `fs` WRAPPERS\nimport * as fs from './lib/node/fs';\nexport {fs};\n\n// NODE `buffer` WRAPPERS\nexport {isBuffer, toBuffer, bufferToArrayBuffer} from './lib/binary-utils/buffer-utils';\n\nexport {JSONLoader} from './json-loader';\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { config } from './lib/common';\nexport { default as Vector2 } from './classes/vector2';\nexport { default as Vector3 } from './classes/vector3';\nexport { default as Vector4 } from './classes/vector4';\nexport { default as Matrix3 } from './classes/matrix3';\nexport { default as Matrix4 } from './classes/matrix4';\nexport { default as Quaternion } from './classes/quaternion';\nexport { config, configure, formatValue, isArray, clone, equals, exactEquals, toRadians, toDegrees, radians, degrees, sin, cos, tan, asin, acos, atan, clamp, lerp, withEpsilon } from './lib/common';\nexport { checkNumber } from './lib/validators';\nexport { default as _MathUtils } from './lib/math-utils';\nexport { default as SphericalCoordinates } from './classes/spherical-coordinates';\nexport { default as Pose } from './classes/pose';\nexport { default as Euler } from './classes/euler';\nexport { default as assert } from './lib/assert';\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global\n};\nconst global_ = globals.global || globals.self || globals.window;\nglobal_.mathgl = {\n  config\n};\nexport { default as _SphericalCoordinates } from './classes/spherical-coordinates';\nexport { default as _Pose } from './classes/pose';\nexport { default as _Euler } from './classes/euler';\n//# sourceMappingURL=index.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","const globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document,\n  process: typeof process === 'object' && process\n};\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\nconst process_ = globals.process || {};\nconst console_ = console;\nexport { self_ as self, window_ as window, global_ as global, document_ as document, process_ as process, console_ as console };\n//# sourceMappingURL=globals.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"math.gl assertion \".concat(message));\n  }\n}\n//# sourceMappingURL=assert.js.map","export function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n//# sourceMappingURL=gl-matrix-extras.js.map","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import type {Readable} from 'stream';\n\n/** A DOM or Node readable stream */\nexport type ReadableStreamType = ReadableStream | Readable;\n\nconst isBoolean: (x: any) => boolean = (x) => typeof x === 'boolean';\nconst isFunction: (x: any) => boolean = (x) => typeof x === 'function';\n\nexport const isObject: (x: any) => boolean = (x) => x !== null && typeof x === 'object';\nexport const isPureObject: (x: any) => boolean = (x) =>\n  isObject(x) && x.constructor === {}.constructor;\nexport const isPromise: (x: any) => boolean = (x) => isObject(x) && isFunction(x.then);\n\nexport const isIterable: (x: any) => boolean = (x) => x && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable: (x: any) => boolean = (x) =>\n  x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator: (x: any) => boolean = (x) => x && isFunction(x.next);\n\nexport const isResponse: (x: any) => boolean = (x) =>\n  (typeof Response !== 'undefined' && x instanceof Response) ||\n  (x && x.arrayBuffer && x.text && x.json);\n\nexport const isFile: (x: any) => boolean = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob: (x: any) => boolean = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n\nexport const isWritableDOMStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\n\nexport const isReadableDOMStream: (x: any) => boolean = (x) =>\n  (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n  (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\n\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer: (x: any) => boolean = (x) => x && typeof x === 'object' && x.isBuffer;\n\nexport const isWritableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream: (x: any) => boolean = (x) =>\n  isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream: (x: any) => boolean = (x) =>\n  isWritableDOMStream(x) || isWritableNodeStream(x);\n","import type {Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {global} from '@loaders.gl/loader-utils';\nimport {isPureObject, isObject} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {probeLog, NullLog} from './loggers';\nimport {DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS} from './option-defaults';\n/**\n * Global state for loaders.gl. Stored on `global.loaders._state`\n */\ntype GlobalLoaderState = {\n  loaderRegistry: Loader[];\n  globalOptions: {[key: string]: any};\n};\n\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState(): GlobalLoaderState {\n  // @ts-ignore\n  global.loaders = global.loaders || {};\n  // @ts-ignore\n  const {loaders} = global;\n\n  // Add _state object to keep separate from modules added to global.loaders\n  loaders._state = loaders._state || {};\n  return loaders._state;\n}\n\n// Store global loader options on the global object to increase chances of cross loaders-version interoperability\n// NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderOptions = () => {\n  const state = getGlobalLoaderState();\n  // Ensure all default loader options from this library are mentioned\n  state.globalOptions = state.globalOptions || {...DEFAULT_LOADER_OPTIONS};\n  return state.globalOptions;\n};\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options: object): void {\n  const state = getGlobalLoaderState();\n  const globalOptions = getGlobalLoaderOptions();\n  state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n}\n\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(\n  options: object,\n  loader: Loader,\n  loaders?: Loader[],\n  url?: string\n): object {\n  loaders = loaders || [];\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  validateOptions(options, loaders);\n  return normalizeOptionsInternal(loader, options, url);\n}\n\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(\n  options?: LoaderOptions,\n  context?: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>\n) {\n  const globalOptions = getGlobalLoaderOptions();\n\n  const fetchOptions = options || globalOptions;\n\n  // options.fetch can be a function\n  if (typeof fetchOptions.fetch === 'function') {\n    return fetchOptions.fetch;\n  }\n\n  // options.fetch can be an options object\n  if (isObject(fetchOptions.fetch)) {\n    return (url) => fetchFile(url, fetchOptions);\n  }\n\n  // else refer to context (from parent loader) if available\n  if (context?.fetch) {\n    return context?.fetch;\n  }\n\n  // else return the default fetch function\n  return fetchFile;\n}\n\n// VALIDATE OPTIONS\n\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options: LoaderOptions, loaders: Loader[]) {\n  // Check top level options\n  validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n  for (const loader of loaders) {\n    // Get the scoped, loader specific options from the user supplied options\n    const idOptions = (options && options[loader.id]) || {};\n\n    // Get scoped, loader specific default and deprecated options from the selected loader\n    const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n    const deprecatedOptions =\n      (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n\n    // Validate loader specific options\n    validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(\n  options,\n  id: string | null,\n  defaultOptions,\n  deprecatedOptions,\n  loaders: Loader[]\n) {\n  const loaderName = id || 'Top level';\n  const prefix = id ? `${id}.` : '';\n\n  for (const key in options) {\n    // If top level option value is an object it could options for a loader, so ignore\n    const isSubOptions = !id && isObject(options[key]);\n    const isBaseUriOption = key === 'baseUri' && !id;\n    const isWorkerUrlOption = key === 'workerUrl' && id;\n    // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n    if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n      // Issue deprecation warnings\n      if (key in deprecatedOptions) {\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`\n        )();\n      } else if (!isSubOptions) {\n        const suggestion = findSimilarOption(key, loaders);\n        probeLog.warn(\n          `${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`\n        )();\n      }\n    }\n  }\n}\n\nfunction findSimilarOption(optionKey, loaders) {\n  const lowerCaseOptionKey = optionKey.toLowerCase();\n  let bestSuggestion = '';\n  for (const loader of loaders) {\n    for (const key in loader.options) {\n      if (optionKey === key) {\n        return `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n      const lowerCaseKey = key.toLowerCase();\n      const isPartialMatch =\n        lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n      if (isPartialMatch) {\n        bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n      }\n    }\n  }\n  return bestSuggestion;\n}\n\nfunction normalizeOptionsInternal(loader, options, url?: string) {\n  const loaderDefaultOptions = loader.options || {};\n\n  const mergedOptions = {...loaderDefaultOptions};\n\n  addUrlOptions(mergedOptions, url);\n\n  // LOGGING: options.log can be set to `null` to defeat logging\n  if (mergedOptions.log === null) {\n    mergedOptions.log = new NullLog();\n  }\n\n  mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n  mergeNestedFields(mergedOptions, options);\n\n  return mergedOptions;\n}\n\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n  for (const key in options) {\n    // Check for nested options\n    // object in options => either no key in defaultOptions or object in defaultOptions\n    if (key in options) {\n      const value = options[key];\n      if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n        mergedOptions[key] = {\n          ...mergedOptions[key],\n          ...options[key]\n        };\n      } else {\n        mergedOptions[key] = options[key];\n      }\n    }\n    // else: No need to merge nested opts, and the initial merge already copied over the nested options\n  }\n}\n\n// Harvest information from the url\n// TODO - baseUri should be a directory, i.e. remove file component from baseUri\n// TODO - extract extension?\n// TODO - extract query parameters?\n// TODO - should these be injected on context instead of options?\nfunction addUrlOptions(options, url?: string) {\n  if (url && !('baseUri' in options)) {\n    options.baseUri = url;\n  }\n}\n","export {GL} from './geometry/constants';\n\n// GL support\nexport {GL_TYPE} from './geometry/constants';\nexport {default as GLType} from './geometry/gl/gl-type';\n\n// Geometry\nexport {default as isGeometry} from './geometry/is-geometry';\n\n// Iterators\nexport {makeAttributeIterator} from './geometry/iterators/attribute-iterator';\nexport {makePrimitiveIterator} from './geometry/iterators/primitive-iterator';\n\n// Helper methods\nexport {computeVertexNormals} from './geometry/attributes/compute-vertex-normals';\n\nexport {encodeRGB565, decodeRGB565} from './geometry/colors/rgb565';\n\n// Typed array utils\nexport {concatTypedArrays} from './geometry/typed-arrays/typed-array-utils';\n\n// Compression\nexport {\n  octEncodeInRange,\n  octEncode,\n  octEncodeToVector4,\n  octDecodeInRange,\n  octDecode,\n  octDecodeFromVector4,\n  octPackFloat,\n  octEncodeFloat,\n  octDecodeFloat,\n  octPack,\n  octUnpack,\n  compressTextureCoordinates,\n  decompressTextureCoordinates,\n  zigZagDeltaDecode\n} from './geometry/compression/attribute-compression';\n","import MathArray from './base/math-array';\nimport { clamp } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport Quaternion from './quaternion';\nconst ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';\nconst ALMOST_ONE = 0.99999;\n\nfunction validateOrder(value) {\n  return value >= 0 && value < 6;\n}\n\nfunction checkOrder(value) {\n  if (value < 0 && value >= 6) {\n    throw new Error(ERR_UNKNOWN_ORDER);\n  }\n\n  return value;\n}\n\nexport default class Euler extends MathArray {\n  static get ZYX() {\n    return 0;\n  }\n\n  static get YXZ() {\n    return 1;\n  }\n\n  static get XZY() {\n    return 2;\n  }\n\n  static get ZXY() {\n    return 3;\n  }\n\n  static get YZX() {\n    return 4;\n  }\n\n  static get XYZ() {\n    return 5;\n  }\n\n  static get RollPitchYaw() {\n    return 0;\n  }\n\n  static get DefaultOrder() {\n    return Euler.ZYX;\n  }\n\n  static get RotationOrders() {\n    return ['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ'];\n  }\n\n  static rotationOrder(order) {\n    return Euler.RotationOrders[order];\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    super(-0, -0, -0, -0);\n\n    if (arguments.length > 0 && Array.isArray(arguments[0])) {\n      this.fromVector3(...arguments);\n    } else {\n      this.set(x, y, z, order);\n    }\n  }\n\n  fromQuaternion(quaternion) {\n    const [x, y, z, w] = quaternion;\n    const ysqr = y * y;\n    const t0 = -2.0 * (ysqr + z * z) + 1.0;\n    const t1 = +2.0 * (x * y + w * z);\n    let t2 = -2.0 * (x * z - w * y);\n    const t3 = +2.0 * (y * z + w * x);\n    const t4 = -2.0 * (x * x + ysqr) + 1.0;\n    t2 = t2 > 1.0 ? 1.0 : t2;\n    t2 = t2 < -1.0 ? -1.0 : t2;\n    const roll = Math.atan2(t3, t4);\n    const pitch = Math.asin(t2);\n    const yaw = Math.atan2(t1, t0);\n    return new Euler(roll, pitch, yaw, Euler.RollPitchYaw);\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = Number.isFinite(array[3]) || this.order;\n    return this.check();\n  }\n\n  set(x = 0, y = 0, z = 0, order) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = Number.isFinite(order) ? order : this[3];\n    return this.check();\n  }\n\n  validate() {\n    return validateOrder(this[3]) && Number.isFinite(this[0]) && Number.isFinite(this[1]) && Number.isFinite(this[2]);\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    return array;\n  }\n\n  toArray4(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    array[offset + 3] = this[3];\n    return array;\n  }\n\n  toVector3(result = [-0, -0, -0]) {\n    result[0] = this[0];\n    result[1] = this[1];\n    result[2] = this[2];\n    return result;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get alpha() {\n    return this[0];\n  }\n\n  set alpha(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get beta() {\n    return this[1];\n  }\n\n  set beta(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get gamma() {\n    return this[2];\n  }\n\n  set gamma(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get phi() {\n    return this[0];\n  }\n\n  set phi(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get theta() {\n    return this[1];\n  }\n\n  set theta(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get psi() {\n    return this[2];\n  }\n\n  set psi(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get roll() {\n    return this[0];\n  }\n\n  set roll(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get pitch() {\n    return this[1];\n  }\n\n  set pitch(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get yaw() {\n    return this[2];\n  }\n\n  set yaw(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get order() {\n    return this[3];\n  }\n\n  set order(value) {\n    this[3] = checkOrder(value);\n  }\n\n  fromVector3(v, order) {\n    return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);\n  }\n\n  fromArray(array, offset = 0) {\n    this[0] = array[0 + offset];\n    this[1] = array[1 + offset];\n    this[2] = array[2 + offset];\n\n    if (array[3] !== undefined) {\n      this[3] = array[3];\n    }\n\n    return this.check();\n  }\n\n  fromRollPitchYaw(roll, pitch, yaw) {\n    return this.set(roll, pitch, yaw, Euler.ZYX);\n  }\n\n  fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    this._fromRotationMatrix(m, order);\n\n    return this.check();\n  }\n\n  getRotationMatrix(m) {\n    return this._getRotationMatrix(m);\n  }\n\n  getQuaternion() {\n    const q = new Quaternion();\n\n    switch (this[4]) {\n      case Euler.XYZ:\n        return q.rotateX(this[0]).rotateY(this[1]).rotateZ(this[2]);\n\n      case Euler.YXZ:\n        return q.rotateY(this[0]).rotateX(this[1]).rotateZ(this[2]);\n\n      case Euler.ZXY:\n        return q.rotateZ(this[0]).rotateX(this[1]).rotateY(this[2]);\n\n      case Euler.ZYX:\n        return q.rotateZ(this[0]).rotateY(this[1]).rotateX(this[2]);\n\n      case Euler.YZX:\n        return q.rotateY(this[0]).rotateZ(this[1]).rotateX(this[2]);\n\n      case Euler.XZY:\n        return q.rotateX(this[0]).rotateZ(this[1]).rotateY(this[2]);\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n  }\n\n  _fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    const te = m.elements;\n    const m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n    const m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n    const m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n    order = order || this[3];\n\n    switch (order) {\n      case Euler.XYZ:\n        this[1] = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m33);\n          this[2] = Math.atan2(-m12, m11);\n        } else {\n          this[0] = Math.atan2(m32, m22);\n          this[2] = 0;\n        }\n\n        break;\n\n      case Euler.YXZ:\n        this[0] = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < ALMOST_ONE) {\n          this[1] = Math.atan2(m13, m33);\n          this[2] = Math.atan2(m21, m22);\n        } else {\n          this[1] = Math.atan2(-m31, m11);\n          this[2] = 0;\n        }\n\n        break;\n\n      case Euler.ZXY:\n        this[0] = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < ALMOST_ONE) {\n          this[1] = Math.atan2(-m31, m33);\n          this[2] = Math.atan2(-m12, m22);\n        } else {\n          this[1] = 0;\n          this[2] = Math.atan2(m21, m11);\n        }\n\n        break;\n\n      case Euler.ZYX:\n        this[1] = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m33);\n          this[2] = Math.atan2(m21, m11);\n        } else {\n          this[0] = 0;\n          this[2] = Math.atan2(-m12, m22);\n        }\n\n        break;\n\n      case Euler.YZX:\n        this[2] = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m22);\n          this[1] = Math.atan2(-m31, m11);\n        } else {\n          this[0] = 0;\n          this[1] = Math.atan2(m13, m33);\n        }\n\n        break;\n\n      case Euler.XZY:\n        this[2] = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m22);\n          this[1] = Math.atan2(m13, m11);\n        } else {\n          this[0] = Math.atan2(-m23, m33);\n          this[1] = 0;\n        }\n\n        break;\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    this[3] = order;\n    return this;\n  }\n\n  _getRotationMatrix(result) {\n    const te = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    const x = this.x,\n          y = this.y,\n          z = this.z;\n    const a = Math.cos(x);\n    const c = Math.cos(y);\n    const e = Math.cos(z);\n    const b = Math.sin(x);\n    const d = Math.sin(y);\n    const f = Math.sin(z);\n\n    switch (this[3]) {\n      case Euler.XYZ:\n        {\n          const ae = a * e,\n                af = a * f,\n                be = b * e,\n                bf = b * f;\n          te[0] = c * e;\n          te[4] = -c * f;\n          te[8] = d;\n          te[1] = af + be * d;\n          te[5] = ae - bf * d;\n          te[9] = -b * c;\n          te[2] = bf - ae * d;\n          te[6] = be + af * d;\n          te[10] = a * c;\n          break;\n        }\n\n      case Euler.YXZ:\n        {\n          const ce = c * e,\n                cf = c * f,\n                de = d * e,\n                df = d * f;\n          te[0] = ce + df * b;\n          te[4] = de * b - cf;\n          te[8] = a * d;\n          te[1] = a * f;\n          te[5] = a * e;\n          te[9] = -b;\n          te[2] = cf * b - de;\n          te[6] = df + ce * b;\n          te[10] = a * c;\n          break;\n        }\n\n      case Euler.ZXY:\n        {\n          const ce = c * e,\n                cf = c * f,\n                de = d * e,\n                df = d * f;\n          te[0] = ce - df * b;\n          te[4] = -a * f;\n          te[8] = de + cf * b;\n          te[1] = cf + de * b;\n          te[5] = a * e;\n          te[9] = df - ce * b;\n          te[2] = -a * d;\n          te[6] = b;\n          te[10] = a * c;\n          break;\n        }\n\n      case Euler.ZYX:\n        {\n          const ae = a * e,\n                af = a * f,\n                be = b * e,\n                bf = b * f;\n          te[0] = c * e;\n          te[4] = be * d - af;\n          te[8] = ae * d + bf;\n          te[1] = c * f;\n          te[5] = bf * d + ae;\n          te[9] = af * d - be;\n          te[2] = -d;\n          te[6] = b * c;\n          te[10] = a * c;\n          break;\n        }\n\n      case Euler.YZX:\n        {\n          const ac = a * c,\n                ad = a * d,\n                bc = b * c,\n                bd = b * d;\n          te[0] = c * e;\n          te[4] = bd - ac * f;\n          te[8] = bc * f + ad;\n          te[1] = f;\n          te[5] = a * e;\n          te[9] = -b * e;\n          te[2] = -d * e;\n          te[6] = ad * f + bc;\n          te[10] = ac - bd * f;\n          break;\n        }\n\n      case Euler.XZY:\n        {\n          const ac = a * c,\n                ad = a * d,\n                bc = b * c,\n                bd = b * d;\n          te[0] = c * e;\n          te[4] = -f;\n          te[8] = d * e;\n          te[1] = ac * f + bd;\n          te[5] = a * e;\n          te[9] = ad * f - bc;\n          te[2] = bc * f - ad;\n          te[6] = b * e;\n          te[10] = bd * f + ac;\n          break;\n        }\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return te;\n  }\n\n  toQuaternion() {\n    const cy = Math.cos(this.yaw * 0.5);\n    const sy = Math.sin(this.yaw * 0.5);\n    const cr = Math.cos(this.roll * 0.5);\n    const sr = Math.sin(this.roll * 0.5);\n    const cp = Math.cos(this.pitch * 0.5);\n    const sp = Math.sin(this.pitch * 0.5);\n    const w = cy * cr * cp + sy * sr * sp;\n    const x = cy * sr * cp - sy * cr * sp;\n    const y = cy * cr * sp + sy * sr * cp;\n    const z = sy * cr * cp - cy * sr * sp;\n    return new Quaternion(x, y, z, w);\n  }\n\n}\n//# sourceMappingURL=euler.js.map","function _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nimport { config, formatValue, equals, isArray } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class MathArray extends _extendableBuiltin(Array) {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n\n    return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n\n    return this.check();\n  }\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n\n    return this.check();\n  }\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  get elements() {\n    return this;\n  }\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n    }\n\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n\n    return valid;\n  }\n\n}\n//# sourceMappingURL=math-array.js.map","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loaders.gl assertion failed.');\n  }\n}\n","import type {Loader} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function isLoaderObject(loader?: any): boolean {\n  if (!loader) {\n    return false;\n  }\n\n  if (Array.isArray(loader)) {\n    loader = loader[0];\n  }\n\n  const hasExtensions = Array.isArray(loader?.extensions);\n\n  /* Now handled by types and worker loaders do not have these\n  let hasParser =\n    loader.parseTextSync ||\n    loader.parseSync ||\n    loader.parse ||\n    loader.parseStream || // TODO Remove, Replace with parseInBatches\n    loader.parseInBatches;\n  */\n\n  return hasExtensions;\n}\n\nexport function normalizeLoader(loader: Loader): Loader {\n  // This error is fairly easy to trigger by mixing up import statements etc\n  // So we make an exception and add a developer error message for this case\n  // To help new users from getting stuck here\n  assert(loader, 'null loader');\n  assert(isLoaderObject(loader), 'invalid loader');\n\n  // NORMALIZE [LOADER, OPTIONS] => LOADER\n\n  // If [loader, options], create a new loaders object with options merged in\n  let options;\n  if (Array.isArray(loader)) {\n    options = loader[1];\n    loader = loader[0];\n    loader = {\n      ...loader,\n      options: {...loader.options, ...options}\n    };\n  }\n\n  // NORMALIZE text and binary flags\n  // Ensure at least one of text/binary flags are properly set\n\n  // @ts-expect-error\n  if (loader?.parseTextSync || loader?.parseText) {\n    loader.text = true;\n  }\n\n  if (!loader.text) {\n    loader.binary = true;\n  }\n\n  return loader;\n}\n","// TILE TYPES\n\nexport const TILE3D_TYPE = {\n  COMPOSITE: 'cmpt',\n  POINT_CLOUD: 'pnts',\n  BATCHED_3D_MODEL: 'b3dm',\n  INSTANCED_3D_MODEL: 'i3dm',\n  GEOMETRY: 'geom',\n  VECTOR: 'vect'\n};\n\nexport const TILE3D_TYPES = Object.keys(TILE3D_TYPE);\n\nexport const MAGIC_ARRAY = {\n  BATCHED_MODEL: [98, 51, 100, 109],\n  INSTANCED_MODEL: [105, 51, 100, 109],\n  POINT_CLOUD: [112, 110, 116, 115],\n  COMPOSITE: [99, 109, 112, 116]\n};\n\n// TILE CONSTANTS\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};\n","import isElectron from './is-electron';\nexport default function isBrowser() {\n  const isNode = typeof process === 'object' && String(process) === '[object process]' && !process.browser;\n  return !isNode || isElectron();\n}\nexport function isBrowserMainThread() {\n  return isBrowser() && typeof document !== 'undefined';\n}\n//# sourceMappingURL=is-browser.js.map","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0) {\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector3.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// GLTF 1.0 extensions\nexport const KHR_BINARY_GLTF = 'KHR_binary_glTF';\n\n// GLTF 2.0 extensions\nexport const KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nexport const KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nexport const KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nexport const KHR_TECHNIQUES_WEBGL = 'KHR_techniques_webgl';\n\n// External extensions\nexport const EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\n\nconst COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\n// ENUM LOOKUP\n\nexport function getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nexport function getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nexport function getGLEnumFromSamplerParameter(parameter) {\n  const GL_TEXTURE_MAG_FILTER = 0x2800;\n  const GL_TEXTURE_MIN_FILTER = 0x2801;\n  const GL_TEXTURE_WRAP_S = 0x2802;\n  const GL_TEXTURE_WRAP_T = 0x2803;\n\n  const PARAMETER_MAP = {\n    magFilter: GL_TEXTURE_MAG_FILTER,\n    minFilter: GL_TEXTURE_MIN_FILTER,\n    wrapS: GL_TEXTURE_WRAP_S,\n    wrapT: GL_TEXTURE_WRAP_T\n  };\n\n  return PARAMETER_MAP[parameter];\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'assert failed: gltf');\n  }\n}\n","import type {\n  GLTF,\n  GLTFScene,\n  GLTFNode,\n  GLTFMesh,\n  GLTFSkin,\n  GLTFMaterial,\n  GLTFAccessor,\n  GLTFSampler,\n  GLTFTexture,\n  GLTFImage,\n  GLTFBuffer,\n  GLTFBufferView\n} from '../types/gltf-types';\n\nimport {getBinaryImageMetadata} from '@loaders.gl/images';\nimport {padToNBytes, copyToArray} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\nimport {\n  getAccessorArrayTypeAndLength,\n  getAccessorTypeFromSize,\n  getComponentTypeFromArray\n} from '../gltf-utils/gltf-utils';\n\ntype GLTFWithBuffers = {\n  json: GLTF;\n  buffers: any[];\n  binary?: ArrayBuffer;\n};\n\nconst DEFAULT_GLTF_JSON: GLTF = {\n  asset: {\n    version: '2.0',\n    generator: 'loaders.gl'\n  },\n  buffers: []\n};\n\n/**\n * Class for structured access to GLTF data\n */\nexport default class GLTFScenegraph {\n  // internal\n  gltf: GLTFWithBuffers;\n  sourceBuffers: any[];\n  byteLength: number;\n\n  constructor(gltf?: {json: GLTF; buffers?: any[]}) {\n    // @ts-ignore\n    this.gltf = gltf || {\n      json: {...DEFAULT_GLTF_JSON},\n      buffers: []\n    };\n    this.sourceBuffers = [];\n    this.byteLength = 0;\n\n    // Initialize buffers\n    if (this.gltf.buffers && this.gltf.buffers[0]) {\n      this.byteLength = this.gltf.buffers[0].byteLength;\n      this.sourceBuffers = [this.gltf.buffers[0]];\n    }\n  }\n\n  // Accessors\n\n  get json(): GLTF {\n    return this.gltf.json;\n  }\n\n  getApplicationData(key: string): {[key: string]: any} {\n    // TODO - Data is already unpacked by GLBParser\n    const data = this.json[key];\n    return data;\n  }\n\n  getExtraData(key: string): {[key: string]: any} {\n    // TODO - Data is already unpacked by GLBParser\n    const extras = this.json.extras || {};\n    return extras[key];\n  }\n\n  getExtension(extensionName: string): {[key: string]: any} | null {\n    const isExtension = this.getUsedExtensions().find((name) => name === extensionName);\n    const extensions = this.json.extensions || {};\n    return isExtension ? extensions[extensionName] || true : null;\n  }\n\n  getRequiredExtension(extensionName: string): {[key: string]: any} | null {\n    const isRequired = this.getRequiredExtensions().find((name) => name === extensionName);\n    return isRequired ? this.getExtension(extensionName) : null;\n  }\n\n  getRequiredExtensions(): string[] {\n    return this.json.extensionsRequired || [];\n  }\n\n  getUsedExtensions(): string[] {\n    return this.json.extensionsUsed || [];\n  }\n\n  getObjectExtension(\n    object: {[key: string]: any},\n    extensionName: string\n  ): {[key: string]: any} | null {\n    const extensions = object.extensions || {};\n    return extensions[extensionName];\n  }\n\n  getScene(index: number): GLTFScene {\n    return this.getObject('scenes', index) as GLTFScene;\n  }\n\n  getNode(index: number): GLTFNode {\n    return this.getObject('nodes', index) as GLTFNode;\n  }\n\n  getSkin(index: number): GLTFSkin {\n    return this.getObject('skins', index) as GLTFSkin;\n  }\n\n  getMesh(index: number): GLTFMesh {\n    return this.getObject('meshes', index) as GLTFMesh;\n  }\n\n  getMaterial(index: number): GLTFMaterial {\n    return this.getObject('materials', index) as GLTFMaterial;\n  }\n\n  getAccessor(index: number): GLTFAccessor {\n    return this.getObject('accessors', index) as GLTFAccessor;\n  }\n\n  // getCamera(index: number): object | null {\n  //   return null; // TODO: fix thi: object  as null;\n  // }\n\n  getTexture(index: number): GLTFTexture {\n    return this.getObject('textures', index) as GLTFTexture;\n  }\n\n  getSampler(index: number): GLTFSampler {\n    return this.getObject('samplers', index) as GLTFSampler;\n  }\n\n  getImage(index: number): GLTFImage {\n    return this.getObject('images', index) as GLTFImage;\n  }\n\n  getBufferView(index: number | object): GLTFBufferView {\n    return this.getObject('bufferViews', index) as GLTFBufferView;\n  }\n\n  getBuffer(index: number): GLTFBuffer {\n    return this.getObject('buffers', index) as GLTFBuffer;\n  }\n\n  getObject(array: string, index: number | object): object {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.json[array] && this.json[array][index];\n    if (!object) {\n      throw new Error(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  /**\n   * Accepts buffer view index or buffer view object\n   * @returns a `Uint8Array`\n   */\n  getTypedArrayForBufferView(bufferView: number | object): Uint8Array {\n    bufferView = this.getBufferView(bufferView);\n    // @ts-ignore\n    const bufferIndex = bufferView.buffer;\n\n    // Get hold of the arrayBuffer\n    // const buffer = this.getBuffer(bufferIndex);\n    const binChunk = this.gltf.buffers[bufferIndex];\n    assert(binChunk);\n\n    // @ts-ignore\n    const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n    // @ts-ignore\n    return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n  }\n\n  /** Accepts accessor index or accessor object\n   * @returns a typed array with type that matches the types\n   */\n  getTypedArrayForAccessor(accessor: number | object): any {\n    // @ts-ignore\n    accessor = this.getAccessor(accessor);\n    // @ts-ignore\n    const bufferView = this.getBufferView(accessor.bufferView);\n    const buffer = this.getBuffer(bufferView.buffer);\n    // @ts-ignore\n    const arrayBuffer = buffer.data;\n\n    // Create a new typed array as a view into the combined buffer\n    const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n    // @ts-ignore\n    const byteOffset = bufferView.byteOffset + accessor.byteOffset;\n    return new ArrayType(arrayBuffer, byteOffset, length);\n  }\n\n  /** accepts accessor index or accessor object\n   * returns a `Uint8Array`\n   */\n  getTypedArrayForImageData(image: number | object): Uint8Array {\n    // @ts-ignore\n    image = this.getAccessor(image);\n    // @ts-ignore\n    const bufferView = this.getBufferView(image.bufferView);\n    const buffer = this.getBuffer(bufferView.buffer);\n    // @ts-ignore\n    const arrayBuffer = buffer.data;\n\n    const byteOffset = bufferView.byteOffset || 0;\n    return new Uint8Array(arrayBuffer, byteOffset, bufferView.byteLength);\n  }\n\n  // MODIFERS\n\n  /**\n   * Add an extra application-defined key to the top-level data structure\n   */\n  addApplicationData(key: string, data: object): GLTFScenegraph {\n    this.json[key] = data;\n    return this;\n  }\n\n  /**\n   * `extras` - Standard GLTF field for storing application specific data\n   */\n  addExtraData(key: string, data: object): GLTFScenegraph {\n    this.json.extras = this.json.extras || {};\n    this.json.extras[key] = data;\n    return this;\n  }\n\n  addObjectExtension(object: object, extensionName: string, data: object): GLTFScenegraph {\n    // @ts-ignore\n    object.extensions = object.extensions || {};\n    // TODO - clobber or merge?\n    // @ts-ignore\n    object.extensions[extensionName] = data;\n    this.registerUsedExtension(extensionName);\n    return this;\n  }\n\n  setObjectExtension(object: object, extensionName: string, data: object): void {\n    // @ts-ignore\n    const extensions = object.extensions || {};\n    extensions[extensionName] = data;\n    // TODO - add to usedExtensions...\n  }\n\n  removeObjectExtension(object: object, extensionName: string): object {\n    // @ts-ignore\n    const extensions = object.extensions || {};\n    const extension = extensions[extensionName];\n    delete extensions[extensionName];\n    return extension;\n  }\n\n  /**\n   * Add to standard GLTF top level extension object, mark as used\n   */\n  addExtension(extensionName: string, extensionData: object = {}): object {\n    assert(extensionData);\n    this.json.extensions = this.json.extensions || {};\n    this.json.extensions[extensionName] = extensionData;\n    this.registerUsedExtension(extensionName);\n    return extensionData;\n  }\n\n  /**\n   * Standard GLTF top level extension object, mark as used and required\n   */\n  addRequiredExtension(extensionName, extensionData: object = {}): object {\n    assert(extensionData);\n    this.addExtension(extensionName, extensionData);\n    this.registerRequiredExtension(extensionName);\n    return extensionData;\n  }\n\n  /**\n   * Add extensionName to list of used extensions\n   */\n  registerUsedExtension(extensionName: string): void {\n    this.json.extensionsUsed = this.json.extensionsUsed || [];\n    if (!this.json.extensionsUsed.find((ext) => ext === extensionName)) {\n      this.json.extensionsUsed.push(extensionName);\n    }\n  }\n\n  /**\n   * Add extensionName to list of required extensions\n   */\n  registerRequiredExtension(extensionName: string): void {\n    this.registerUsedExtension(extensionName);\n    this.json.extensionsRequired = this.json.extensionsRequired || [];\n    if (!this.json.extensionsRequired.find((ext) => ext === extensionName)) {\n      this.json.extensionsRequired.push(extensionName);\n    }\n  }\n\n  /**\n   * Removes an extension from the top-level list\n   */\n  removeExtension(extensionName: string): void {\n    if (this.json.extensionsRequired) {\n      this._removeStringFromArray(this.json.extensionsRequired, extensionName);\n    }\n    if (this.json.extensionsUsed) {\n      this._removeStringFromArray(this.json.extensionsUsed, extensionName);\n    }\n    if (this.json.extensions) {\n      delete this.json.extensions[extensionName];\n    }\n  }\n\n  /**\n   *  Set default scene which is to be displayed at load time\n   */\n  setDefaultScene(sceneIndex: number): void {\n    this.json.scene = sceneIndex;\n  }\n\n  /**\n   * @todo: add more properties for scene initialization:\n   *   name`, `extensions`, `extras`\n   *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-scene\n   */\n  addScene(scene: {nodeIndices: number[]}): number {\n    const {nodeIndices} = scene;\n    this.json.scenes = this.json.scenes || [];\n    this.json.scenes.push({nodes: nodeIndices});\n    return this.json.scenes.length - 1;\n  }\n\n  /**\n   * @todo: add more properties for node initialization:\n   *   `name`, `extensions`, `extras`, `camera`, `children`, `skin`, `rotation`, `scale`, `translation`, `weights`\n   *   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#node\n   */\n  addNode(node: {meshIndex: number; matrix: number[]}): number {\n    const {meshIndex, matrix} = node;\n    this.json.nodes = this.json.nodes || [];\n    const nodeData = {mesh: meshIndex};\n    if (matrix) {\n      // @ts-ignore\n      nodeData.matrix = matrix;\n    }\n    this.json.nodes.push(nodeData);\n    return this.json.nodes.length - 1;\n  }\n\n  /** Adds a mesh to the json part */\n  addMesh(mesh: {attributes: object; indices: object; material: number; mode: number}): number {\n    const {attributes, indices, material, mode = 4} = mesh;\n    const accessors = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessors,\n          mode\n        }\n      ]\n    };\n\n    if (indices) {\n      const indicesAccessor = this._addIndices(indices);\n      // @ts-ignore\n      glTFMesh.primitives[0].indices = indicesAccessor;\n    }\n\n    if (Number.isFinite(material)) {\n      // @ts-ignore\n      glTFMesh.primitives[0].material = material;\n    }\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  addPointCloud(attributes: object): number {\n    // @ts-ignore\n    const accessorIndices = this._addAttributes(attributes);\n\n    const glTFMesh = {\n      primitives: [\n        {\n          attributes: accessorIndices,\n          mode: 0 // GL.POINTS\n        }\n      ]\n    };\n\n    this.json.meshes = this.json.meshes || [];\n    this.json.meshes.push(glTFMesh);\n    return this.json.meshes.length - 1;\n  }\n\n  /**\n   * Adds a binary image. Builds glTF \"JSON metadata\" and saves buffer reference\n   * Buffer will be copied into BIN chunk during \"pack\"\n   * Currently encodes as glTF image\n   * @param imageData\n   * @param mimeType\n   */\n  addImage(imageData: any, mimeTypeOpt?: string): number {\n    // If image is referencing a bufferView instead of URI, mimeType must be defined:\n    //   https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#images\n    //   \"a reference to a bufferView; in that case mimeType must be defined.\"\n    const metadata = getBinaryImageMetadata(imageData);\n    const mimeType = mimeTypeOpt || metadata?.mimeType;\n\n    const bufferViewIndex = this.addBufferView(imageData);\n\n    const glTFImage = {\n      bufferView: bufferViewIndex,\n      mimeType\n    };\n\n    this.json.images = this.json.images || [];\n    this.json.images.push(glTFImage);\n    return this.json.images.length - 1;\n  }\n\n  /**\n   * Add one untyped source buffer, create a matching glTF `bufferView`, and return its index\n   * @param buffer\n   */\n  addBufferView(buffer: any): number {\n    const byteLength = buffer.byteLength;\n    assert(Number.isFinite(byteLength));\n\n    // Add this buffer to the list of buffers to be written to the body.\n    this.sourceBuffers = this.sourceBuffers || [];\n    this.sourceBuffers.push(buffer);\n\n    const glTFBufferView = {\n      buffer: 0,\n      // Write offset from the start of the binary body\n      byteOffset: this.byteLength,\n      byteLength\n    };\n\n    // We've now added the contents to the body, so update the total length\n    // Every sub-chunk needs to be 4-byte align ed\n    this.byteLength += padToNBytes(byteLength, 4);\n\n    // Add a bufferView indicating start and length of this binary sub-chunk\n    this.json.bufferViews = this.json.bufferViews || [];\n    this.json.bufferViews.push(glTFBufferView);\n    return this.json.bufferViews.length - 1;\n  }\n\n  /**\n   * Adds an accessor to a bufferView\n   * @param bufferViewIndex\n   * @param accessor\n   */\n  addAccessor(bufferViewIndex: number, accessor: object): number {\n    const glTFAccessor = {\n      bufferView: bufferViewIndex,\n      // @ts-ignore\n      type: getAccessorTypeFromSize(accessor.size),\n      // @ts-ignore\n      componentType: accessor.componentType,\n      // @ts-ignore\n      count: accessor.count,\n      // @ts-ignore\n      max: accessor.max,\n      // @ts-ignore\n      min: accessor.min\n    };\n\n    this.json.accessors = this.json.accessors || [];\n    this.json.accessors.push(glTFAccessor);\n    return this.json.accessors.length - 1;\n  }\n\n  /**\n   * Add a binary buffer. Builds glTF \"JSON metadata\" and saves buffer reference\n   * Buffer will be copied into BIN chunk during \"pack\"\n   * Currently encodes buffers as glTF accessors, but this could be optimized\n   * @param sourceBuffer\n   * @param accessor\n   */\n  addBinaryBuffer(sourceBuffer: any, accessor: object = {size: 3}): number {\n    const bufferViewIndex = this.addBufferView(sourceBuffer);\n    // @ts-ignore\n    let minMax = {min: accessor.min, max: accessor.max};\n    if (!minMax.min || !minMax.max) {\n      // @ts-ignore\n      minMax = this._getAccessorMinMax(sourceBuffer, accessor.size);\n    }\n\n    const accessorDefaults = {\n      // @ts-ignore\n      size: accessor.size,\n      componentType: getComponentTypeFromArray(sourceBuffer),\n      // @ts-ignore\n      count: Math.round(sourceBuffer.length / accessor.size),\n      min: minMax.min,\n      max: minMax.max\n    };\n\n    return this.addAccessor(bufferViewIndex, Object.assign(accessorDefaults, accessor));\n  }\n\n  /**\n   * Adds a texture to the json part\n   * @todo: add more properties for texture initialization\n   * `sampler`, `name`, `extensions`, `extras`\n   * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\n   */\n  addTexture(texture: {imageIndex: number}): number {\n    const {imageIndex} = texture;\n    const glTFTexture = {\n      source: imageIndex\n    };\n\n    this.json.textures = this.json.textures || [];\n    this.json.textures.push(glTFTexture);\n    return this.json.textures.length - 1;\n  }\n\n  /** Adds a material to the json part */\n  addMaterial(pbrMaterialInfo: Object): number {\n    this.json.materials = this.json.materials || [];\n    this.json.materials.push(pbrMaterialInfo);\n    return this.json.materials.length - 1;\n  }\n\n  /** Pack the binary chunk */\n  createBinaryChunk(): void {\n    // Encoder expects this array undefined or empty\n    this.gltf.buffers = [];\n\n    // Allocate total array\n    const totalByteLength = this.byteLength;\n    const arrayBuffer = new ArrayBuffer(totalByteLength);\n    const targetArray = new Uint8Array(arrayBuffer);\n\n    // Copy each array into\n    let dstByteOffset = 0;\n    for (const sourceBuffer of this.sourceBuffers || []) {\n      dstByteOffset = copyToArray(sourceBuffer, targetArray, dstByteOffset);\n    }\n\n    // Update the glTF BIN CHUNK byte length\n    if (this.json?.buffers?.[0]) {\n      this.json.buffers[0].byteLength = totalByteLength;\n    } else {\n      this.json.buffers = [{byteLength: totalByteLength}];\n    }\n\n    // Save generated arrayBuffer\n    this.gltf.binary = arrayBuffer;\n\n    // Put arrayBuffer to sourceBuffers for possible additional writing data in the chunk\n    this.sourceBuffers = [arrayBuffer];\n  }\n\n  // PRIVATE\n\n  _removeStringFromArray(array, string) {\n    let found = true;\n    while (found) {\n      const index = array.indexOf(string);\n      if (index > -1) {\n        array.splice(index, 1);\n      } else {\n        found = false;\n      }\n    }\n  }\n\n  /**\n   * Add attributes to buffers and create `attributes` object which is part of `mesh`\n   */\n  _addAttributes(attributes = {}) {\n    const result = {};\n    for (const attributeKey in attributes) {\n      const attributeData = attributes[attributeKey];\n      const attrName = this._getGltfAttributeName(attributeKey);\n      const accessor = this.addBinaryBuffer(attributeData.value, attributeData);\n      result[attrName] = accessor;\n    }\n    return result;\n  }\n\n  /**\n   * Add indices to buffers\n   */\n  _addIndices(indices) {\n    return this.addBinaryBuffer(indices, {size: 1});\n  }\n\n  /**\n   * Deduce gltf specific attribue name from input attribute name\n   */\n  _getGltfAttributeName(attributeName) {\n    switch (attributeName.toLowerCase()) {\n      case 'position':\n      case 'positions':\n      case 'vertices':\n        return 'POSITION';\n      case 'normal':\n      case 'normals':\n        return 'NORMAL';\n      case 'color':\n      case 'colors':\n        return 'COLOR_0';\n      case 'texcoord':\n      case 'texcoords':\n        return 'TEXCOORD_0';\n      default:\n        return attributeName;\n    }\n  }\n\n  /**\n   * Calculate `min` and `max` arrays of accessor according to spec:\n   * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#reference-accessor\n   */\n  _getAccessorMinMax(buffer, size) {\n    const result = {min: null, max: null};\n    if (buffer.length < size) {\n      return result;\n    }\n    // @ts-ignore\n    result.min = [];\n    // @ts-ignore\n    result.max = [];\n    const initValues = buffer.subarray(0, size);\n    for (const value of initValues) {\n      // @ts-ignore\n      result.min.push(value);\n      // @ts-ignore\n      result.max.push(value);\n    }\n\n    for (let index = size; index < buffer.length; index += size) {\n      for (let componentIndex = 0; componentIndex < size; componentIndex++) {\n        // @ts-ignore\n        result.min[0 + componentIndex] = Math.min(\n          // @ts-ignore\n          result.min[0 + componentIndex],\n          buffer[index + componentIndex]\n        );\n        // @ts-ignore\n        result.max[0 + componentIndex] = Math.max(\n          // @ts-ignore\n          result.max[0 + componentIndex],\n          buffer[index + componentIndex]\n        );\n      }\n    }\n    return result;\n  }\n}\n","export default function isElectron(mockUserAgent) {\n  if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  if (typeof process !== 'undefined' && typeof process.versions === 'object' && Boolean(process.versions.electron)) {\n    return true;\n  }\n\n  const realUserAgent = typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent;\n  const userAgent = mockUserAgent || realUserAgent;\n\n  if (userAgent && userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=is-electron.js.map","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\nexport default class Vector extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  copy(vector) {\n    assert(false);\n    return this;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n\n    return checkNumber(product);\n  }\n\n  normalize() {\n    const length = this.magnitude();\n\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n\n}\n//# sourceMappingURL=vector.js.map","import { checkVector, deprecated } from '../lib/validators';\nimport Matrix from './base/matrix';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\nconst constants = {};\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  frustum({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  }) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n\n    return this.check();\n  }\n\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = 2.0 * near / (right - left);\n    const column1Row1 = 2.0 * near / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  lookAt(eye, center, up) {\n    if (arguments.length === 1) {\n      ({\n        eye,\n        center,\n        up\n      } = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near = 0.1,\n    far = 500\n  }) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  orthographic({\n    fovy = 45 * Math.PI / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY);\n    const right = top * aspect;\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  perspective({\n    fovy = undefined,\n    fov = 45 * Math.PI / 180,\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  getScale(result = [-0, -0, -0]) {\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    return result;\n  }\n\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  getRotation(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    return this.check();\n  }\n\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    return this.check();\n  }\n\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformAsPoint(vector, result) {\n    const {\n      length\n    } = vector;\n\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix4.js.map","import {isResponse, isBlob} from '../../javascript-utils/is-type';\nimport {parseMIMEType, parseMIMETypeFromURL} from './mime-type-utils';\n\nconst QUERY_STRING_PATTERN = /\\?.*/;\n\n/**\n * Returns an object with `url` and (MIME) `type` fields\n * If it cannot determine url or type, the corresponding value will be an empty string\n *\n * @param resource Any type, but only Responses, string URLs and data URLs are processed\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceUrlAndType(resource: any): {url: string; type: string} {\n  // If resource is a response, it contains the information directly\n  if (isResponse(resource)) {\n    const url = stripQueryString(resource.url || '');\n    const contentTypeHeader = resource.headers.get('content-type') || '';\n    return {\n      url,\n      type: parseMIMEType(contentTypeHeader) || parseMIMETypeFromURL(url)\n    };\n  }\n\n  // If the resource is a Blob or a File (subclass of Blob)\n  if (isBlob(resource)) {\n    return {\n      // File objects have a \"name\" property. Blob objects don't have any\n      // url (name) information\n      url: stripQueryString(resource.name || ''),\n      type: resource.type || ''\n    };\n  }\n\n  if (typeof resource === 'string') {\n    return {\n      // TODO this could mess up data URL but it doesn't matter as it is just used for inference\n      url: stripQueryString(resource),\n      // If a data url\n      type: parseMIMETypeFromURL(resource)\n    };\n  }\n\n  // Unknown\n  return {\n    url: '',\n    type: ''\n  };\n}\n\n/**\n  * Returns (approximate) content length for a resource if it can be determined.\n  * Returns -1 if content length cannot be determined.\n  * @param resource\n\n  * @note string parameters are NOT assumed to be URLs\n  */\nexport function getResourceContentLength(resource: any): number {\n  if (isResponse(resource)) {\n    return resource.headers['content-length'] || -1;\n  }\n  if (isBlob(resource)) {\n    return resource.size;\n  }\n  if (typeof resource === 'string') {\n    // TODO - handle data URL?\n    return resource.length;\n  }\n  if (resource instanceof ArrayBuffer) {\n    return resource.byteLength;\n  }\n  if (ArrayBuffer.isView(resource)) {\n    return resource.byteLength;\n  }\n  return -1;\n}\n\nfunction stripQueryString(url) {\n  return url.replace(QUERY_STRING_PATTERN, '');\n}\n","export const TILE_CONTENT_STATE = {\n  UNLOADED: 0, // Has never been requested\n  LOADING: 1, // Is waiting on a pending request\n  PROCESSING: 2, // Request received.  Contents are being processed for rendering.  Depending on the content, it might make its own requests for external data.\n  READY: 3, // Ready to render.\n  EXPIRED: 4, // Is expired and will be unloaded once new content is loaded.\n  FAILED: 5 // Request failed.\n};\n\nexport const TILE_REFINEMENT = {\n  ADD: 1, // Render tile and, if screen space error exceeded, also refine to its children.\n  REPLACE: 2 // Render tile or, if screen space error exceeded, refine to its descendants instead.\n};\n\nexport const TILE_TYPE = {\n  EMPTY: 'empty',\n  SCENEGRAPH: 'scenegraph',\n  POINTCLOUD: 'pointcloud',\n  MESH: 'mesh'\n};\n\nexport const TILESET_TYPE = {\n  I3S: 'I3S',\n  TILES3D: 'TILES3D'\n};\n\nexport const LOD_METRIC_TYPE = {\n  GEOMETRIC_ERROR: 'geometricError',\n  MAX_SCREEN_THRESHOLD: 'maxScreenThreshold'\n};\n\n// Cesium 3D Tiles Specific\nexport const TILE3D_OPTIMIZATION_HINT = {\n  NOT_COMPUTED: -1,\n  USE_OPTIMIZATION: 1,\n  SKIP_OPTIMIZATION: 0\n};\n","import ManagedArray from '../../utils/managed-array';\nimport {TILE_REFINEMENT} from '../../constants';\n\nexport type TilesetTraverserProps = {\n  loadSiblings?: boolean;\n  skipLevelOfDetail?: boolean;\n  maximumScreenSpaceError?: number;\n  onTraversalEnd?: (frameState) => any;\n  viewportTraversersMap?: {[key: string]: any};\n  basePath?: string;\n};\n\nexport type Props = {\n  loadSiblings: boolean;\n  skipLevelOfDetail: boolean;\n  updateTransforms: boolean;\n  maximumScreenSpaceError: number;\n  onTraversalEnd: (frameState) => any;\n  viewportTraversersMap: {[key: string]: any};\n  basePath: string;\n};\n\nexport const DEFAULT_PROPS: Props = {\n  loadSiblings: false,\n  skipLevelOfDetail: false,\n  maximumScreenSpaceError: 2,\n  updateTransforms: true,\n  onTraversalEnd: () => {},\n  viewportTraversersMap: {},\n  basePath: ''\n};\n\nexport default class TilesetTraverser {\n  options: Props;\n\n  root: any;\n  requestedTiles: object;\n  selectedTiles: object;\n  emptyTiles: object;\n\n  protected _traversalStack: ManagedArray;\n  protected _emptyTraversalStack: ManagedArray;\n  protected _frameNumber: number | null;\n\n  // TODO nested props\n  constructor(options: TilesetTraverserProps) {\n    this.options = {...DEFAULT_PROPS, ...options};\n    // TRAVERSAL\n    // temporary storage to hold the traversed tiles during a traversal\n    this._traversalStack = new ManagedArray();\n    this._emptyTraversalStack = new ManagedArray();\n\n    // set in every traverse cycle\n    this._frameNumber = null;\n\n    // fulfill in traverse call\n    this.root = null;\n\n    // RESULT\n    // tiles should be rendered\n    this.selectedTiles = {};\n    // tiles should be loaded from server\n    this.requestedTiles = {};\n    // tiles does not have render content\n    this.emptyTiles = {};\n  }\n\n  // tiles should be visible\n  traverse(root, frameState, options) {\n    this.root = root; // for root screen space error\n    this.options = {...this.options, ...options};\n\n    // reset result\n    this.reset();\n\n    // update tile (visibility and expiration)\n    this.updateTile(root, frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.executeTraversal(root, frameState);\n  }\n\n  reset() {\n    this.requestedTiles = {};\n    this.selectedTiles = {};\n    this.emptyTiles = {};\n    this._traversalStack.reset();\n    this._emptyTraversalStack.reset();\n  }\n\n  // execute traverse\n  // Depth-first traversal that traverses all visible tiles and marks tiles for selection.\n  // If skipLevelOfDetail is off then a tile does not refine until all children are loaded.\n  // This is the traditional replacement refinement approach and is called the base traversal.\n  // Tiles that have a greater screen space error than the base screen space error are part of the base traversal,\n  // all other tiles are part of the skip traversal. The skip traversal allows for skipping levels of the tree\n  // and rendering children and parent tiles simultaneously.\n  /* eslint-disable-next-line complexity, max-statements */\n  executeTraversal(root, frameState) {\n    // stack to store traversed tiles, only visible tiles should be added to stack\n    // visible: visible in the current view frustum\n    const stack = this._traversalStack;\n    root._selectionDepth = 1;\n\n    stack.push(root);\n    while (stack.length > 0) {\n      // 1. pop tile\n      const tile = stack.pop();\n\n      // 2. check if tile needs to be refine, needs refine if a tile's LoD is not sufficient and tile has available children (available content)\n      let shouldRefine = false;\n      if (this.canTraverse(tile, frameState)) {\n        this.updateChildTiles(tile, frameState);\n        shouldRefine = this.updateAndPushChildren(\n          tile,\n          frameState,\n          stack,\n          tile.hasRenderContent ? tile._selectionDepth + 1 : tile._selectionDepth\n        );\n      }\n\n      // 3. decide if should render (select) this tile\n      //   - tile does not have render content\n      //   - tile has render content and tile is `add` type (pointcloud)\n      //   - tile has render content and tile is `replace` type (photogrammetry) and can't refine any further\n      const parent = tile.parent;\n      const parentRefines = Boolean(!parent || parent._shouldRefine);\n      const stoppedRefining = !shouldRefine;\n\n      if (!tile.hasRenderContent) {\n        this.emptyTiles[tile.id] = tile;\n        this.loadTile(tile, frameState);\n        if (stoppedRefining) {\n          this.selectTile(tile, frameState);\n        }\n        // additive tiles\n      } else if (tile.refine === TILE_REFINEMENT.ADD) {\n        // Additive tiles are always loaded and selected\n        this.loadTile(tile, frameState);\n        this.selectTile(tile, frameState);\n\n        // replace tiles\n      } else if (tile.refine === TILE_REFINEMENT.REPLACE) {\n        // Always load tiles in the base traversal\n        // Select tiles that can't refine further\n        this.loadTile(tile, frameState);\n        if (stoppedRefining) {\n          this.selectTile(tile, frameState);\n        }\n      }\n\n      // 3. update cache, most recent touched tiles have higher priority to be fetched from server\n      this.touchTile(tile, frameState);\n\n      // 4. update tile refine prop and parent refinement status to trickle down to the descendants\n      tile._shouldRefine = shouldRefine && parentRefines;\n    }\n\n    this.options.onTraversalEnd(frameState);\n  }\n\n  updateChildTiles(tile, frameState) {\n    const children = tile.children;\n    for (const child of children) {\n      this.updateTile(child, frameState);\n    }\n    return true;\n  }\n\n  /* eslint-disable complexity, max-statements */\n  updateAndPushChildren(tile, frameState, stack, depth) {\n    const {loadSiblings, skipLevelOfDetail} = this.options;\n\n    const children = tile.children;\n\n    // sort children tiles\n    children.sort(this.compareDistanceToCamera.bind(this));\n\n    // For traditional replacement refinement only refine if all children are loaded.\n    // Empty tiles are exempt since it looks better if children stream in as they are loaded to fill the empty space.\n    const checkRefines =\n      tile.refine === TILE_REFINEMENT.REPLACE && tile.hasRenderContent && !skipLevelOfDetail;\n\n    let hasVisibleChild = false;\n    let refines = true;\n\n    for (const child of children) {\n      child._selectionDepth = depth;\n      if (child.isVisibleAndInRequestVolume) {\n        if (stack.find(child)) {\n          stack.delete(child);\n        }\n        stack.push(child);\n        hasVisibleChild = true;\n      } else if (checkRefines || loadSiblings) {\n        // Keep non-visible children loaded since they are still needed before the parent can refine.\n        // Or loadSiblings is true so always load tiles regardless of visibility.\n        this.loadTile(child, frameState);\n        this.touchTile(child, frameState);\n      }\n\n      if (checkRefines) {\n        let childRefines;\n        if (!child._inRequestVolume) {\n          childRefines = false;\n        } else if (!child.hasRenderContent) {\n          childRefines = this.executeEmptyTraversal(child, frameState);\n        } else {\n          childRefines = child.contentAvailable;\n        }\n        refines = refines && childRefines;\n\n        if (!refines) {\n          return false;\n        }\n      }\n    }\n\n    if (!hasVisibleChild) {\n      refines = false;\n    }\n    return refines;\n  }\n  /* eslint-enable complexity, max-statements */\n\n  updateTile(tile, frameState) {\n    this.updateTileVisibility(tile, frameState);\n  }\n\n  // tile to render in the browser\n  selectTile(tile, frameState) {\n    if (this.shouldSelectTile(tile)) {\n      // The tile can be selected right away and does not require traverseAndSelect\n      tile._selectedFrame = frameState.frameNumber;\n      this.selectedTiles[tile.id] = tile;\n    }\n  }\n\n  // tile to load from server\n  loadTile(tile, frameState) {\n    if (this.shouldLoadTile(tile)) {\n      tile._requestedFrame = frameState.frameNumber;\n      tile._priority = tile._getPriority();\n      this.requestedTiles[tile.id] = tile;\n    }\n  }\n\n  // cache tile\n  touchTile(tile, frameState) {\n    tile.tileset._cache.touch(tile);\n    tile._touchedFrame = frameState.frameNumber;\n  }\n\n  // tile should be visible\n  // tile should have children\n  // tile LoD (level of detail) is not sufficient under current viewport\n  canTraverse(tile, frameState, useParentMetric = false, ignoreVisibility = false) {\n    if (!tile.hasChildren) {\n      return false;\n    }\n\n    // cesium specific\n    if (tile.hasTilesetContent) {\n      // Traverse external this to visit its root tile\n      // Don't traverse if the subtree is expired because it will be destroyed\n      return !tile.contentExpired;\n    }\n\n    if (!ignoreVisibility && !tile.isVisibleAndInRequestVolume) {\n      return false;\n    }\n\n    return this.shouldRefine(tile, frameState, useParentMetric);\n  }\n\n  shouldLoadTile(tile) {\n    // if request tile is in current frame\n    // and has unexpired render content\n    return tile.hasUnloadedContent || tile.contentExpired;\n  }\n\n  shouldSelectTile(tile) {\n    // if select tile is in current frame\n    // and content available\n    return tile.contentAvailable && !this.options.skipLevelOfDetail;\n  }\n\n  // Decide if tile LoD (level of detail) is not sufficient under current viewport\n  shouldRefine(tile, frameState, useParentMetric) {\n    let screenSpaceError = tile._screenSpaceError;\n    if (useParentMetric) {\n      screenSpaceError = tile.getScreenSpaceError(frameState, true);\n    }\n\n    return screenSpaceError > this.options.maximumScreenSpaceError;\n  }\n\n  updateTileVisibility(tile, frameState) {\n    const viewportIds: string[] = [];\n    if (this.options.viewportTraversersMap) {\n      for (const key in this.options.viewportTraversersMap) {\n        const value = this.options.viewportTraversersMap[key];\n        if (value === frameState.viewport.id) {\n          viewportIds.push(key);\n        }\n      }\n    } else {\n      viewportIds.push(frameState.viewport.id);\n    }\n    tile.updateVisibility(frameState, viewportIds);\n  }\n\n  // UTILITIES\n\n  compareDistanceToCamera(b, a) {\n    return b._distanceToCamera - a._distanceToCamera;\n  }\n\n  anyChildrenVisible(tile, frameState) {\n    let anyVisible = false;\n    for (const child of tile.children) {\n      child.updateVisibility(frameState);\n      anyVisible = anyVisible || child.isVisibleAndInRequestVolume;\n    }\n    return anyVisible;\n  }\n\n  // Depth-first traversal that checks if all nearest descendants with content are loaded.\n  // Ignores visibility.\n  executeEmptyTraversal(root, frameState) {\n    let allDescendantsLoaded = true;\n    const stack = this._emptyTraversalStack;\n\n    stack.push(root);\n\n    while (stack.length > 0 && allDescendantsLoaded) {\n      const tile = stack.pop();\n\n      this.updateTile(tile, frameState);\n\n      if (!tile.isVisibleAndInRequestVolume) {\n        // Load tiles that aren't visible since they are still needed for the parent to refine\n        this.loadTile(tile, frameState);\n      }\n\n      this.touchTile(tile, frameState);\n\n      // Only traverse if the tile is empty - traversal stop at descendants with content\n      const traverse = !tile.hasRenderContent && this.canTraverse(tile, frameState, false, true);\n\n      if (traverse) {\n        const children = tile.children;\n        for (const child of children) {\n          // eslint-disable-next-line max-depth\n          if (stack.find(child)) {\n            stack.delete(child);\n          }\n          stack.push(child);\n        }\n      } else if (!tile.contentAvailable) {\n        allDescendantsLoaded = false;\n      }\n    }\n\n    return allDescendantsLoaded;\n  }\n}\n\n// TODO\n// enable expiration\n// enable optimization hint\n","// Subset of WebGL constants\n\nexport const GL_PRIMITIVE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  TRIANGLES: 0x0004 // Triangles. Each set of three vertices creates a separate triangle.\n};\n\n// Primitive modes\nexport const GL_PRIMITIVE_MODE = {\n  POINTS: 0x0000, // Points. single points.\n  LINES: 0x0001, // Lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // Lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // Lines/ a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // Triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // Triangles. A connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // Triangles. A connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\ntype glType = {\n  BYTE: number;\n  UNSIGNED_BYTE: number;\n  SHORT: number;\n  UNSIGNED_SHORT: number;\n  INT: number;\n  UNSIGNED_INT: number;\n  FLOAT: number;\n  DOUBLE: number;\n};\n\nexport const GL_TYPE: glType = {\n  BYTE: 5120,\n  UNSIGNED_BYTE: 5121,\n  SHORT: 5122,\n  UNSIGNED_SHORT: 5123,\n  INT: 5124,\n  UNSIGNED_INT: 5125,\n  FLOAT: 5126,\n  DOUBLE: 5130\n};\n\nexport const GL = {\n  ...GL_PRIMITIVE_MODE,\n  ...GL_TYPE\n};\n","export const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\nexport const WGS84_CONSTANTS = {\n  radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n  radiiSquared: [WGS84_RADIUS_X * WGS84_RADIUS_X, WGS84_RADIUS_Y * WGS84_RADIUS_Y, WGS84_RADIUS_Z * WGS84_RADIUS_Z],\n  oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n  oneOverRadiiSquared: [1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X), 1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y), 1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)],\n  maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n  centerToleranceSquared: 1e-1\n};\n//# sourceMappingURL=constants.js.map","import { Vector3, isArray, toRadians, toDegrees, config } from '@math.gl/core';\nimport { WGS84_CONSTANTS } from './constants';\n\nconst noop = x => x;\n\nconst scratchVector = new Vector3();\nexport function fromCartographic(cartographic, result, map = noop) {\n  if (isArray(cartographic)) {\n    result[0] = map(cartographic[0]);\n    result[1] = map(cartographic[1]);\n    result[2] = cartographic[2];\n  } else if ('longitude' in cartographic) {\n    result[0] = map(cartographic.longitude);\n    result[1] = map(cartographic.latitude);\n    result[2] = cartographic.height;\n  } else {\n    result[0] = map(cartographic.x);\n    result[1] = map(cartographic.y);\n    result[2] = cartographic.z;\n  }\n\n  return result;\n}\nexport function fromCartographicToRadians(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? noop : toRadians);\n}\nexport function fromCartographicToDegrees(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? toDegrees : noop);\n}\nexport function toCartographic(vector, cartographic, map = noop) {\n  if (isArray(cartographic)) {\n    cartographic[0] = map(vector[0]);\n    cartographic[1] = map(vector[1]);\n    cartographic[2] = vector[2];\n  } else if ('longitude' in cartographic) {\n    cartographic.longitude = map(vector[0]);\n    cartographic.latitude = map(vector[1]);\n    cartographic.height = vector[2];\n  } else {\n    cartographic.x = map(vector[0]);\n    cartographic.y = map(vector[1]);\n    cartographic.z = vector[2];\n  }\n\n  return cartographic;\n}\nexport function toCartographicFromRadians(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? noop : toDegrees);\n}\nexport function toCartographicFromDegrees(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? toRadians : noop);\n}\nexport function isWGS84(vector) {\n  if (!vector) {\n    return false;\n  }\n\n  scratchVector.from(vector);\n  const {\n    oneOverRadiiSquared,\n    centerToleranceSquared\n  } = WGS84_CONSTANTS;\n  const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n  const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n  const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n  return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n//# sourceMappingURL=type-utils.js.map","import { Vector3, assert, _MathUtils } from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\nexport default function scaleToGeodeticSurface(cartesian, ellipsoid, result = new Vector3()) {\n  const {\n    oneOverRadii,\n    oneOverRadiiSquared,\n    centerToleranceSquared\n  } = ellipsoid;\n  scratchVector.from(cartesian);\n  const positionX = cartesian.x;\n  const positionY = cartesian.y;\n  const positionZ = cartesian.z;\n  const oneOverRadiiX = oneOverRadii.x;\n  const oneOverRadiiY = oneOverRadii.y;\n  const oneOverRadiiZ = oneOverRadii.z;\n  const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n  const squaredNorm = x2 + y2 + z2;\n  const ratio = Math.sqrt(1.0 / squaredNorm);\n\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  const intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n  const gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(intersection.x * oneOverRadiiSquaredX * 2.0, intersection.y * oneOverRadiiSquaredY * 2.0, intersection.z * oneOverRadiiSquaredZ * 2.0);\n  let lambda = (1.0 - ratio) * cartesian.len() / (0.5 * gradient.len());\n  let correction = 0.0;\n  let xMultiplier;\n  let yMultiplier;\n  let zMultiplier;\n  let func;\n\n  do {\n    lambda -= correction;\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n    const xMultiplier2 = xMultiplier * xMultiplier;\n    const yMultiplier2 = yMultiplier * yMultiplier;\n    const zMultiplier2 = zMultiplier * zMultiplier;\n    const xMultiplier3 = xMultiplier2 * xMultiplier;\n    const yMultiplier3 = yMultiplier2 * yMultiplier;\n    const zMultiplier3 = zMultiplier2 * zMultiplier;\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n    const denominator = x2 * xMultiplier3 * oneOverRadiiSquaredX + y2 * yMultiplier3 * oneOverRadiiSquaredY + z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n    const derivative = -2.0 * denominator;\n    correction = func / derivative;\n  } while (Math.abs(func) > _MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n//# sourceMappingURL=scale-to-geodetic-surface.js.map","import { Vector3, assert, equals as equalsEpsilon } from '@math.gl/core';\nconst EPSILON14 = 1e-14;\nconst scratchOrigin = new Vector3();\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n  up: {\n    south: 'east',\n    north: 'west',\n    west: 'south',\n    east: 'north'\n  },\n  down: {\n    south: 'west',\n    north: 'east',\n    west: 'north',\n    east: 'south'\n  },\n  south: {\n    up: 'west',\n    down: 'east',\n    west: 'down',\n    east: 'up'\n  },\n  north: {\n    up: 'east',\n    down: 'west',\n    west: 'up',\n    east: 'down'\n  },\n  west: {\n    up: 'north',\n    down: 'south',\n    north: 'down',\n    south: 'up'\n  },\n  east: {\n    up: 'south',\n    down: 'north',\n    north: 'up',\n    south: 'down'\n  }\n};\nconst degeneratePositionLocalFrame = {\n  north: [-1, 0, 0],\n  east: [0, 1, 0],\n  up: [0, 0, 1],\n  south: [1, 0, 0],\n  west: [0, -1, 0],\n  down: [0, 0, -1]\n};\nconst scratchAxisVectors = {\n  east: new Vector3(),\n  north: new Vector3(),\n  up: new Vector3(),\n  west: new Vector3(),\n  south: new Vector3(),\n  down: new Vector3()\n};\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\nexport default function localFrameToFixedFrame(ellipsoid, firstAxis, secondAxis, thirdAxis, cartesianOrigin, result) {\n  const thirdAxisInferred = VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] && VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis];\n  assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n  let firstAxisVector;\n  let secondAxisVector;\n  let thirdAxisVector;\n  const origin = scratchOrigin.copy(cartesianOrigin);\n  const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n\n  if (atPole) {\n    const sign = Math.sign(origin.z);\n    firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n\n    if (firstAxis !== 'east' && firstAxis !== 'west') {\n      firstAxisVector.scale(sign);\n    }\n\n    secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n\n    if (secondAxis !== 'east' && secondAxis !== 'west') {\n      secondAxisVector.scale(sign);\n    }\n\n    thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n\n    if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n      thirdAxisVector.scale(sign);\n    }\n  } else {\n    const {\n      up,\n      east,\n      north\n    } = scratchAxisVectors;\n    east.set(-origin.y, origin.x, 0.0).normalize();\n    ellipsoid.geodeticSurfaceNormal(origin, up);\n    north.copy(up).cross(east);\n    const {\n      down,\n      west,\n      south\n    } = scratchAxisVectors;\n    down.copy(up).scale(-1);\n    west.copy(east).scale(-1);\n    south.copy(north).scale(-1);\n    firstAxisVector = scratchAxisVectors[firstAxis];\n    secondAxisVector = scratchAxisVectors[secondAxis];\n    thirdAxisVector = scratchAxisVectors[thirdAxis];\n  }\n\n  result[0] = firstAxisVector.x;\n  result[1] = firstAxisVector.y;\n  result[2] = firstAxisVector.z;\n  result[3] = 0.0;\n  result[4] = secondAxisVector.x;\n  result[5] = secondAxisVector.y;\n  result[6] = secondAxisVector.z;\n  result[7] = 0.0;\n  result[8] = thirdAxisVector.x;\n  result[9] = thirdAxisVector.y;\n  result[10] = thirdAxisVector.z;\n  result[11] = 0.0;\n  result[12] = origin.x;\n  result[13] = origin.y;\n  result[14] = origin.z;\n  result[15] = 1.0;\n  return result;\n}\n//# sourceMappingURL=ellipsoid-transform.js.map","import { Vector3, Matrix4, toRadians, toDegrees, assert, equals, _MathUtils } from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z } from '../constants';\nimport { fromCartographicToRadians, toCartographicFromRadians } from '../type-utils';\nimport scaleToGeodeticSurface from './helpers/scale-to-geodetic-surface';\nimport localFrameToFixedFrame from './helpers/ellipsoid-transform';\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\nlet wgs84;\nexport default class Ellipsoid {\n  static get WGS84() {\n    wgs84 = wgs84 || new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n    return wgs84;\n  }\n\n  constructor(x = 0.0, y = 0.0, z = 0.0) {\n    assert(x >= 0.0);\n    assert(y >= 0.0);\n    assert(z >= 0.0);\n    this.radii = new Vector3(x, y, z);\n    this.radiiSquared = new Vector3(x * x, y * y, z * z);\n    this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n    this.oneOverRadii = new Vector3(x === 0.0 ? 0.0 : 1.0 / x, y === 0.0 ? 0.0 : 1.0 / y, z === 0.0 ? 0.0 : 1.0 / z);\n    this.oneOverRadiiSquared = new Vector3(x === 0.0 ? 0.0 : 1.0 / (x * x), y === 0.0 ? 0.0 : 1.0 / (y * y), z === 0.0 ? 0.0 : 1.0 / (z * z));\n    this.minimumRadius = Math.min(x, y, z);\n    this.maximumRadius = Math.max(x, y, z);\n    this.centerToleranceSquared = _MathUtils.EPSILON1;\n\n    if (this.radiiSquared.z !== 0) {\n      this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n    }\n\n    Object.freeze(this);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right && this.radii.equals(right.radii));\n  }\n\n  toString() {\n    return this.radii.toString();\n  }\n\n  cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n    const normal = scratchNormal;\n    const k = scratchK;\n    const [,, height] = cartographic;\n    this.geodeticSurfaceNormalCartographic(cartographic, normal);\n    k.copy(this.radiiSquared).scale(normal);\n    const gamma = Math.sqrt(normal.dot(k));\n    k.scale(1 / gamma);\n    normal.scale(height);\n    k.add(normal);\n    return k.to(result);\n  }\n\n  cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n    scratchCartesian.from(cartesian);\n    const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n\n    if (!point) {\n      return undefined;\n    }\n\n    const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n    const h = scratchHeight;\n    h.copy(scratchCartesian).subtract(point);\n    const longitude = Math.atan2(normal.y, normal.x);\n    const latitude = Math.asin(normal.z);\n    const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n    return toCartographicFromRadians([longitude, latitude, height], result);\n  }\n\n  eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n  }\n\n  localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n  }\n\n  geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).normalize().to(result);\n  }\n\n  geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n    const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n    const longitude = cartographicVectorRadians[0];\n    const latitude = cartographicVectorRadians[1];\n    const cosLatitude = Math.cos(latitude);\n    scratchVector.set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude)).normalize();\n    return scratchVector.to(result);\n  }\n\n  geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).scale(this.oneOverRadiiSquared).normalize().to(result);\n  }\n\n  scaleToGeodeticSurface(cartesian, result) {\n    return scaleToGeodeticSurface(cartesian, this, result);\n  }\n\n  scaleToGeocentricSurface(cartesian, result = [0, 0, 0]) {\n    scratchPosition.from(cartesian);\n    const positionX = scratchPosition.x;\n    const positionY = scratchPosition.y;\n    const positionZ = scratchPosition.z;\n    const oneOverRadiiSquared = this.oneOverRadiiSquared;\n    const beta = 1.0 / Math.sqrt(positionX * positionX * oneOverRadiiSquared.x + positionY * positionY * oneOverRadiiSquared.y + positionZ * positionZ * oneOverRadiiSquared.z);\n    return scratchPosition.multiplyScalar(beta).to(result);\n  }\n\n  transformPositionToScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.oneOverRadii).to(result);\n  }\n\n  transformPositionFromScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.radii).to(result);\n  }\n\n  getSurfaceNormalIntersectionWithZAxis(position, buffer = 0.0, result = [0, 0, 0]) {\n    assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n    assert(this.radii.z > 0);\n    scratchPosition.from(position);\n    const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n\n    if (Math.abs(z) >= this.radii.z - buffer) {\n      return undefined;\n    }\n\n    return scratchPosition.set(0.0, 0.0, z).to(result);\n  }\n\n}\n//# sourceMappingURL=ellipsoid.js.map","import getHiResTimestamp from '../utils/hi-res-timestamp';\nexport default class Stat {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.sampleSize = 1;\n    this.reset();\n  }\n\n  setSampleSize(samples) {\n    this.sampleSize = samples;\n    return this;\n  }\n\n  incrementCount() {\n    this.addCount(1);\n    return this;\n  }\n\n  decrementCount() {\n    this.subtractCount(1);\n    return this;\n  }\n\n  addCount(value) {\n    this._count += value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  subtractCount(value) {\n    this._count -= value;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  addTime(time) {\n    this._time += time;\n    this.lastTiming = time;\n    this._samples++;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  timeStart() {\n    this._startTime = getHiResTimestamp();\n    this._timerPending = true;\n    return this;\n  }\n\n  timeEnd() {\n    if (!this._timerPending) {\n      return this;\n    }\n\n    this.addTime(getHiResTimestamp() - this._startTime);\n    this._timerPending = false;\n\n    this._checkSampling();\n\n    return this;\n  }\n\n  getSampleAverageCount() {\n    return this.sampleSize > 0 ? this.lastSampleCount / this.sampleSize : 0;\n  }\n\n  getSampleAverageTime() {\n    return this.sampleSize > 0 ? this.lastSampleTime / this.sampleSize : 0;\n  }\n\n  getSampleHz() {\n    return this.lastSampleTime > 0 ? this.sampleSize / (this.lastSampleTime / 1000) : 0;\n  }\n\n  getAverageCount() {\n    return this.samples > 0 ? this.count / this.samples : 0;\n  }\n\n  getAverageTime() {\n    return this.samples > 0 ? this.time / this.samples : 0;\n  }\n\n  getHz() {\n    return this.time > 0 ? this.samples / (this.time / 1000) : 0;\n  }\n\n  reset() {\n    this.time = 0;\n    this.count = 0;\n    this.samples = 0;\n    this.lastTiming = 0;\n    this.lastSampleTime = 0;\n    this.lastSampleCount = 0;\n    this._count = 0;\n    this._time = 0;\n    this._samples = 0;\n    this._startTime = 0;\n    this._timerPending = false;\n    return this;\n  }\n\n  _checkSampling() {\n    if (this._samples === this.sampleSize) {\n      this.lastSampleTime = this._time;\n      this.lastSampleCount = this._count;\n      this.count += this._count;\n      this.time += this._time;\n      this.samples += this._samples;\n      this._time = 0;\n      this._count = 0;\n      this._samples = 0;\n    }\n  }\n\n}\n//# sourceMappingURL=stat.js.map","import Stat from './stat';\nexport default class Stats {\n  constructor({\n    id,\n    stats\n  }) {\n    this.id = id;\n    this.stats = {};\n\n    this._initializeStats(stats);\n\n    Object.seal(this);\n  }\n\n  get(name, type = 'count') {\n    return this._getOrCreate({\n      name,\n      type\n    });\n  }\n\n  get size() {\n    return Object.keys(this.stats).length;\n  }\n\n  reset() {\n    for (const key in this.stats) {\n      this.stats[key].reset();\n    }\n\n    return this;\n  }\n\n  forEach(fn) {\n    for (const key in this.stats) {\n      fn(this.stats[key]);\n    }\n  }\n\n  getTable() {\n    const table = {};\n    this.forEach(stat => {\n      table[stat.name] = {\n        time: stat.time || 0,\n        count: stat.count || 0,\n        average: stat.getAverageTime() || 0,\n        hz: stat.getHz() || 0\n      };\n    });\n    return table;\n  }\n\n  _initializeStats(stats = []) {\n    stats.forEach(stat => this._getOrCreate(stat));\n  }\n\n  _getOrCreate(stat) {\n    if (!stat || !stat.name) {\n      return null;\n    }\n\n    const {\n      name,\n      type\n    } = stat;\n\n    if (!this.stats[name]) {\n      if (stat instanceof Stat) {\n        this.stats[name] = stat;\n      } else {\n        this.stats[name] = new Stat(name, type);\n      }\n    }\n\n    return this.stats[name];\n  }\n\n}\n//# sourceMappingURL=stats.js.map","export default function getHiResTimestamp() {\n  let timestamp;\n\n  if (typeof window !== 'undefined' && window.performance) {\n    timestamp = window.performance.now();\n  } else if (typeof process !== 'undefined' && process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import MathArray from './base/math-array';\nimport { checkNumber, checkVector } from '../lib/validators';\nimport assert from '../lib/assert';\nimport * as quat from 'gl-matrix/quat';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\nexport default class Quaternion extends MathArray {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super(-0, -0, -0, -0);\n\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  fromMatrix3(m) {\n    quat.fromMat3(this, m);\n    return this.check();\n  }\n\n  identity() {\n    quat.identity(this);\n    return this.check();\n  }\n\n  fromAxisRotation(axis, rad) {\n    quat.setAxisAngle(this, axis, rad);\n    return this.check();\n  }\n\n  setAxisAngle(axis, rad) {\n    return this.fromAxisRotation(axis, rad);\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  len() {\n    return quat.length(this);\n  }\n\n  lengthSquared() {\n    return quat.squaredLength(this);\n  }\n\n  dot(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.dot only takes one argument');\n    }\n\n    return quat.dot(this, a);\n  }\n\n  rotationTo(vectorA, vectorB) {\n    quat.rotationTo(this, vectorA, vectorB);\n    return this.check();\n  }\n\n  add(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.add only takes one argument');\n    }\n\n    quat.add(this, this, a);\n    return this.check();\n  }\n\n  calculateW() {\n    quat.calculateW(this, this);\n    return this.check();\n  }\n\n  conjugate() {\n    quat.conjugate(this, this);\n    return this.check();\n  }\n\n  invert() {\n    quat.invert(this, this);\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    quat.lerp(this, a, b, t);\n    return this.check();\n  }\n\n  multiplyRight(a, b) {\n    assert(!b);\n    quat.multiply(this, this, a);\n    return this.check();\n  }\n\n  multiplyLeft(a, b) {\n    assert(!b);\n    quat.multiply(this, a, this);\n    return this.check();\n  }\n\n  normalize() {\n    const length = this.len();\n    const l = length > 0 ? 1 / length : 0;\n    this[0] = this[0] * l;\n    this[1] = this[1] * l;\n    this[2] = this[2] * l;\n    this[3] = this[3] * l;\n\n    if (length === 0) {\n      this[3] = 1;\n    }\n\n    return this.check();\n  }\n\n  rotateX(rad) {\n    quat.rotateX(this, this, rad);\n    return this.check();\n  }\n\n  rotateY(rad) {\n    quat.rotateY(this, this, rad);\n    return this.check();\n  }\n\n  rotateZ(rad) {\n    quat.rotateZ(this, this, rad);\n    return this.check();\n  }\n\n  scale(b) {\n    quat.scale(this, this, b);\n    return this.check();\n  }\n\n  slerp(start, target, ratio) {\n    switch (arguments.length) {\n      case 1:\n        ({\n          start = IDENTITY_QUATERNION,\n          target,\n          ratio\n        } = arguments[0]);\n        break;\n\n      case 2:\n        [target, ratio] = arguments;\n        start = this;\n        break;\n\n      default:\n    }\n\n    quat.slerp(this, start, target, ratio);\n    return this.check();\n  }\n\n  transformVector4(vector, result = vector) {\n    vec4.transformQuat(result, vector, this);\n    return checkVector(result, 4);\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  setFromAxisAngle(axis, rad) {\n    return this.setAxisAngle(axis, rad);\n  }\n\n  premultiply(a, b) {\n    return this.multiplyLeft(a, b);\n  }\n\n  multiply(a, b) {\n    return this.multiplyRight(a, b);\n  }\n\n}\n//# sourceMappingURL=quaternion.js.map","import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n\n// Change to `latest` on production branches\nconst DEFAULT_VERSION = 'beta';\ndeclare let __VERSION__;\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : DEFAULT_VERSION;\nif (typeof __VERSION__ === 'undefined') {\n  // eslint-disable-next-line\n  console.error(\n    'loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.'\n  );\n}\n","import { formatValue, equals, config } from '../lib/common';\nimport { degrees, radians, clamp } from '../lib/common';\nimport Vector3 from './vector3';\nimport * as vec3 from 'gl-matrix/vec3';\nconst EPSILON = 0.000001;\nconst EARTH_RADIUS_METERS = 6.371e6;\nexport default class SphericalCoordinates {\n  constructor({\n    phi = 0,\n    theta = 0,\n    radius = 1,\n    bearing = undefined,\n    pitch = undefined,\n    altitude = undefined,\n    radiusScale = EARTH_RADIUS_METERS\n  } = {}) {\n    this.phi = phi;\n    this.theta = theta;\n    this.radius = radius || altitude || 1;\n    this.radiusScale = radiusScale || 1;\n\n    if (bearing !== undefined) {\n      this.bearing = bearing;\n    }\n\n    if (pitch !== undefined) {\n      this.pitch = pitch;\n    }\n\n    this.check();\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString({\n    printTypes = false\n  }) {\n    const f = formatValue;\n    return \"\".concat(printTypes ? 'Spherical' : '', \"[rho:\").concat(f(this.radius), \",theta:\").concat(f(this.theta), \",phi:\").concat(f(this.phi), \"]\");\n  }\n\n  equals(other) {\n    return equals(this.radius, other.radius) && equals(this.theta, other.theta) && equals(this.phi, other.phi);\n  }\n\n  exactEquals(other) {\n    return this.radius === other.radius && this.theta === other.theta && this.phi === other.phi;\n  }\n\n  get bearing() {\n    return 180 - degrees(this.phi);\n  }\n\n  set bearing(v) {\n    this.phi = Math.PI - radians(v);\n  }\n\n  get pitch() {\n    return degrees(this.theta);\n  }\n\n  set pitch(v) {\n    this.theta = radians(v);\n  }\n\n  get longitude() {\n    return degrees(this.phi);\n  }\n\n  get latitude() {\n    return degrees(this.theta);\n  }\n\n  get lng() {\n    return degrees(this.phi);\n  }\n\n  get lat() {\n    return degrees(this.theta);\n  }\n\n  get z() {\n    return (this.radius - 1) * this.radiusScale;\n  }\n\n  set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this.check();\n  }\n\n  clone() {\n    return new SphericalCoordinates().copy(this);\n  }\n\n  copy(other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this.check();\n  }\n\n  fromLngLatZ([lng, lat, z]) {\n    this.radius = 1 + z / this.radiusScale;\n    this.phi = radians(lat);\n    this.theta = radians(lng);\n  }\n\n  fromVector3(v) {\n    this.radius = vec3.length(v);\n\n    if (this.radius > 0) {\n      this.theta = Math.atan2(v[0], v[1]);\n      this.phi = Math.acos(clamp(v[2] / this.radius, -1, 1));\n    }\n\n    return this.check();\n  }\n\n  toVector3() {\n    return new Vector3(0, 0, this.radius).rotateX({\n      radians: this.theta\n    }).rotateZ({\n      radians: this.phi\n    });\n  }\n\n  makeSafe() {\n    this.phi = Math.max(EPSILON, Math.min(Math.PI - EPSILON, this.phi));\n    return this;\n  }\n\n  check() {\n    if (!Number.isFinite(this.phi) || !Number.isFinite(this.theta) || !(this.radius > 0)) {\n      throw new Error('SphericalCoordinates: some fields set to invalid numbers');\n    }\n\n    return this;\n  }\n\n}\n//# sourceMappingURL=spherical-coordinates.js.map","import Matrix4 from './matrix4';\nimport Vector3 from './vector3';\nimport Euler from './euler';\nexport default class Pose {\n  constructor({\n    x = 0,\n    y = 0,\n    z = 0,\n    roll = 0,\n    pitch = 0,\n    yaw = 0,\n    position = undefined,\n    orientation = undefined\n  } = {}) {\n    if (Array.isArray(position) && position.length === 3) {\n      this.position = new Vector3(position);\n    } else {\n      this.position = new Vector3(x, y, z);\n    }\n\n    if (Array.isArray(orientation) && orientation.length === 4) {\n      this.orientation = new Euler(orientation, orientation[3]);\n    } else {\n      this.orientation = new Euler(roll, pitch, yaw, Euler.RollPitchYaw);\n    }\n  }\n\n  get x() {\n    return this.position.x;\n  }\n\n  set x(value) {\n    this.position.x = value;\n  }\n\n  get y() {\n    return this.position.y;\n  }\n\n  set y(value) {\n    this.position.y = value;\n  }\n\n  get z() {\n    return this.position.z;\n  }\n\n  set z(value) {\n    this.position.z = value;\n  }\n\n  get roll() {\n    return this.orientation.roll;\n  }\n\n  set roll(value) {\n    this.orientation.roll = value;\n  }\n\n  get pitch() {\n    return this.orientation.pitch;\n  }\n\n  set pitch(value) {\n    this.orientation.pitch = value;\n  }\n\n  get yaw() {\n    return this.orientation.yaw;\n  }\n\n  set yaw(value) {\n    this.orientation.yaw = value;\n  }\n\n  getPosition() {\n    return this.position;\n  }\n\n  getOrientation() {\n    return this.orientation;\n  }\n\n  equals(pose) {\n    if (!pose) {\n      return false;\n    }\n\n    return this.position.equals(pose.position) && this.orientation.equals(pose.orientation);\n  }\n\n  exactEquals(pose) {\n    if (!pose) {\n      return false;\n    }\n\n    return this.position.exactEquals(pose.position) && this.orientation.exactEquals(pose.orientation);\n  }\n\n  getTransformationMatrix() {\n    const sr = Math.sin(this.roll);\n    const sp = Math.sin(this.pitch);\n    const sw = Math.sin(this.yaw);\n    const cr = Math.cos(this.roll);\n    const cp = Math.cos(this.pitch);\n    const cw = Math.cos(this.yaw);\n    const matrix = new Matrix4().setRowMajor(cw * cp, -sw * cr + cw * sp * sr, sw * sr + cw * sp * cr, this.x, sw * cp, cw * cr + sw * sp * sr, -cw * sr + sw * sp * cr, this.y, -sp, cp * sr, cp * cr, this.z, 0, 0, 0, 1);\n    return matrix;\n  }\n\n  getTransformationMatrixFromPose(pose) {\n    return new Matrix4().multiplyRight(this.getTransformationMatrix()).multiplyRight(pose.getTransformationMatrix().invert());\n  }\n\n  getTransformationMatrixToPose(pose) {\n    return new Matrix4().multiplyRight(pose.getTransformationMatrix()).multiplyRight(this.getTransformationMatrix().invert());\n  }\n\n}\n//# sourceMappingURL=pose.js.map","import type {LoaderContext, LoaderOptions, Loader} from '@loaders.gl/loader-utils';\nimport {compareArrayBuffers} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {isBlob} from '../../javascript-utils/is-type';\n\nconst EXT_PATTERN = /\\.([^.]+)$/;\n\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport async function selectLoader(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<Loader | null> {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // First make a sync attempt, disabling exceptions\n  let loader = selectLoaderSync(data, loaders, {...options, nothrow: true}, context);\n  if (loader) {\n    return loader;\n  }\n\n  // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n  // to see if we can detect by initial content\n  if (isBlob(data)) {\n    data = await (data as Blob).slice(0, 10).arrayBuffer();\n    loader = selectLoaderSync(data, loaders, options, context);\n  }\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport function selectLoaderSync(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[] | Loader = [],\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Loader | null {\n  if (!validHTTPResponse(data)) {\n    return null;\n  }\n\n  // eslint-disable-next-line complexity\n  // if only a single loader was provided (not as array), force its use\n  // TODO - Should this behavior be kept and documented?\n  if (loaders && !Array.isArray(loaders)) {\n    // TODO - remove support for legacy loaders\n    return normalizeLoader(loaders);\n  }\n\n  // Build list of candidate loaders that will be searched in order for a match\n  let candidateLoaders: Loader[] = [];\n  // First search supplied loaders\n  if (loaders) {\n    candidateLoaders = candidateLoaders.concat(loaders);\n  }\n  // Then fall back to registered loaders\n  if (!options?.ignoreRegisteredLoaders) {\n    candidateLoaders.push(...getRegisteredLoaders());\n  }\n\n  // TODO - remove support for legacy loaders\n  normalizeLoaders(candidateLoaders);\n\n  const loader = selectLoaderInternal(data, candidateLoaders, options, context);\n\n  // no loader available\n  if (!loader && !options?.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n/** Implements loaders selection logic */\nfunction selectLoaderInternal(\n  data: Response | Blob | ArrayBuffer | string,\n  loaders: Loader[],\n  options?: LoaderOptions,\n  context?: LoaderContext\n) {\n  const {url, type} = getResourceUrlAndType(data);\n\n  const testUrl = url || context?.url;\n\n  let loader: Loader | null = null;\n\n  // if options.mimeType is supplied, it takes precedence\n  if (options?.mimeType) {\n    loader = findLoaderByMIMEType(loaders, options?.mimeType);\n  }\n  // Look up loader by url\n  loader = loader || findLoaderByUrl(loaders, testUrl);\n  // Look up loader by mime type\n  loader = loader || findLoaderByMIMEType(loaders, type);\n  // Look for loader via initial bytes (Note: not always accessible (e.g. Response, stream, async iterator)\n  loader = loader || findLoaderByInitialBytes(loaders, data);\n  // Look up loader by fallback mime type\n  loader = loader || findLoaderByMIMEType(loaders, options?.fallbackMimeType);\n\n  return loader;\n}\n\n/** Check HTTP Response */\nfunction validHTTPResponse(data: any): boolean {\n  // HANDLE HTTP status\n  if (data instanceof Response) {\n    // 204 - NO CONTENT. This handles cases where e.g. a tile server responds with 204 for a missing tile\n    if (data.status === 204) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getNoValidLoaderMessage(data): string {\n  const {url, type} = getResourceUrlAndType(data);\n\n  let message = 'No valid loader found';\n  if (data) {\n    message += ` data: \"${getFirstCharacters(data)}\", contentType: \"${type}\"`;\n  }\n  if (url) {\n    message += ` url: ${url}`;\n  }\n  return message;\n}\n\nfunction normalizeLoaders(loaders: Loader[]): void {\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n  }\n}\n\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders: Loader[], url?: string): Loader | null {\n  // Get extension\n  const match = url && EXT_PATTERN.exec(url);\n  const extension = match && match[1];\n  return extension ? findLoaderByExtension(loaders, extension) : null;\n}\n\nfunction findLoaderByExtension(loaders: Loader[], extension: string): Loader | null {\n  extension = extension.toLowerCase();\n\n  for (const loader of loaders) {\n    for (const loaderExtension of loader.extensions) {\n      if (loaderExtension.toLowerCase() === extension) {\n        return loader;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByMIMEType(loaders, mimeType) {\n  for (const loader of loaders) {\n    if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n      return loader;\n    }\n\n    // Support referring to loaders using the \"unregistered tree\"\n    // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n    if (mimeType === `application/x.${loader.id}`) {\n      return loader;\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByInitialBytes(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  for (const loader of loaders) {\n    if (typeof data === 'string') {\n      if (testDataAgainstText(data, loader)) {\n        return loader;\n      }\n    } else if (ArrayBuffer.isView(data)) {\n      // Typed Arrays can have offsets into underlying buffer\n      if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n        return loader;\n      }\n    } else if (data instanceof ArrayBuffer) {\n      const byteOffset = 0;\n      if (testDataAgainstBinary(data, byteOffset, loader)) {\n        return loader;\n      }\n    }\n    // TODO Handle streaming case (requires creating a new AsyncIterator)\n  }\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  if (loader.testText) {\n    return loader.testText(data);\n  }\n\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => data.startsWith(test));\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some((test) => testBinary(data, byteOffset, loader, test));\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (typeof test) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n      const magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data, length = 5) {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL, GLType} from '@loaders.gl/math';\n\n// Reference:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/1de96d087f0b17575eb1a3f736407b348c765d59/Source/Scene/Cesium3DTileFeatureTable.js\nexport default class Tile3DFeatureTable {\n  constructor(featureTableJson, featureTableBinary) {\n    this.json = featureTableJson;\n    this.buffer = featureTableBinary;\n    this.featuresLength = 0;\n    this._cachedTypedArrays = {};\n  }\n\n  getExtension(extensionName) {\n    return this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  hasProperty(propertyName) {\n    return Boolean(this.json[propertyName]);\n  }\n\n  getGlobalProperty(propertyName, componentType = GL.UNSIGNED_INT, componentLength = 1) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        1,\n        jsonValue.byteOffset\n      );\n    }\n\n    return jsonValue;\n  }\n\n  getPropertyArray(propertyName, componentType, componentLength) {\n    const jsonValue = this.json[propertyName];\n\n    if (jsonValue && Number.isFinite(jsonValue.byteOffset)) {\n      if ('componentType' in jsonValue) {\n        componentType = GLType.fromName(jsonValue.componentType);\n      }\n      return this._getTypedArrayFromBinary(\n        propertyName,\n        componentType,\n        componentLength,\n        this.featuresLength,\n        jsonValue.byteOffset\n      );\n    }\n\n    return this._getTypedArrayFromArray(propertyName, componentType, jsonValue);\n  }\n\n  getProperty(propertyName, componentType, componentLength, featureId, result) {\n    const jsonValue = this.json[propertyName];\n    if (!jsonValue) {\n      return jsonValue;\n    }\n\n    const typedArray = this.getPropertyArray(propertyName, componentType, componentLength);\n\n    if (componentLength === 1) {\n      return typedArray[featureId];\n    }\n\n    for (let i = 0; i < componentLength; ++i) {\n      result[i] = typedArray[componentLength * featureId + i];\n    }\n\n    return result;\n  }\n\n  // HELPERS\n\n  _getTypedArrayFromBinary(propertyName, componentType, componentLength, count, byteOffset) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(\n        componentType,\n        this.buffer.buffer,\n        this.buffer.byteOffset + byteOffset,\n        count * componentLength\n      );\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n\n  _getTypedArrayFromArray(propertyName, componentType, array) {\n    const cachedTypedArrays = this._cachedTypedArrays;\n    let typedArray = cachedTypedArrays[propertyName];\n    if (!typedArray) {\n      typedArray = GLType.createTypedArray(componentType, array);\n      cachedTypedArrays[propertyName] = typedArray;\n    }\n    return typedArray;\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nconst SIZEOF_UINT32 = 4;\n\n/* PARSE FIXED HEADER:\nPopulates\n  magic, // identifies type of tile\n  type, // String version of magic\n  version,\n  byteLength\n */\nexport function parse3DTileHeaderSync(tile, arrayBuffer, byteOffset = 0) {\n  const view = new DataView(arrayBuffer);\n\n  tile.magic = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.version = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.byteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  // TODO - move version check into each tile parser?\n  if (tile.version !== 1) {\n    throw new Error(`3D Tile Version ${tile.version} not supported`);\n  }\n\n  return byteOffset; // Indicates where the parsing ended\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import type {ImageType, ImageTypeEnum, ImageDataType} from '../../types';\n\nexport function isImage(image: ImageType): boolean {\n  return Boolean(getImageTypeOrNull(image));\n}\n\nexport function deleteImage(image: ImageType): void {\n  switch (getImageType(image)) {\n    case 'imagebitmap':\n      (image as ImageBitmap).close();\n      break;\n    default:\n    // Nothing to do for images and image data objects\n  }\n}\n\nexport function getImageType(image: ImageType): ImageTypeEnum {\n  const format = getImageTypeOrNull(image);\n  if (!format) {\n    throw new Error('Not an image');\n  }\n  return format;\n}\n\nexport function getImageSize(image: ImageType): {width: number; height: number} {\n  return getImageData(image);\n}\n\nexport function getImageData(image: ImageType): ImageDataType | ImageData {\n  switch (getImageType(image)) {\n    case 'data':\n      return image as unknown as ImageData;\n\n    case 'image':\n    case 'imagebitmap':\n      // Extract the image data from the image via a canvas\n      const canvas = document.createElement('canvas');\n      // TODO - reuse the canvas?\n      const context = canvas.getContext('2d');\n      if (!context) {\n        throw new Error('getImageData');\n      }\n      // @ts-ignore\n      canvas.width = image.width;\n      // @ts-ignore\n      canvas.height = image.height;\n      // @ts-ignore\n      context.drawImage(image, 0, 0);\n      // @ts-ignore\n      return context.getImageData(0, 0, image.width, image.height);\n\n    default:\n      throw new Error('getImageData');\n  }\n}\n\n// PRIVATE\n\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n  if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    return 'imagebitmap';\n  }\n  if (typeof Image !== 'undefined' && image instanceof Image) {\n    return 'image';\n  }\n  if (image && typeof image === 'object' && image.data && image.width && image.height) {\n    return 'data';\n  }\n  return null;\n}\n","// HELPER ENCODERS\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function encode3DTileHeader(tile, dataView, byteOffset) {\n  const HEADER_SIZE = 12;\n\n  if (!dataView) {\n    return byteOffset + HEADER_SIZE;\n  }\n\n  const {magic, version = 1, byteLength = 12} = tile;\n\n  assert(Array.isArray(magic) && Number.isFinite(version) && Number.isFinite(byteLength));\n\n  dataView.setUint8(byteOffset + 0, magic[0]);\n  dataView.setUint8(byteOffset + 1, magic[1]);\n  dataView.setUint8(byteOffset + 2, magic[2]);\n  dataView.setUint8(byteOffset + 3, magic[3]);\n  dataView.setUint32(byteOffset + 4, version, true); // version\n  dataView.setUint32(byteOffset + 8, byteLength, true); // byteLength\n\n  byteOffset += HEADER_SIZE;\n\n  return byteOffset;\n}\n\n// Bytelength is sometimes only known at the end of writing a tile\nexport function encode3DTileByteLength(dataView, byteOffsetTileStart, byteLength) {\n  if (!dataView) {\n    return;\n  }\n\n  dataView.setUint32(byteOffsetTileStart + 8, byteLength, true); // byteLength\n}\n","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport { config } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class Matrix extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  get RANK() {\n    assert(false);\n    return 0;\n  }\n\n  toString() {\n    let string = '[';\n\n    if (config.printRowMajor) {\n      string += 'row-major:';\n\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += \" \".concat(this[col * this.RANK + row]);\n        }\n      }\n    } else {\n      string += 'column-major:';\n\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += \" \".concat(this[i]);\n      }\n    }\n\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n\n    return this;\n  }\n\n}\n//# sourceMappingURL=matrix.js.map","// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_: {[key: string]: any} = globals.self || globals.window || globals.global || {};\nconst window_: {[key: string]: any} = globals.window || globals.self || globals.global || {};\nconst global_: {[key: string]: any} = globals.global || globals.self || globals.window || {};\nconst document_: {[key: string]: any} = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser: boolean =\n  // @ts-ignore process.browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running on a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n/** true if running on a mobile device */\nexport const isMobile: boolean =\n  typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","import {assert} from '../env-utils/assert';\nimport {getLoadableWorkerURL} from '../worker-utils/get-loadable-worker-url';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst NOOP = () => {};\n\nexport type WorkerThreadProps = {\n  name: string;\n  source?: string;\n  url?: string;\n};\n\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n  readonly name: string;\n  readonly source: string | undefined;\n  readonly url: string | undefined;\n  terminated: boolean = false;\n  worker: Worker;\n  onMessage: (message: any) => void;\n  onError: (error: Error) => void;\n\n  private _loadableURL: string = '';\n\n  static isSupported(): boolean {\n    return typeof Worker !== 'undefined';\n  }\n\n  constructor(props: WorkerThreadProps) {\n    const {name, source, url} = props;\n    assert(source || url); // Either source or url must be defined\n    this.name = name;\n    this.source = source;\n    this.url = url;\n    this.onMessage = NOOP;\n    this.onError = (error) => console.log(error); // eslint-disable-line\n\n    this.worker = this._createBrowserWorker();\n  }\n\n  /**\n   * Terminate this worker thread\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    this.onMessage = NOOP;\n    this.onError = NOOP;\n    // @ts-ignore\n    this.worker.terminate();\n    this.terminated = true;\n  }\n\n  get isRunning() {\n    return Boolean(this.onMessage);\n  }\n\n  /**\n   * Send a message to this worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   * @param transferList If not supplied, calculated automatically by traversing data\n   */\n  postMessage(data: any, transferList?: any[]): void {\n    transferList = transferList || getTransferList(data);\n    // @ts-ignore\n    this.worker.postMessage(data, transferList);\n  }\n\n  // PRIVATE\n\n  /**\n   * Generate a standard Error from an ErrorEvent\n   * @param {ErrorEvent} event\n   */\n  _getErrorFromErrorEvent(event) {\n    // Note Error object does not have the expected fields if loading failed completely\n    // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n    // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n    let message = 'Failed to load ';\n    message += `worker ${this.name}. `;\n    if (event.message) {\n      message += `${event.message} in `;\n    }\n    // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n    // message += hasFilename ? event.filename : this.source.slice(0, 100);\n    if (event.lineno) {\n      message += `:${event.lineno}:${event.colno}`;\n    }\n    return new Error(message);\n  }\n\n  /**\n   * Creates a worker thread on the browser\n   */\n  _createBrowserWorker() {\n    this._loadableURL = getLoadableWorkerURL({source: this.source, url: this.url});\n    const worker = new Worker(this._loadableURL, {name: this.name});\n\n    worker.onmessage = (event) => {\n      if (!event.data) {\n        this.onError(new Error('No data received'));\n      } else {\n        this.onMessage(event.data);\n      }\n    };\n    // This callback represents an uncaught exception in the worker thread\n    worker.onerror = (error) => {\n      this.onError(this._getErrorFromErrorEvent(error));\n      this.terminated = true;\n    };\n    // TODO - not clear when this would be called, for now just log in case it happens\n    worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n\n    return worker;\n  }\n}\n","// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(\n  object: any,\n  recursive: boolean = true,\n  transfers?: Set<any>\n): Transferable[] {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (ArrayBuffer.isView(object)) {\n    // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n    // Do not iterate through the content in this case\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {createBoundingVolume} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getI3ScreenSize} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport TilesetTraverser from './traversers/tileset-traverser';\n\n// Note: circular dependency\nimport type Tileset3D from './tileset-3d';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent TileHeader instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type TileHeaderProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: TileHeader;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport default class TileHeader {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: TileHeader;\n  refine: number;\n  type: string;\n  contentUrl: string;\n  lodMetricType: string;\n  lodMetricValue: number;\n  boundingVolume: any;\n  content: any;\n  contentState: any;\n  gpuMemoryUsageInBytes: number;\n  children: TileHeader[];\n  depth: number;\n  viewportIds: any[];\n  transform: Matrix4;\n\n  // Container to store application specific data\n  userData: {[key: string]: any};\n  computedTransform: any;\n  hasEmptyContent: boolean;\n  hasTilesetContent: boolean;\n\n  traverser: object;\n\n  private _cacheNode: any;\n  private _frameNumber: any;\n  // TODO i3s specific, needs to remove\n  private _lodJudge: any;\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any;\n  private _expiredContent: any;\n  private _shouldRefine: boolean;\n\n  // Members this are updated every frame for tree traversal and rendering optimizations:\n  private _distanceToCamera: number;\n  private _centerZDepth: number;\n  private _screenSpaceError: number;\n  private _visibilityPlaneMask: any;\n  private _visible?: boolean;\n  private _inRequestVolume: boolean;\n\n  private _stackLength: number;\n  private _selectionDepth: number;\n\n  private _touchedFrame: number;\n  private _visitedFrame: number;\n  private _selectedFrame: number;\n  private _requestedFrame: number;\n\n  private _priority: number;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4;\n\n  /**\n   * @constructs\n   * Create a TileHeader instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent TileHeader instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: TileHeader,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    // The error, in meters, introduced if this tile is rendered and its children are not.\n    this.lodMetricType = 'geometricError';\n    this.lodMetricValue = 0;\n\n    // Specifies the type of refine that is used when traversing this tile for rendering.\n    this.boundingVolume = null;\n\n    // The tile's content.  This represents the actual tile's payload,\n    // not the content's metadata in the tileset JSON file.\n    this.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    this.gpuMemoryUsageInBytes = 0;\n\n    // The tile's children - an array of Tile3D objects.\n    this.children = [];\n\n    this.hasEmptyContent = false;\n    this.hasTilesetContent = false;\n\n    this.depth = 0;\n    this.viewportIds = [];\n\n    // Container to store application specific data\n    this.userData = {};\n\n    // PRIVATE MEMBERS\n    this._priority = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n    this._screenSpaceError = 0;\n\n    this._cacheNode = null;\n    this._frameNumber = null;\n    this._cacheNode = null;\n\n    this.traverser = new TilesetTraverser({});\n    this._shouldRefine = false;\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n    this._initialTransform = new Matrix4();\n    this.transform = new Matrix4();\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    // TODO i3s specific, needs to remove\n    this._lodJudge = null;\n\n    // TODO Cesium 3d tiles specific\n    this._expireDate = null;\n    this._expiredContent = null;\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getI3ScreenSize(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * In 'REPLACE' and 'Base Traversal' mode, all child tiles have to be loaded and displayed,\n     * including ones outide of the camera frustum, so that we can hide the parent tile.\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          tile: this.header,\n          tileset: this.tileset.tileset,\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n","// FILE READING AND WRITING\nexport {fetchFile} from './lib/fetch/fetch-file';\n\nexport {readArrayBuffer} from './lib/fetch/read-array-buffer';\nexport {readFileSync} from './lib/fetch/read-file';\nexport {writeFile, writeFileSync} from './lib/fetch/write-file';\n\n// CONFIGURATION\nexport {setLoaderOptions} from './lib/api/set-loader-options';\nexport {registerLoaders} from './lib/api/register-loaders';\nexport {selectLoader, selectLoaderSync} from './lib/api/select-loader';\n\n// LOADING (READING + PARSING)\nexport {parse} from './lib/api/parse';\nexport {parseSync} from './lib/api/parse-sync';\nexport {parseInBatches} from './lib/api/parse-in-batches';\n\nexport {load} from './lib/api/load';\nexport {loadInBatches} from './lib/api/load-in-batches';\n\n// ENCODING (ENCODING AND WRITING)\nexport {encode, encodeSync, encodeInBatches, encodeText, encodeURLtoURL} from './lib/api/encode';\nexport {save, saveSync} from './lib/api/save';\n\n// CORE UTILS SHARED WITH LOADERS (RE-EXPORTED FROM LOADER-UTILS)\nexport {setPathPrefix, getPathPrefix, resolvePath} from '@loaders.gl/loader-utils';\nexport {RequestScheduler} from '@loaders.gl/loader-utils';\n\n// ITERATOR UTILS\nexport {makeIterator} from './iterators/make-iterator/make-iterator';\nexport {makeStream} from './iterators/make-stream/make-stream';\nexport {makeDOMStream} from './iterators/make-stream/make-dom-stream';\nexport {makeNodeStream} from './iterators/make-stream/make-node-stream';\n\n// CORE LOADERS\nexport {NullWorkerLoader, NullLoader} from './null-loader';\nexport {JSONLoader} from '@loaders.gl/loader-utils';\n\n// EXPERIMENTAL\nexport {default as _fetchProgress} from './lib/progress/fetch-progress';\nexport {default as _BrowserFileSystem} from './lib/filesystems/browser-filesystem';\n\n// FOR TESTING\nexport {_unregisterLoaders} from './lib/api/register-loaders';\n\n//\n// TODO - MOVE TO LOADER-UTILS AND DEPRECATE IN CORE?\n//\n\nexport {isBrowser, isWorker, self, window, global, document} from '@loaders.gl/loader-utils';\nexport {assert} from '@loaders.gl/loader-utils';\nexport {forEach, concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\n\nexport {\n  makeTextDecoderIterator,\n  makeTextEncoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from '@loaders.gl/loader-utils';\n\n// \"JAVASCRIPT\" UTILS - move to loader-utils?\nexport {\n  isPureObject,\n  isPromise,\n  isIterable,\n  isAsyncIterable,\n  isIterator,\n  isResponse,\n  isReadableStream,\n  isWritableStream\n} from './javascript-utils/is-type';\n","import {resolvePath} from '@loaders.gl/loader-utils';\nimport {makeResponse} from '../utils/response-utils';\n// import {getErrorMessageFromResponse} from './fetch-error-message';\n\n/**\n * fetch compatible function\n * Reads file data from:\n * - http/http urls\n * - data urls\n * - File/Blob objects\n * Leverages `@loaders.gl/polyfills` for Node.js support\n * Respects pathPrefix and file aliases\n */\nexport async function fetchFile(\n  url: string | Blob,\n  options?: RequestInit & {fetch?: RequestInit | Function}\n): Promise<Response> {\n  if (typeof url === 'string') {\n    url = resolvePath(url);\n\n    let fetchOptions: RequestInit = options as RequestInit;\n    if (options?.fetch && typeof options?.fetch !== 'function') {\n      fetchOptions = options.fetch;\n    }\n\n    return await fetch(url, fetchOptions);\n  }\n\n  return await makeResponse(url);\n}\n","// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {assert, validateWorkerVersion} from '@loaders.gl/worker-utils';\nimport {parseWithWorker, canParseWithWorker} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromData} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parse(\n  data: DataType | Promise<DataType>,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  assert(!context || typeof context === 'object'); // parse no longer accepts final url\n\n  // Signature: parse(data, options, context | url)\n  // Uses registered loaders\n  if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  // todo hacky type cast\n  const loader = await selectLoader(data as ArrayBuffer, candidateLoaders, options);\n  // Note: if no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders, url);\n\n  // Get a context (if already present, will be unchanged)\n  context = getLoaderContext({url, parse, loaders: candidateLoaders}, options, context);\n\n  return await parseWithLoader(loader, data, options, context);\n}\n\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n  validateWorkerVersion(loader);\n\n  data = await getArrayBufferOrStringFromData(data, loader, options);\n\n  // First check for synchronous text parser, wrap results in promises\n  if (loader.parseTextSync && typeof data === 'string') {\n    options.dataType = 'text';\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n  if (canParseWithWorker(loader, options)) {\n    return await parseWithWorker(loader, data, options, context, parse);\n  }\n\n  // Check for asynchronous parser\n  if (loader.parseText && typeof data === 'string') {\n    return await loader.parseText(data, options, context, loader);\n  }\n\n  if (loader.parse) {\n    return await loader.parse(data, options, context, loader);\n  }\n\n  // This should not happen, all sync loaders should also offer `parse` function\n  assert(!loader.parseSync);\n\n  // TBD - If asynchronous parser not available, return null\n  throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n","import type {\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  Loader,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\nimport {\n  isResponse,\n  isReadableStream,\n  isAsyncIterable,\n  isIterable,\n  isIterator,\n  isBlob,\n  isBuffer\n} from '../../javascript-utils/is-type';\nimport {makeIterator} from '../../iterators/make-iterator/make-iterator';\nimport {checkResponse, makeResponse} from '../utils/response-utils';\n\nconst ERR_DATA = 'Cannot convert supplied data type';\n\n// eslint-disable-next-line complexity\nexport function getArrayBufferOrStringFromDataSync(\n  data: SyncDataType,\n  loader: Loader,\n  options: LoaderOptions\n): ArrayBuffer | string {\n  if (loader.text && typeof data === 'string') {\n    return data;\n  }\n\n  if (isBuffer(data)) {\n    // @ts-ignore\n    data = data.buffer;\n  }\n\n  if (data instanceof ArrayBuffer) {\n    const arrayBuffer = data;\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(arrayBuffer);\n    }\n    return arrayBuffer;\n  }\n\n  // We may need to handle offsets\n  if (ArrayBuffer.isView(data)) {\n    // TextDecoder is invoked on typed arrays and will handle offsets\n    if (loader.text && !loader.binary) {\n      const textDecoder = new TextDecoder('utf8');\n      return textDecoder.decode(data);\n    }\n\n    let arrayBuffer = data.buffer;\n\n    // Since we are returning the underlying arrayBuffer, we must create a new copy\n    // if this typed array / Buffer is a partial view into the ArryayBuffer\n    // TODO - this is a potentially unnecessary copy\n    const byteLength = data.byteLength || data.length;\n    if (data.byteOffset !== 0 || byteLength !== arrayBuffer.byteLength) {\n      // console.warn(`loaders.gl copying arraybuffer of length ${byteLength}`);\n      arrayBuffer = arrayBuffer.slice(data.byteOffset, data.byteOffset + byteLength);\n    }\n    return arrayBuffer;\n  }\n\n  throw new Error(ERR_DATA);\n}\n\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(\n  data: DataType,\n  loader: Loader,\n  options: LoaderOptions\n): Promise<ArrayBuffer | string> {\n  const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n  if (typeof data === 'string' || isArrayBuffer) {\n    return getArrayBufferOrStringFromDataSync(data as string | ArrayBuffer, loader, options);\n  }\n\n  // Blobs and files are FileReader compatible\n  if (isBlob(data)) {\n    data = await makeResponse(data);\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    await checkResponse(response);\n    return loader.binary ? await response.arrayBuffer() : await response.text();\n  }\n\n  if (isReadableStream(data)) {\n    // @ts-expect-error TS2559 options type\n    data = makeIterator(data as ReadableStream, options);\n  }\n\n  if (isIterable(data) || isAsyncIterable(data)) {\n    // Assume arrayBuffer iterator - attempt to concatenate\n    return concatenateArrayBuffersAsync(data as AsyncIterable<ArrayBuffer>);\n  }\n\n  throw new Error(ERR_DATA);\n}\n\nexport async function getAsyncIterableFromData(\n  data: BatchableDataType,\n  options: LoaderOptions\n): Promise<AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>> {\n  if (isIterator(data)) {\n    return data as AsyncIterable<ArrayBuffer>;\n  }\n\n  if (isResponse(data)) {\n    const response = data as Response;\n    // Note Since this function is not async, we currently can't load error message, just status\n    await checkResponse(response);\n    // TODO - bug in polyfill, body can be a Promise under Node.js\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const body = await response.body;\n    // TODO - body can be null?\n    return makeIterator(body as ReadableStream<Uint8Array>, options as any);\n  }\n\n  if (isBlob(data) || isReadableStream(data)) {\n    return makeIterator(data as Blob | ReadableStream, options as any);\n  }\n\n  if (isAsyncIterable(data)) {\n    return data[Symbol.asyncIterator]();\n  }\n\n  return getIterableFromData(data);\n}\n\nexport async function getReadableStream(data: BatchableDataType): Promise<ReadableStream> {\n  if (isReadableStream(data)) {\n    return data as ReadableStream;\n  }\n  if (isResponse(data)) {\n    // @ts-ignore\n    return data.body;\n  }\n  const response = await makeResponse(data);\n  // @ts-ignore\n  return response.body;\n}\n\n// HELPERS\n\nfunction getIterableFromData(data) {\n  // generate an iterator that emits a single chunk\n  if (ArrayBuffer.isView(data)) {\n    return (function* oneChunk() {\n      yield data.buffer;\n    })();\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return (function* oneChunk() {\n      yield data;\n    })();\n  }\n\n  if (isIterator(data)) {\n    return data;\n  }\n\n  if (isIterable(data)) {\n    return data[Symbol.iterator]();\n  }\n\n  throw new Error(ERR_DATA);\n}\n","import type {Loader, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {getFetchFunction} from './option-utils';\n\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(\n  context: Omit<LoaderContext, 'fetch'> & Partial<Pick<LoaderContext, 'fetch'>>,\n  options?: LoaderOptions,\n  previousContext: LoaderContext | null = null\n): LoaderContext {\n  // For recursive calls, we already have a context\n  // TODO - add any additional loaders to context?\n  if (previousContext) {\n    return previousContext;\n  }\n\n  const resolvedContext: LoaderContext = {\n    fetch: getFetchFunction(options, context),\n    ...context\n  };\n\n  // Recursive loading does not use single loader\n  if (!Array.isArray(resolvedContext.loaders)) {\n    resolvedContext.loaders = null;\n  }\n\n  return resolvedContext;\n}\n\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(\n  loaders: Loader[] | Loader | undefined,\n  context?: LoaderContext\n) {\n  // A single non-array loader is force selected, but only on top-level (context === null)\n  if (!context && loaders && !Array.isArray(loaders)) {\n    return loaders;\n  }\n\n  // Create a merged list\n  let candidateLoaders;\n  if (loaders) {\n    candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n  }\n  if (context && context.loaders) {\n    const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n    candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n  }\n  // If no loaders, return null to look in globally registered loaders\n  return candidateLoaders && candidateLoaders.length ? candidateLoaders : null;\n}\n","/*\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  TimeMicrosecond,\n  TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from 'apache-arrow';\n*/\nexport {default as Schema} from './impl/schema';\nexport {default as Field} from './impl/field';\nexport {Type} from './impl/type';\nexport {\n  DataType,\n  Null,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Binary,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeSecond,\n  TimeMillisecond,\n  // TimeMicrosecond,\n  // TimeNanosecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './impl/type';\n","/**\n * Throws error message\n * @param condition checks if an attribute equal to condition\n * @param message error message\n */\nexport function assert(condition: any, message?: any): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion failed. ${message}`);\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\nimport {createTypedArrayFromAccessor} from './helpers/tile-3d-accessor-utils';\nimport {initializeHierarchy, traverseHierarchy} from './tile-3d-batch-table-hierarchy';\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\nconst clone = (x, y) => x;\n\n// These top level fields in the batch table json are not properties\nconst IGNORED_PROPERTY_FIELDS = {\n  HIERARCHY: true, // Deprecated HIERARCHY property\n  extensions: true,\n  extras: true\n};\n\n// The size of this array equals the maximum instance count among all loaded tiles, which has the potential to be large.\nexport default class Tile3DBatchTableParser {\n  constructor(json, binary, featureCount, options = {}) {\n    assert(featureCount >= 0);\n    this.json = json || {};\n    this.binary = binary;\n    this.featureCount = featureCount;\n\n    this._extensions = this.json?.extensions || {};\n\n    // Copy all top-level property fields from the json object, ignoring special fields\n    this._properties = {};\n    for (const propertyName in this.json) {\n      if (!IGNORED_PROPERTY_FIELDS[propertyName]) {\n        this._properties[propertyName] = this.json[propertyName];\n      }\n    }\n\n    this._binaryProperties = this._initializeBinaryProperties();\n\n    // TODO: hierarchy support is only partially implemented and not tested\n    if (options['3DTILES_batch_table_hierarchy']) {\n      this._hierarchy = initializeHierarchy(this, this.json, this.binary);\n    }\n  }\n\n  getExtension(extensionName) {\n    return this.json && this.json.extensions && this.json.extensions[extensionName];\n  }\n\n  memorySizeInBytes() {\n    return 0;\n  }\n\n  isClass(batchId, className) {\n    this._checkBatchId(batchId);\n    assert(typeof className === 'string', className);\n\n    // extension: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      // PERFORMANCE_IDEA : cache results in the ancestor classes\n      //   to speed up this check if this area becomes a hotspot\n      // PERFORMANCE_IDEA : treat class names as integers for faster comparisons\n      const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n        const classId = hierarchy.classIds[instanceIndex];\n        const instanceClass = hierarchy.classes[classId];\n        return instanceClass.name === className;\n      });\n      return defined(result);\n    }\n\n    return false;\n  }\n\n  isExactClass(batchId, className) {\n    assert(typeof className === 'string', className);\n\n    return this.getExactClassName(batchId) === className;\n  }\n\n  getExactClassName(batchId) {\n    this._checkBatchId(batchId);\n\n    // extension: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      const classId = this._hierarchy.classIds[batchId];\n      const instanceClass = this._hierarchy.classes[classId];\n      return instanceClass.name;\n    }\n\n    return undefined;\n  }\n\n  hasProperty(batchId, name) {\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    return defined(this._properties[name]) || this._hasPropertyInHierarchy(batchId, name);\n  }\n\n  getPropertyNames(batchId, results) {\n    this._checkBatchId(batchId);\n\n    results = defined(results) ? results : [];\n    results.length = 0;\n\n    const propertyNames = Object.keys(this._properties);\n    results.push(...propertyNames);\n\n    if (this._hierarchy) {\n      this._getPropertyNamesInHierarchy(batchId, results);\n    }\n\n    return results;\n  }\n\n  getProperty(batchId, name) {\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    if (this._binaryProperties) {\n      const binaryProperty = this._binaryProperties[name];\n      if (defined(binaryProperty)) {\n        return this._getBinaryProperty(binaryProperty, batchId);\n      }\n    }\n\n    const propertyValues = this._properties[name];\n    if (defined(propertyValues)) {\n      return clone(propertyValues[batchId], true);\n    }\n\n    // EXTENSION: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      const hierarchyProperty = this._getHierarchyProperty(batchId, name);\n      if (defined(hierarchyProperty)) {\n        return hierarchyProperty;\n      }\n    }\n\n    return undefined;\n  }\n\n  setProperty(batchId, name, value) {\n    const featureCount = this.featureCount;\n\n    this._checkBatchId(batchId);\n    assert(typeof name === 'string', name);\n\n    if (this._binaryProperties) {\n      const binaryProperty = this._binaryProperties[name];\n      if (binaryProperty) {\n        this._setBinaryProperty(binaryProperty, batchId, value);\n        return;\n      }\n    }\n\n    // EXTENSION: 3DTILES_batch_table_hierarchy\n    if (this._hierarchy) {\n      if (this._setHierarchyProperty(this, batchId, name, value)) {\n        return;\n      }\n    }\n\n    let propertyValues = this._properties[name];\n    if (!defined(propertyValues)) {\n      // Property does not exist. Create it.\n      this._properties[name] = new Array(featureCount);\n      propertyValues = this._properties[name];\n    }\n\n    propertyValues[batchId] = clone(value, true);\n  }\n\n  // PRIVATE METHODS\n\n  _checkBatchId(batchId) {\n    const valid = batchId >= 0 && batchId < this.featureCount;\n    if (!valid) {\n      throw new Error(`batchId not in range [0, featureCount - 1].`);\n    }\n  }\n\n  _getBinaryProperty(binaryProperty, index) {\n    return binaryProperty.unpack(binaryProperty.typedArray, index);\n  }\n\n  _setBinaryProperty(binaryProperty, index, value) {\n    binaryProperty.pack(value, binaryProperty.typedArray, index);\n  }\n\n  _initializeBinaryProperties() {\n    let binaryProperties = null;\n    for (const name in this._properties) {\n      const property = this._properties[name];\n      const binaryProperty = this._initializeBinaryProperty(name, property);\n      // Store any information needed to access the binary data, including the typed array,\n      // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n      if (binaryProperty) {\n        binaryProperties = binaryProperties || {};\n        binaryProperties[name] = binaryProperty;\n      }\n    }\n    return binaryProperties;\n  }\n\n  _initializeBinaryProperty(name, property) {\n    if ('byteOffset' in property) {\n      // This is a binary property\n      const tile3DAccessor = property;\n\n      assert(this.binary, `Property ${name} requires a batch table binary.`);\n      assert(tile3DAccessor.type, `Property ${name} requires a type.`);\n\n      const accessor = createTypedArrayFromAccessor(\n        tile3DAccessor,\n        this.binary.buffer,\n        this.binary.byteOffset | 0,\n        this.featureCount\n      );\n\n      // Store any information needed to access the binary data, including the typed array,\n      // componentCount (e.g. a VEC4 would be 4), and the type used to pack and unpack (e.g. Cartesian4).\n      return {\n        typedArray: accessor.values,\n        componentCount: accessor.size,\n        unpack: accessor.unpacker,\n        pack: accessor.packer\n      };\n    }\n\n    return null;\n  }\n\n  //  EXTENSION SUPPORT: 3DTILES_batch_table_hierarchy\n\n  _hasPropertyInHierarchy(batchId, name) {\n    if (!this._hierarchy) {\n      return false;\n    }\n\n    const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instances = hierarchy.classes[classId].instances;\n      return defined(instances[name]);\n    });\n\n    return defined(result);\n  }\n\n  _getPropertyNamesInHierarchy(batchId, results) {\n    traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instances = hierarchy.classes[classId].instances;\n      for (const name in instances) {\n        if (instances.hasOwnProperty(name)) {\n          if (results.indexOf(name) === -1) {\n            results.push(name);\n          }\n        }\n      }\n    });\n  }\n\n  _getHierarchyProperty(batchId, name) {\n    return traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instanceClass = hierarchy.classes[classId];\n      const indexInClass = hierarchy.classIndexes[instanceIndex];\n      const propertyValues = instanceClass.instances[name];\n      if (defined(propertyValues)) {\n        if (defined(propertyValues.typedArray)) {\n          return this._getBinaryProperty(propertyValues, indexInClass);\n        }\n        return clone(propertyValues[indexInClass], true);\n      }\n      return null;\n    });\n  }\n\n  _setHierarchyProperty(batchTable, batchId, name, value) {\n    const result = traverseHierarchy(this._hierarchy, batchId, (hierarchy, instanceIndex) => {\n      const classId = hierarchy.classIds[instanceIndex];\n      const instanceClass = hierarchy.classes[classId];\n      const indexInClass = hierarchy.classIndexes[instanceIndex];\n      const propertyValues = instanceClass.instances[name];\n      if (defined(propertyValues)) {\n        assert(instanceIndex === batchId, `Inherited property \"${name}\" is read-only.`);\n        if (defined(propertyValues.typedArray)) {\n          this._setBinaryProperty(propertyValues, indexInClass, value);\n        } else {\n          propertyValues[indexInClass] = clone(value, true);\n        }\n        return true;\n      }\n      return false;\n    });\n    return defined(result);\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {getStringFromArrayBuffer} from './parse-utils';\n\nconst SIZEOF_UINT32 = 4;\nconst DEPRECATION_WARNING = `b3dm tile in legacy format.`;\n\n// eslint-disable-next-line max-statements\nexport function parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset) {\n  const view = new DataView(arrayBuffer);\n  let batchLength;\n\n  tile.header = tile.header || {};\n\n  let featureTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  let batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  // First legacy header format - [batchLength] [batchTableByteLength] ('batchTableJsonByteLength': JSON starts with a quotation mark or the glTF magic)\n  // Second legacy format - [batchTableJsonByteLength] [batchTableBinaryByteLength] [batchLength] (Second legacy format is similar as first but here we check 'batchTableBinaryByteLength' instead)\n  // Current header format - [featureTableJsonByteLength] [featureTableBinaryByteLength] [batchTableJsonByteLength] [batchTableBinaryByteLength]\n  // First byte will be 0x22 or 0x67. The minimum uint32 expected is 0x22000000 = 570425344 = 570MB.\n  if (batchTableJsonByteLength >= 570425344) {\n    byteOffset -= SIZEOF_UINT32 * 2;\n    batchLength = featureTableJsonByteLength;\n    batchTableJsonByteLength = featureTableBinaryByteLength;\n    batchTableBinaryByteLength = 0;\n    featureTableJsonByteLength = 0;\n    featureTableBinaryByteLength = 0;\n\n    console.warn(DEPRECATION_WARNING); // eslint-disable-line\n  } else if (batchTableBinaryByteLength >= 570425344) {\n    byteOffset -= SIZEOF_UINT32;\n    batchLength = batchTableJsonByteLength;\n    batchTableJsonByteLength = featureTableJsonByteLength;\n    batchTableBinaryByteLength = featureTableBinaryByteLength;\n    featureTableJsonByteLength = 0;\n    featureTableBinaryByteLength = 0;\n\n    console.warn(DEPRECATION_WARNING); // eslint-disable-line\n  }\n\n  tile.header.featureTableJsonByteLength = featureTableJsonByteLength;\n  tile.header.featureTableBinaryByteLength = featureTableBinaryByteLength;\n  tile.header.batchTableJsonByteLength = batchTableJsonByteLength;\n  tile.header.batchTableBinaryByteLength = batchTableBinaryByteLength;\n  tile.header.batchLength = batchLength;\n\n  return byteOffset;\n}\n\nexport function parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options) {\n  byteOffset = parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options);\n  byteOffset = parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options);\n  return byteOffset;\n}\n\nfunction parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options) {\n  const {featureTableJsonByteLength, featureTableBinaryByteLength, batchLength} = tile.header;\n\n  tile.featureTableJson = {\n    BATCH_LENGTH: batchLength || 0\n  };\n\n  if (featureTableJsonByteLength > 0) {\n    const featureTableString = getStringFromArrayBuffer(\n      arrayBuffer,\n      byteOffset,\n      featureTableJsonByteLength\n    );\n    tile.featureTableJson = JSON.parse(featureTableString);\n  }\n  byteOffset += featureTableJsonByteLength;\n\n  tile.featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n  byteOffset += featureTableBinaryByteLength;\n\n  /*\n  const featureTable = parseFeatureTable(featureTableJson, featureTableBinary);\n\n  const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n  featureTable.featuresLength = batchLength;\n  */\n\n  return byteOffset;\n}\n\nfunction parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options) {\n  const {batchTableJsonByteLength, batchTableBinaryByteLength} = tile.header;\n\n  if (batchTableJsonByteLength > 0) {\n    const batchTableString = getStringFromArrayBuffer(\n      arrayBuffer,\n      byteOffset,\n      batchTableJsonByteLength\n    );\n    tile.batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      tile.batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength);\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      tile.batchTableBinary = new Uint8Array(tile.batchTableBinary);\n\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  return byteOffset;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\nexport const isBrowser =\n  // @ts-ignore\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\nexport const isWorker = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n","// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\n\n// TODO: make these functions work for Node.js buffers?\n// Quarantine references to Buffer to prevent bundler from adding big polyfills\n// import {bufferToArrayBuffer} from '../node/buffer-to-array-buffer';\n// TODO - this should be handled in @loaders.gl/polyfills\n\n/** MIME type, width and height extracted from binary compressed image data */\nexport type BinaryImageMetadata = {\n  mimeType: string;\n  width: number;\n  height: number;\n};\n\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(\n  binaryData: DataView | ArrayBuffer\n): BinaryImageMetadata | null {\n  const dataView = toDataView(binaryData);\n  return (\n    getPngMetadata(dataView) ||\n    getJpegMetadata(dataView) ||\n    getGifMetadata(dataView) ||\n    getBmpMetadata(dataView)\n  );\n}\n\n// PNG\n\nfunction getPngMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the first 4 bytes of the PNG signature.\n  const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n  if (!isPng) {\n    return null;\n  }\n\n  // Extract size from a binary PNG file\n  return {\n    mimeType: 'image/png',\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\n// GIF\n\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check first 4 bytes of the GIF signature (\"GIF8\").\n  const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n  if (!isGif) {\n    return null;\n  }\n\n  // GIF is little endian.\n  return {\n    mimeType: 'image/gif',\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\n// BMP\n\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check magic number is valid (first 2 characters should be \"BM\").\n  // The mandatory bitmap file header is 14 bytes long.\n  const isBmp =\n    dataView.byteLength >= 14 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n    dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n\n  if (!isBmp) {\n    return null;\n  }\n\n  // BMP is little endian.\n  return {\n    mimeType: 'image/bmp',\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\n// JPEG\n\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n  const dataView = toDataView(binaryData);\n  // Check file contains the JPEG \"start of image\" (SOI) marker\n  // followed by another marker.\n  const isJpeg =\n    dataView.byteLength >= 3 &&\n    dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n    dataView.getUint8(2) === 0xff;\n\n  if (!isJpeg) {\n    return null;\n  }\n\n  const {tableMarkers, sofMarkers} = getJpegMarkers();\n\n  // Exclude the two byte SOI marker.\n  let i = 2;\n  while (i + 9 < dataView.byteLength) {\n    const marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    // The frame that contains the width and height of the JPEG image.\n    if (sofMarkers.has(marker)) {\n      return {\n        mimeType: 'image/jpeg',\n        height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n        width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n      };\n    }\n\n    // Miscellaneous tables/data preceding the frame header.\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    // Length includes size of length parameter but not the two byte header.\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  // Tables/misc header markers.\n  // DQT, DHT, DAC, DRI, COM, APP_n\n  const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n  for (let i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  // SOF markers and DHP marker.\n  // These markers are after tables/misc data.\n  const sofMarkers = new Set([\n    0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n    0xffcf, 0xffde\n  ]);\n\n  return {tableMarkers, sofMarkers};\n}\n\n// TODO - move into image module?\nfunction toDataView(data) {\n  if (data instanceof DataView) {\n    return data;\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer);\n  }\n\n  // TODO: make these functions work for Node.js buffers?\n  // if (bufferToArrayBuffer) {\n  //   data = bufferToArrayBuffer(data);\n  // }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data);\n  }\n  throw new Error('toDataView');\n}\n","import {assert} from '../utils/assert';\n\nconst TYPES = ['SCALAR', 'VEC2', 'VEC3', 'VEC4'];\n\ntype TypedArrayConstructor =\n  | Int8ArrayConstructor\n  | Uint8ArrayConstructor\n  | Int16ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Float32ArrayConstructor\n  | Float64ArrayConstructor;\n\nconst ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT: [TypedArrayConstructor, number][] = [\n  [Int8Array, 5120],\n  [Uint8Array, 5121],\n  [Int16Array, 5122],\n  [Uint16Array, 5123],\n  [Uint32Array, 5125],\n  [Float32Array, 5126],\n  [Float64Array, 5130]\n];\nconst ARRAY_TO_COMPONENT_TYPE = new Map<TypedArrayConstructor, number>(\n  ARRAY_CONSTRUCTOR_TO_WEBGL_CONSTANT\n);\n\nconst ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE = {\n  5120: 1,\n  5121: 1,\n  5122: 2,\n  5123: 2,\n  5125: 4,\n  5126: 4\n};\n\nconst ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n\nexport function getAccessorTypeFromSize(size) {\n  const type = TYPES[size - 1];\n  return type || TYPES[0];\n}\n\nexport function getComponentTypeFromArray(typedArray) {\n  const componentType = ARRAY_TO_COMPONENT_TYPE.get(typedArray.constructor);\n  if (!componentType) {\n    throw new Error('Illegal typed array');\n  }\n  return componentType;\n}\n\nexport function getAccessorArrayTypeAndLength(accessor, bufferView) {\n  const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n  const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n  const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[accessor.componentType];\n  const length = accessor.count * components;\n  const byteLength = accessor.count * components * bytesPerComponent;\n  assert(byteLength >= 0 && byteLength <= bufferView.byteLength);\n  return {ArrayType, length, byteLength};\n}\n","export const INTERSECTION = Object.freeze({\n  OUTSIDE: -1,\n  INTERSECTING: 0,\n  INSIDE: 1\n});\n//# sourceMappingURL=constants.js.map","import { Vector3 } from '@math.gl/core';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nexport default class AxisAlignedBoundingBox {\n  constructor(minimum = [0, 0, 0], maximum = [0, 0, 0], center = null) {\n    center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n    this.center = new Vector3(center);\n    this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n    this.minimum = new Vector3(minimum);\n    this.maximum = new Vector3(maximum);\n  }\n\n  clone() {\n    return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum);\n  }\n\n  transform(transformation) {\n    this.center.transformAsPoint(transformation);\n    this.halfDiagonal.transform(transformation);\n    this.minimum.transform(transformation);\n    this.maximum.transform(transformation);\n    return this;\n  }\n\n  intersectPlane(plane) {\n    const {\n      halfDiagonal\n    } = this;\n    const normal = scratchNormal.from(plane.normal);\n    const e = halfDiagonal.x * Math.abs(normal.x) + halfDiagonal.y * Math.abs(normal.y) + halfDiagonal.z * Math.abs(normal.z);\n    const s = this.center.dot(normal) + plane.distance;\n\n    if (s - e > 0) {\n      return INTERSECTION.INSIDE;\n    }\n\n    if (s + e < 0) {\n      return INTERSECTION.OUTSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  distanceSquaredTo(point) {\n    const offset = scratchVector.from(point).subtract(this.center);\n    const {\n      halfDiagonal\n    } = this;\n    let distanceSquared = 0.0;\n    let d;\n    d = Math.abs(offset.x) - halfDiagonal.x;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.y) - halfDiagonal.y;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.z) - halfDiagonal.z;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n}\n//# sourceMappingURL=axis-aligned-bounding-box.js.map","import { Vector3 } from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\nexport default class BoundingSphere {\n  constructor(center = [0, 0, 0], radius = 0.0) {\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  fromCenterRadius(center, radius) {\n    this.center.from(center);\n    this.radius = radius;\n    return this;\n  }\n\n  fromCornerPoints(corner, oppositeCorner) {\n    oppositeCorner = scratchVector.from(oppositeCorner);\n    this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n    this.radius = this.center.distance(oppositeCorner);\n    return this;\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.center.equals(right.center) && this.radius === right.radius;\n  }\n\n  clone() {\n    return new BoundingSphere(this.center, this.radius);\n  }\n\n  union(boundingSphere) {\n    const leftCenter = this.center;\n    const leftRadius = this.radius;\n    const rightCenter = boundingSphere.center;\n    const rightRadius = boundingSphere.radius;\n    const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n    const centerSeparation = toRightCenter.magnitude();\n\n    if (leftRadius >= centerSeparation + rightRadius) {\n      return this.clone();\n    }\n\n    if (rightRadius >= centerSeparation + leftRadius) {\n      return boundingSphere.clone();\n    }\n\n    const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n    scratchVector2.copy(toRightCenter).scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation).add(leftCenter);\n    this.center.copy(scratchVector2);\n    this.radius = halfDistanceBetweenTangentPoints;\n    return this;\n  }\n\n  expand(point) {\n    point = scratchVector.from(point);\n    const radius = point.subtract(this.center).magnitude();\n\n    if (radius > this.radius) {\n      this.radius = radius;\n    }\n\n    return this;\n  }\n\n  transform(transform) {\n    this.center.transform(transform);\n    const scale = mat4.getScaling(scratchVector, transform);\n    this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n    return this;\n  }\n\n  distanceSquaredTo(point) {\n    point = scratchVector.from(point);\n    const delta = point.subtract(this.center);\n    return delta.lengthSquared() - this.radius * this.radius;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  intersectPlane(plane) {\n    const center = this.center;\n    const radius = this.radius;\n    const normal = plane.normal;\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane < -radius) {\n      return INTERSECTION.OUTSIDE;\n    }\n\n    if (distanceToPlane < radius) {\n      return INTERSECTION.INTERSECTING;\n    }\n\n    return INTERSECTION.INSIDE;\n  }\n\n}\n//# sourceMappingURL=bounding-sphere.js.map","import { Vector3, Matrix3, Quaternion } from '@math.gl/core';\nimport BoundingSphere from './bounding-sphere';\nimport { INTERSECTION } from '../../constants';\nconst scratchVector3 = new Vector3();\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\nconst MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\nexport default class OrientedBoundingBox {\n  constructor(center = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  get halfSize() {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    return [new Vector3(xAxis).len(), new Vector3(yAxis).len(), new Vector3(zAxis).len()];\n  }\n\n  get quaternion() {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    const normXAxis = new Vector3(xAxis).normalize();\n    const normYAxis = new Vector3(yAxis).normalize();\n    const normZAxis = new Vector3(zAxis).normalize();\n    return new Quaternion().fromMatrix3(new Matrix3([...normXAxis, ...normYAxis, ...normZAxis]));\n  }\n\n  fromCenterHalfSizeQuaternion(center, halfSize, quaternion) {\n    const quaternionObject = new Quaternion(quaternion);\n    const directionsMatrix = new Matrix3().fromQuaternion(quaternionObject);\n    directionsMatrix[0] = directionsMatrix[0] * halfSize[0];\n    directionsMatrix[1] = directionsMatrix[1] * halfSize[0];\n    directionsMatrix[2] = directionsMatrix[2] * halfSize[0];\n    directionsMatrix[3] = directionsMatrix[3] * halfSize[1];\n    directionsMatrix[4] = directionsMatrix[4] * halfSize[1];\n    directionsMatrix[5] = directionsMatrix[5] * halfSize[1];\n    directionsMatrix[6] = directionsMatrix[6] * halfSize[2];\n    directionsMatrix[7] = directionsMatrix[7] * halfSize[2];\n    directionsMatrix[8] = directionsMatrix[8] * halfSize[2];\n    this.center = new Vector3().from(center);\n    this.halfAxes = directionsMatrix;\n    return this;\n  }\n\n  clone() {\n    return new OrientedBoundingBox(this.center, this.halfAxes);\n  }\n\n  equals(right) {\n    return this === right || Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes);\n  }\n\n  getBoundingSphere(result = new BoundingSphere()) {\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const cornerVector = scratchVector3.copy(u).add(v).add(w);\n    result.center.copy(this.center);\n    result.radius = cornerVector.magnitude();\n    return result;\n  }\n\n  intersectPlane(plane) {\n    const center = this.center;\n    const normal = plane.normal;\n    const halfAxes = this.halfAxes;\n    const normalX = normal.x;\n    const normalY = normal.y;\n    const normalZ = normal.z;\n    const radEffective = Math.abs(normalX * halfAxes[MATRIX3.COLUMN0ROW0] + normalY * halfAxes[MATRIX3.COLUMN0ROW1] + normalZ * halfAxes[MATRIX3.COLUMN0ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN1ROW0] + normalY * halfAxes[MATRIX3.COLUMN1ROW1] + normalZ * halfAxes[MATRIX3.COLUMN1ROW2]) + Math.abs(normalX * halfAxes[MATRIX3.COLUMN2ROW0] + normalY * halfAxes[MATRIX3.COLUMN2ROW1] + normalZ * halfAxes[MATRIX3.COLUMN2ROW2]);\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane <= -radEffective) {\n      return INTERSECTION.OUTSIDE;\n    } else if (distanceToPlane >= radEffective) {\n      return INTERSECTION.INSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  distanceTo(point) {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  distanceSquaredTo(point) {\n    const offset = scratchOffset.from(point).subtract(this.center);\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const uHalf = u.magnitude();\n    const vHalf = v.magnitude();\n    const wHalf = w.magnitude();\n    u.normalize();\n    v.normalize();\n    w.normalize();\n    let distanceSquared = 0.0;\n    let d;\n    d = Math.abs(offset.dot(u)) - uHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(v)) - vHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(w)) - wHalf;\n\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n  computePlaneDistances(position, direction, result = [-0, -0]) {\n    let minDist = Number.POSITIVE_INFINITY;\n    let maxDist = Number.NEGATIVE_INFINITY;\n    const center = this.center;\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n    const corner = scratchCorner.copy(u).add(v).add(w).add(center);\n    const toCenter = scratchToCenter.copy(corner).subtract(position);\n    let mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).add(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).subtract(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    corner.copy(center).add(u).subtract(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).add(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).add(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).subtract(v).add(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    center.copy(corner).subtract(u).subtract(v).subtract(w);\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n    result[0] = minDist;\n    result[1] = maxDist;\n    return result;\n  }\n\n  transform(transformation) {\n    this.center.transformAsPoint(transformation);\n    const xAxis = this.halfAxes.getColumn(0, scratchVectorU);\n    xAxis.transformAsPoint(transformation);\n    const yAxis = this.halfAxes.getColumn(1, scratchVectorV);\n    yAxis.transformAsPoint(transformation);\n    const zAxis = this.halfAxes.getColumn(2, scratchVectorW);\n    zAxis.transformAsPoint(transformation);\n    this.halfAxes = new Matrix3([...xAxis, ...yAxis, ...zAxis]);\n    return this;\n  }\n\n  getTransform() {\n    throw new Error('not implemented');\n  }\n\n}\n//# sourceMappingURL=oriented-bounding-box.js.map","import { Vector3, equals, assert } from '@math.gl/core';\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\nexport default class Plane {\n  constructor(normal = [0, 0, 1], distance = 0) {\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  fromNormalDistance(normal, distance) {\n    assert(Number.isFinite(distance));\n    this.normal.from(normal).normalize();\n    this.distance = distance;\n    return this;\n  }\n\n  fromPointNormal(point, normal) {\n    point = scratchPosition.from(point);\n    this.normal.from(normal).normalize();\n    const distance = -this.normal.dot(point);\n    this.distance = distance;\n    return this;\n  }\n\n  fromCoefficients(a, b, c, d) {\n    this.normal.set(a, b, c);\n    assert(equals(this.normal.len(), 1));\n    this.distance = d;\n    return this;\n  }\n\n  clone(plane) {\n    return new Plane(this.normal, this.distance);\n  }\n\n  equals(right) {\n    return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n  }\n\n  getPointDistance(point) {\n    return this.normal.dot(point) + this.distance;\n  }\n\n  transform(matrix4) {\n    const normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n    const point = this.normal.scale(-this.distance).transform(matrix4);\n    return this.fromPointNormal(point, normal);\n  }\n\n  projectPointOntoPlane(point, result = [0, 0, 0]) {\n    point = scratchPosition.from(point);\n    const pointDistance = this.getPointDistance(point);\n    const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n    return point.subtract(scaledNormal).to(result);\n  }\n\n}\n//# sourceMappingURL=plane.js.map","import { Vector3, Vector4, assert } from '@math.gl/core';\nimport { INTERSECTION } from '../constants';\nimport Plane from './plane';\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nconst scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\nexport default class CullingVolume {\n  static get MASK_OUTSIDE() {\n    return 0xffffffff;\n  }\n\n  static get MASK_INSIDE() {\n    return 0x00000000;\n  }\n\n  static get MASK_INDETERMINATE() {\n    return 0x7fffffff;\n  }\n\n  constructor(planes = []) {\n    this.planes = planes;\n    assert(this.planes.every(plane => plane instanceof Plane));\n  }\n\n  fromBoundingSphere(boundingSphere) {\n    this.planes.length = 2 * faces.length;\n    const center = boundingSphere.center;\n    const radius = boundingSphere.radius;\n    let planeIndex = 0;\n\n    for (const faceNormal of faces) {\n      let plane0 = this.planes[planeIndex];\n      let plane1 = this.planes[planeIndex + 1];\n\n      if (!plane0) {\n        plane0 = this.planes[planeIndex] = new Plane();\n      }\n\n      if (!plane1) {\n        plane1 = this.planes[planeIndex + 1] = new Plane();\n      }\n\n      const plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n      const plane0Distance = -faceNormal.dot(plane0Center);\n      plane0.fromPointNormal(plane0Center, faceNormal);\n      const plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n      const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n      const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n      plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n      planeIndex += 2;\n    }\n\n    return this;\n  }\n\n  computeVisibility(boundingVolume) {\n    assert(boundingVolume);\n    let intersect = INTERSECTION.INSIDE;\n\n    for (const plane of this.planes) {\n      const result = boundingVolume.intersectPlane(plane);\n\n      switch (result) {\n        case INTERSECTION.OUTSIDE:\n          return INTERSECTION.OUTSIDE;\n\n        case INTERSECTION.INTERSECTING:\n          intersect = INTERSECTION.INTERSECTING;\n          break;\n\n        default:\n      }\n    }\n\n    return intersect;\n  }\n\n  computeVisibilityWithPlaneMask(boundingVolume, parentPlaneMask) {\n    assert(boundingVolume, 'boundingVolume is required.');\n    assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n    if (parentPlaneMask === CullingVolume.MASK_OUTSIDE || parentPlaneMask === CullingVolume.MASK_INSIDE) {\n      return parentPlaneMask;\n    }\n\n    let mask = CullingVolume.MASK_INSIDE;\n    const planes = this.planes;\n\n    for (let k = 0; k < this.planes.length; ++k) {\n      const flag = k < 31 ? 1 << k : 0;\n\n      if (k < 31 && (parentPlaneMask & flag) === 0) {\n        continue;\n      }\n\n      const plane = planes[k];\n      const result = boundingVolume.intersectPlane(plane);\n\n      if (result === INTERSECTION.OUTSIDE) {\n        return CullingVolume.MASK_OUTSIDE;\n      } else if (result === INTERSECTION.INTERSECTING) {\n        mask |= flag;\n      }\n    }\n\n    return mask;\n  }\n\n}\n//# sourceMappingURL=culling-volume.js.map","import { Vector3, Matrix4, assert } from '@math.gl/core';\nimport CullingVolume from './culling-volume';\nimport Plane from './plane';\nconst scratchPlaneUpVector = new Vector3();\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nexport default class PerspectiveOffCenterFrustum {\n  constructor(options = {}) {\n    options = {\n      near: 1.0,\n      far: 500000000.0,\n      ...options\n    };\n    this.left = options.left;\n    this._left = undefined;\n    this.right = options.right;\n    this._right = undefined;\n    this.top = options.top;\n    this._top = undefined;\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n    this.near = options.near;\n    this._near = this.near;\n    this.far = options.far;\n    this._far = this.far;\n    this._cullingVolume = new CullingVolume([new Plane(), new Plane(), new Plane(), new Plane(), new Plane(), new Plane()]);\n    this._perspectiveMatrix = new Matrix4();\n    this._infinitePerspective = new Matrix4();\n  }\n\n  clone() {\n    return new PerspectiveOffCenterFrustum({\n      right: this.right,\n      left: this.left,\n      top: this.top,\n      bottom: this.bottom,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  equals(other) {\n    return other && other instanceof PerspectiveOffCenterFrustum && this.right === other.right && this.left === other.left && this.top === other.top && this.bottom === other.bottom && this.near === other.near && this.far === other.far;\n  }\n\n  get projectionMatrix() {\n    update(this);\n    return this._perspectiveMatrix;\n  }\n\n  get infiniteProjectionMatrix() {\n    update(this);\n    return this._infinitePerspective;\n  }\n\n  computeCullingVolume(position, direction, up) {\n    assert(position, 'position is required.');\n    assert(direction, 'direction is required.');\n    assert(up, 'up is required.');\n    const planes = this._cullingVolume.planes;\n    up = scratchPlaneUpVector.copy(up).normalize();\n    const right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n    const nearCenter = scratchPlaneNearCenter.copy(direction).multiplyByScalar(this.near).add(position);\n    const farCenter = scratchPlaneFarCenter.copy(direction).multiplyByScalar(this.far).add(position);\n    let normal = scratchPlaneNormal;\n    normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n    planes[0].fromPointNormal(position, normal);\n    normal.copy(right).multiplyByScalar(this.right).add(nearCenter).subtract(position).cross(up).negate();\n    planes[1].fromPointNormal(position, normal);\n    normal.copy(up).multiplyByScalar(this.bottom).add(nearCenter).subtract(position).cross(right).negate();\n    planes[2].fromPointNormal(position, normal);\n    normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n    planes[3].fromPointNormal(position, normal);\n    normal = new Vector3().copy(direction);\n    planes[4].fromPointNormal(nearCenter, normal);\n    normal.negate();\n    planes[5].fromPointNormal(farCenter, normal);\n    return this._cullingVolume;\n  }\n\n  getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n    update(this);\n    assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n    assert(drawingBufferWidth > 0);\n    assert(drawingBufferHeight > 0);\n    assert(distance > 0);\n    assert(result);\n    const inverseNear = 1.0 / this.near;\n    let tanTheta = this.top * inverseNear;\n    const pixelHeight = 2.0 * distance * tanTheta / drawingBufferHeight;\n    tanTheta = this.right * inverseNear;\n    const pixelWidth = 2.0 * distance * tanTheta / drawingBufferWidth;\n    result.x = pixelWidth;\n    result.y = pixelHeight;\n    return result;\n  }\n\n}\n\nfunction update(frustum) {\n  assert(Number.isFinite(frustum.right) && Number.isFinite(frustum.left) && Number.isFinite(frustum.top) && Number.isFinite(frustum.bottom) && Number.isFinite(frustum.near) && Number.isFinite(frustum.far));\n  const {\n    top,\n    bottom,\n    right,\n    left,\n    near,\n    far\n  } = frustum;\n\n  if (top !== frustum._top || bottom !== frustum._bottom || left !== frustum._left || right !== frustum._right || near !== frustum._near || far !== frustum._far) {\n    assert(frustum.near > 0 && frustum.near < frustum.far, 'near must be greater than zero and less than far.');\n    frustum._left = left;\n    frustum._right = right;\n    frustum._top = top;\n    frustum._bottom = bottom;\n    frustum._near = near;\n    frustum._far = far;\n    frustum._perspectiveMatrix = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far\n    });\n    frustum._infinitePerspective = new Matrix4().frustum({\n      left,\n      right,\n      bottom,\n      top,\n      near,\n      far: Infinity\n    });\n  }\n}\n//# sourceMappingURL=perspective-off-center-frustum.js.map","import { assert } from '@math.gl/core';\nimport PerspectiveOffCenterFrustum from './perspective-off-center-frustum';\n\nconst defined = val => val !== null && typeof val !== 'undefined';\n\nexport default class PerspectiveFrustum {\n  constructor(options = {}) {\n    options = {\n      near: 1.0,\n      far: 500000000.0,\n      xOffset: 0.0,\n      yOffset: 0.0,\n      ...options\n    };\n    this._offCenterFrustum = new PerspectiveOffCenterFrustum();\n    this.fov = options.fov;\n    this._fov = undefined;\n    this._fovy = undefined;\n    this._sseDenominator = undefined;\n    this.aspectRatio = options.aspectRatio;\n    this._aspectRatio = undefined;\n    this.near = options.near;\n    this._near = this.near;\n    this.far = options.far;\n    this._far = this.far;\n    this.xOffset = options.xOffset;\n    this._xOffset = this.xOffset;\n    this.yOffset = options.yOffset;\n    this._yOffset = this.yOffset;\n  }\n\n  clone() {\n    return new PerspectiveFrustum({\n      aspectRatio: this.aspectRatio,\n      fov: this.fov,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  equals(other) {\n    if (!defined(other) || !(other instanceof PerspectiveFrustum)) {\n      return false;\n    }\n\n    update(this);\n    update(other);\n    return this.fov === other.fov && this.aspectRatio === other.aspectRatio && this.near === other.near && this.far === other.far && this._offCenterFrustum.equals(other._offCenterFrustum);\n  }\n\n  get projectionMatrix() {\n    update(this);\n    return this._offCenterFrustum.projectionMatrix;\n  }\n\n  get infiniteProjectionMatrix() {\n    update(this);\n    return this._offCenterFrustum.infiniteProjectionMatrix;\n  }\n\n  get fovy() {\n    update(this);\n    return this._fovy;\n  }\n\n  get sseDenominator() {\n    update(this);\n    return this._sseDenominator;\n  }\n\n  computeCullingVolume(position, direction, up) {\n    update(this);\n    return this._offCenterFrustum.computeCullingVolume(position, direction, up);\n  }\n\n  getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result) {\n    update(this);\n    return this._offCenterFrustum.getPixelDimensions(drawingBufferWidth, drawingBufferHeight, distance, result);\n  }\n\n}\n\nfunction update(frustum) {\n  assert(Number.isFinite(frustum.fov) && Number.isFinite(frustum.aspectRatio) && Number.isFinite(frustum.near) && Number.isFinite(frustum.far));\n  const f = frustum._offCenterFrustum;\n\n  if (frustum.fov !== frustum._fov || frustum.aspectRatio !== frustum._aspectRatio || frustum.near !== frustum._near || frustum.far !== frustum._far || frustum.xOffset !== frustum._xOffset || frustum.yOffset !== frustum._yOffset) {\n    assert(frustum.fov >= 0 && frustum.fov < Math.PI);\n    assert(frustum.aspectRatio > 0);\n    assert(frustum.near >= 0 && frustum.near < frustum.far);\n    frustum._aspectRatio = frustum.aspectRatio;\n    frustum._fov = frustum.fov;\n    frustum._fovy = frustum.aspectRatio <= 1 ? frustum.fov : Math.atan(Math.tan(frustum.fov * 0.5) / frustum.aspectRatio) * 2.0;\n    frustum._near = frustum.near;\n    frustum._far = frustum.far;\n    frustum._sseDenominator = 2.0 * Math.tan(0.5 * frustum._fovy);\n    frustum._xOffset = frustum.xOffset;\n    frustum._yOffset = frustum.yOffset;\n    f.top = frustum.near * Math.tan(0.5 * frustum._fovy);\n    f.bottom = -f.top;\n    f.right = frustum.aspectRatio * f.top;\n    f.left = -f.right;\n    f.near = frustum.near;\n    f.far = frustum.far;\n    f.right += frustum.xOffset;\n    f.left += frustum.xOffset;\n    f.top += frustum.yOffset;\n    f.bottom += frustum.yOffset;\n  }\n}\n//# sourceMappingURL=perspective-frustum.js.map","import { Vector3 } from '@math.gl/core';\nimport BoundingSphere from '../bounding-volumes/bounding-sphere';\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\nconst volumeConstant = 4.0 / 3.0 * Math.PI;\nexport default function makeBoundingSphereFromPoints(positions, result = new BoundingSphere()) {\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  const currentPos = fromPointsCurrentPos.copy(positions[0]);\n  const xMin = fromPointsXMin.copy(currentPos);\n  const yMin = fromPointsYMin.copy(currentPos);\n  const zMin = fromPointsZMin.copy(currentPos);\n  const xMax = fromPointsXMax.copy(currentPos);\n  const yMax = fromPointsYMax.copy(currentPos);\n  const zMax = fromPointsZMax.copy(currentPos);\n\n  for (const position of positions) {\n    currentPos.copy(position);\n    const x = currentPos.x;\n    const y = currentPos.y;\n    const z = currentPos.z;\n\n    if (x < xMin.x) {\n      currentPos.copy(xMin);\n    }\n\n    if (x > xMax.x) {\n      currentPos.copy(xMax);\n    }\n\n    if (y < yMin.y) {\n      currentPos.copy(yMin);\n    }\n\n    if (y > yMax.y) {\n      currentPos.copy(yMax);\n    }\n\n    if (z < zMin.z) {\n      currentPos.copy(zMin);\n    }\n\n    if (z > zMax.z) {\n      currentPos.copy(zMax);\n    }\n  }\n\n  const xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n  const ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n  const zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n  let diameter1 = xMin;\n  let diameter2 = xMax;\n  let maxSpan = xSpan;\n\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  const ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n  let radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n  let ritterRadius = Math.sqrt(radiusSquared);\n  const minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n  const maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n  const naiveCenter = fromPointsNaiveCenterScratch.copy(minBoxPt).add(maxBoxPt).multiplyByScalar(0.5);\n  let naiveRadius = 0;\n\n  for (const position of positions) {\n    currentPos.copy(position);\n    const r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    const oldCenterToPointSquared = fromPointsScratch.copy(currentPos).subtract(ritterCenter).magnitudeSquared();\n\n    if (oldCenterToPointSquared > radiusSquared) {\n      const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      const oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n      ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n      ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}\n//# sourceMappingURL=bounding-sphere-from-points.js.map","import { Matrix3, _MathUtils } from '@math.gl/core';\nconst scratchMatrix = new Matrix3();\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\nexport default function computeEigenDecomposition(matrix, result = {}) {\n  const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  const EIGEN_MAX_SWEEPS = 10;\n  let count = 0;\n  let sweep = 0;\n  const unitaryMatrix = scratchUnitary;\n  const diagonalMatrix = scratchDiagonal;\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n  const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n    jMatrixTranspose.copy(jMatrix).transpose();\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix) {\n  let norm = 0.0;\n\n  for (let i = 0; i < 9; ++i) {\n    const temp = matrix[i];\n    norm += temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n\nfunction offDiagonalFrobeniusNorm(matrix) {\n  let norm = 0.0;\n\n  for (let i = 0; i < 3; ++i) {\n    const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n\n  return Math.sqrt(norm);\n}\n\nfunction shurDecomposition(matrix, result) {\n  const tolerance = _MathUtils.EPSILON15;\n  let maxDiagonal = 0.0;\n  let rotAxis = 1;\n\n  for (let i = 0; i < 3; ++i) {\n    const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  const p = rowVal[rotAxis];\n  const q = colVal[rotAxis];\n  let c = 1.0;\n  let s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n    const tau = (qq - pp) / 2.0 / qp;\n    let t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n  return result;\n}\n//# sourceMappingURL=compute-eigen-decomposition.js.map","import { Vector3, Matrix3 } from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\nconst scratchVector4 = new Vector3();\nconst scratchVector5 = new Vector3();\nconst scratchVector6 = new Vector3();\nconst scratchCovarianceResult = new Matrix3();\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\nexport function makeOrientedBoundingBoxFromPoints(positions, result = new OrientedBoundingBox()) {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n  const {\n    unitary\n  } = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    u1 = Math.max(position.dot(v1), u1);\n    u2 = Math.max(position.dot(v2), u2);\n    u3 = Math.max(position.dot(v3), u3);\n    l1 = Math.min(position.dot(v1), l1);\n    l2 = Math.min(position.dot(v2), l2);\n    l3 = Math.min(position.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n  result.center.copy(v1).add(v2).add(v3);\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n  return result;\n}\nexport function makeAxisAlignedBoundingBoxFromPoints(positions, result = new AxisAlignedBoundingBox()) {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n  return result;\n}\n//# sourceMappingURL=bounding-box-from-points.js.map","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = normalizeTileHeaders(tilesetJson);\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root.lodMetricValue;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n","/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition: any, message?: string): void {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport WorkerThread from './worker-thread';\nimport {assert} from '../env-utils/assert';\n\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n  readonly name: string;\n  readonly workerThread: WorkerThread;\n  isRunning: boolean;\n  /** Promise that resolves when Job is done */\n  readonly result: Promise<any>;\n\n  private _resolve: (value: any) => void;\n  private _reject: (reason?: any) => void;\n\n  constructor(jobName: string, workerThread: WorkerThread) {\n    this.name = jobName;\n    this.workerThread = workerThread;\n    this.isRunning = true;\n    this._resolve = () => {};\n    this._reject = () => {};\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * Send a message to the job's worker thread\n   * @param data any data structure, ideally consisting mostly of transferrable objects\n   */\n  postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    this.workerThread.postMessage({\n      source: 'loaders.gl', // Lets worker ignore unrelated messages\n      type,\n      payload\n    });\n  }\n\n  /**\n   * Call to resolve the `result` Promise with the supplied value\n   */\n  done(value): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._resolve(value);\n  }\n\n  /**\n   * Call to reject the `result` Promise with the supplied error\n   */\n  error(error): void {\n    assert(this.isRunning);\n    this.isRunning = false;\n    this._reject(error);\n  }\n}\n","import WorkerPool from './worker-pool';\nimport WorkerThread from './worker-thread';\n\n/**\n * @param maxConcurrency {number} - max count of workers\n */\nexport type WorkerFarmProps = {\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  reuseWorkers?: boolean;\n  onDebug?: () => void;\n};\n\nconst DEFAULT_PROPS: WorkerFarmProps = {\n  maxConcurrency: 3,\n  maxMobileConcurrency: 1,\n  onDebug: () => {},\n  reuseWorkers: true\n};\n\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n  private props: WorkerFarmProps;\n  private workerPools = new Map<string, WorkerPool>();\n  // singleton\n  private static _workerFarm?: WorkerFarm;\n\n  /** Check if Workers are supported */\n  static isSupported(): boolean {\n    return WorkerThread.isSupported();\n  }\n\n  /** Get the singleton instance of the global worker farm */\n  static getWorkerFarm(props: WorkerFarmProps = {}): WorkerFarm {\n    WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n    WorkerFarm._workerFarm.setProps(props);\n    return WorkerFarm._workerFarm;\n  }\n\n  /** get global instance with WorkerFarm.getWorkerFarm() */\n  private constructor(props: WorkerFarmProps) {\n    this.props = {...DEFAULT_PROPS};\n    this.setProps(props);\n    /** @type Map<string, WorkerPool>} */\n    this.workerPools = new Map();\n  }\n\n  /**\n   * Terminate all workers in the farm\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.destroy();\n    }\n  }\n\n  /**\n   * Set props used when initializing worker pools\n   * @param props\n   */\n  setProps(props: WorkerFarmProps): void {\n    this.props = {...this.props, ...props};\n    // Update worker pool props\n    for (const workerPool of this.workerPools.values()) {\n      workerPool.setProps(this._getWorkerPoolProps());\n    }\n  }\n\n  /**\n   * Returns a worker pool for the specified worker\n   * @param options - only used first time for a specific worker name\n   * @param options.name - the name of the worker - used to identify worker pool\n   * @param options.url -\n   * @param options.source -\n   * @example\n   *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n   */\n  getWorkerPool(options: {name: string; source?: string; url?: string}): WorkerPool {\n    const {name, source, url} = options;\n    let workerPool = this.workerPools.get(name);\n    if (!workerPool) {\n      workerPool = new WorkerPool({\n        name,\n        source,\n        url\n      });\n      workerPool.setProps(this._getWorkerPoolProps());\n      this.workerPools.set(name, workerPool);\n    }\n    return workerPool;\n  }\n\n  _getWorkerPoolProps() {\n    return {\n      maxConcurrency: this.props.maxConcurrency,\n      maxMobileConcurrency: this.props.maxMobileConcurrency,\n      reuseWorkers: this.props.reuseWorkers,\n      onDebug: this.props.onDebug\n    };\n  }\n}\n","import type {WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {isMobile} from '../env-utils/globals';\nimport WorkerThread from './worker-thread';\nimport WorkerJob from './worker-job';\n\n/** WorkerPool onDebug Callback Parameters */\ntype OnDebugParameters = {\n  message: string;\n  worker: string;\n  name: string;\n  job: string;\n  backlog: number;\n  workerThread: WorkerThread;\n};\n\n/** WorkerPool Properties */\nexport type WorkerPoolProps = {\n  name?: string;\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency?: number;\n  maxMobileConcurrency?: number;\n  onDebug?: (options: OnDebugParameters) => any;\n  reuseWorkers?: boolean;\n};\n\n/** Private helper types */\ntype OnMessage = (job: WorkerJob, type: WorkerMessageType, payload: WorkerMessagePayload) => void;\ntype OnError = (job: WorkerJob, error: Error) => void;\n\ntype QueuedJob = {\n  name: string;\n  onMessage: OnMessage;\n  onError: OnError;\n  onStart: (value: any) => void; // Resolve job start promise\n};\n\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n  name: string = 'unnamed';\n  source?: string; // | Function;\n  url?: string;\n  maxConcurrency: number = 1;\n  maxMobileConcurrency: number = 1;\n  onDebug: (options: OnDebugParameters) => any = () => {};\n  reuseWorkers: boolean = true;\n\n  private props: WorkerPoolProps = {};\n  private jobQueue: QueuedJob[] = [];\n  private idleQueue: WorkerThread[] = [];\n  private count = 0;\n  private isDestroyed = false;\n\n  /**\n   * @param processor - worker function\n   * @param maxConcurrency - max count of workers\n   */\n  constructor(props: WorkerPoolProps) {\n    this.source = props.source;\n    this.url = props.url;\n    this.setProps(props);\n  }\n\n  /**\n   * Terminates all workers in the pool\n   * @note Can free up significant memory\n   */\n  destroy(): void {\n    // Destroy idle workers, active Workers will be destroyed on completion\n    this.idleQueue.forEach((worker) => worker.destroy());\n    this.isDestroyed = true;\n  }\n\n  setProps(props: WorkerPoolProps) {\n    this.props = {...this.props, ...props};\n\n    if (props.name !== undefined) {\n      this.name = props.name;\n    }\n    if (props.maxConcurrency !== undefined) {\n      this.maxConcurrency = props.maxConcurrency;\n    }\n    if (props.maxMobileConcurrency !== undefined) {\n      this.maxMobileConcurrency = props.maxMobileConcurrency;\n    }\n    if (props.reuseWorkers !== undefined) {\n      this.reuseWorkers = props.reuseWorkers;\n    }\n    if (props.onDebug !== undefined) {\n      this.onDebug = props.onDebug;\n    }\n  }\n\n  async startJob(\n    name: string,\n    onMessage: OnMessage = (job, type, data) => job.done(data),\n    onError: OnError = (job, error) => job.error(error)\n  ): Promise<WorkerJob> {\n    // Promise resolves when thread starts working on this job\n    const startPromise = new Promise<WorkerJob>((onStart) => {\n      // Promise resolves when thread completes or fails working on this job\n      this.jobQueue.push({name, onMessage, onError, onStart});\n      return this;\n    });\n    this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    return await startPromise;\n  }\n\n  // PRIVATE\n\n  /**\n   * Starts first queued job if worker is available or can be created\n   * Called when job is started and whenever a worker returns to the idleQueue\n   */\n  async _startQueuedJob(): Promise<void> {\n    if (!this.jobQueue.length) {\n      return;\n    }\n\n    const workerThread = this._getAvailableWorker();\n    if (!workerThread) {\n      return;\n    }\n\n    // We have a worker, dequeue and start the job\n    const queuedJob = this.jobQueue.shift();\n    if (queuedJob) {\n      // Emit a debug event\n      // @ts-ignore\n      this.onDebug({\n        message: 'Starting job',\n        name: queuedJob.name,\n        workerThread,\n        backlog: this.jobQueue.length\n      });\n\n      // Create a worker job to let the app access thread and manage job completion\n      const job = new WorkerJob(queuedJob.name, workerThread);\n\n      // Set the worker thread's message handlers\n      workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n      workerThread.onError = (error) => queuedJob.onError(job, error);\n\n      // Resolve the start promise so that the app can start sending messages to worker\n      queuedJob.onStart(job);\n\n      // Wait for the app to signal that the job is complete, then return worker to queue\n      try {\n        await job.result;\n      } finally {\n        this.returnWorkerToQueue(workerThread);\n      }\n    }\n  }\n\n  /**\n   * Returns a worker to the idle queue\n   * Destroys the worker if\n   *  - pool is destroyed\n   *  - if this pool doesn't reuse workers\n   *  - if maxConcurrency has been lowered\n   * @param worker\n   */\n  returnWorkerToQueue(worker: WorkerThread) {\n    const shouldDestroyWorker =\n      this.isDestroyed || !this.reuseWorkers || this.count > this._getMaxConcurrency();\n\n    if (shouldDestroyWorker) {\n      worker.destroy();\n      this.count--;\n    } else {\n      this.idleQueue.push(worker);\n    }\n\n    if (!this.isDestroyed) {\n      this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n\n  /**\n   * Returns idle worker or creates new worker if maxConcurrency has not been reached\n   */\n  _getAvailableWorker(): WorkerThread | null {\n    // If a worker has completed and returned to the queue, it can be used\n    if (this.idleQueue.length > 0) {\n      return this.idleQueue.shift() || null;\n    }\n\n    // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n    if (this.count < this._getMaxConcurrency()) {\n      this.count++;\n      const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n      return new WorkerThread({name, source: this.source, url: this.url});\n    }\n\n    // No worker available, have to wait\n    return null;\n  }\n\n  _getMaxConcurrency() {\n    return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n  }\n}\n","import type {WorkerMessageData, WorkerMessageType, WorkerMessagePayload} from '../../types';\nimport {getTransferList} from '../worker-utils/get-transfer-list';\n\nconst onMessageWrapperMap = new Map();\n\n/**\n * Type safe wrapper for worker code\n */\nexport default class WorkerBody {\n  /*\n   * (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n   */\n  static set onmessage(onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any) {\n    // eslint-disable-next-line no-restricted-globals\n    self.onmessage = (message) => {\n      if (!isKnownMessage(message)) {\n        return;\n      }\n\n      // Confusingly the message itself also has a 'type' field which is always set to 'message'\n      const {type, payload} = message.data;\n      onMessage(type, payload);\n    };\n  }\n\n  static addEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    let onMessageWrapper = onMessageWrapperMap.get(onMessage);\n\n    if (!onMessageWrapper) {\n      onMessageWrapper = (message) => {\n        if (!isKnownMessage(message)) {\n          return;\n        }\n\n        // Confusingly the message itself also has a 'type' field which is always set to 'message'\n        const {type, payload} = message.data;\n        onMessage(type, payload);\n      };\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    self.addEventListener('message', onMessageWrapper);\n  }\n\n  static removeEventListener(\n    onMessage: (type: WorkerMessageType, payload: WorkerMessagePayload) => any\n  ) {\n    const onMessageWrapper = onMessageWrapperMap.get(onMessage);\n    onMessageWrapperMap.delete(onMessage);\n    // eslint-disable-next-line no-restricted-globals\n    self.removeEventListener('message', onMessageWrapper);\n  }\n\n  /**\n   * Send a message from a worker to creating thread (main thread)\n   * @param type\n   * @param payload\n   */\n  static postMessage(type: WorkerMessageType, payload: WorkerMessagePayload): void {\n    if (self) {\n      const data: WorkerMessageData = {source: 'loaders.gl', type, payload};\n      const transferList = getTransferList(payload);\n      // eslint-disable-next-line no-restricted-globals\n      // @ts-ignore\n      self.postMessage(data, transferList);\n    }\n  }\n}\n\n// Filter out noise messages sent to workers\nfunction isKnownMessage(message) {\n  const {type, data} = message;\n  return (\n    type === 'message' &&\n    data &&\n    typeof data.source === 'string' &&\n    data.source.startsWith('loaders.gl')\n  );\n}\n","import type {WorkerObject, WorkerOptions} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\nconst NPM_TAG = 'latest';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : NPM_TAG;\n\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker: WorkerObject): string {\n  const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n  return `${worker.name}@${worker.version}${warning}`;\n}\n\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker: WorkerObject, options: WorkerOptions = {}): string {\n  const workerOptions = options[worker.id] || {};\n\n  const workerFile = `${worker.id}-worker.js`;\n\n  let url = workerOptions.workerUrl;\n\n  // If URL is test, generate local loaders.gl url\n  // @ts-ignore _workerType\n  if (options._workerType === 'test') {\n    url = `modules/${worker.module}/dist/${workerFile}`;\n  }\n\n  // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n  if (!url) {\n    // GENERATE\n    let version = worker.version;\n    // On master we need to load npm alpha releases published with the `beta` tag\n    if (version === 'latest') {\n      // throw new Error('latest worker version specified');\n      version = NPM_TAG;\n    }\n    const versionTag = version ? `@${version}` : '';\n    url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n  }\n\n  assert(url);\n\n  // Allow user to override location\n  return url;\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\n/**\n * Async Queue\n * - AsyncIterable: An async iterator can be\n * - Values can be pushed onto the queue\n * @example\n *   const asyncQueue = new AsyncQueue();\n *   setTimeout(() => asyncQueue.enqueue('tick'), 1000);\n *   setTimeout(() => asyncQueue.enqueue(new Error('done')), 10000);\n *   for await (const value of asyncQueue) {\n *     console.log(value); // tick\n *   }\n */\nexport default class AsyncQueue<T> {\n  private _values: any[];\n  private _settlers: any[];\n  private _closed: boolean;\n\n  constructor() {\n    this._values = []; // enqueues > dequeues\n    this._settlers = []; // dequeues > enqueues\n    this._closed = false;\n  }\n\n  /** Return an async iterator for this queue */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  /** Push a new value - the async iterator will yield a promise resolved to this value */\n  push(value: T): void {\n    return this.enqueue(value);\n  }\n\n  /**\n   * Push a new value - the async iterator will yield a promise resolved to this value\n   * Add an error - the async iterator will yield a promise rejected with this value\n   */\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.shift();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.push(value);\n    }\n  }\n\n  /** Indicate that we not waiting for more values - The async iterator will be done */\n  close(): void {\n    while (this._settlers.length > 0) {\n      const settler = this._settlers.shift();\n      settler.resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  // ITERATOR IMPLEMENTATION\n\n  /** @returns a Promise for an IteratorResult */\n  next(): Promise<IteratorResult<T, any>> {\n    // If values in queue, yield the first value\n    if (this._values.length > 0) {\n      const value = this._values.shift();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({done: false, value});\n    }\n\n    // If queue is closed, the iterator is done\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true, value: undefined});\n    }\n\n    // Yield a promise that waits for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.push({resolve, reject});\n    });\n  }\n}\n","export function getFirstCharacters(data, length = 5): string {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nexport function getMagicString(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  length: number\n): string {\n  if (arrayBuffer.byteLength <= byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n","import {TypedArray} from '../../types';\nimport * as node from '../node/buffer-utils.node';\n\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data: any): ArrayBuffer {\n  // Note: Should be called first, Buffers can trigger other detections below\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    data = node.toArrayBuffer(data);\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data;\n  }\n\n  // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n  if (ArrayBuffer.isView(data)) {\n    return data.buffer;\n  }\n\n  if (typeof data === 'string') {\n    const text = data;\n    const uint8Array = new TextEncoder().encode(text);\n    return uint8Array.buffer;\n  }\n\n  // HACK to support Blob polyfill\n  if (data && typeof data === 'object' && data._toArrayBuffer) {\n    return data._toArrayBuffer();\n  }\n\n  throw new Error('toArrayBuffer');\n}\n\n/**\n * compare two binary arrays for equality\n * @param {ArrayBuffer} a\n * @param {ArrayBuffer} b\n * @param {number} byteLength\n */\nexport function compareArrayBuffers(\n  arrayBuffer1: ArrayBuffer,\n  arrayBuffer2: ArrayBuffer,\n  byteLength?: number\n): boolean {\n  byteLength = byteLength || arrayBuffer1.byteLength;\n  if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n    return false;\n  }\n  const array1 = new Uint8Array(arrayBuffer1);\n  const array2 = new Uint8Array(arrayBuffer2);\n  for (let i = 0; i < array1.length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Concatenate a sequence of ArrayBuffers\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources: (ArrayBuffer | Uint8Array)[]): ArrayBuffer {\n  // Make sure all inputs are wrapped in typed arrays\n  const sourceArrays = sources.map((source2) =>\n    source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2\n  );\n\n  // Get length of all inputs\n  const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n\n  // Allocate array with space for all inputs\n  const result = new Uint8Array(byteLength);\n\n  // Copy the subarrays\n  let offset = 0;\n  for (const sourceArray of sourceArrays) {\n    result.set(sourceArray, offset);\n    offset += sourceArray.byteLength;\n  }\n\n  // We work with ArrayBuffers, discard the typed array wrapper\n  return result.buffer;\n}\n\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param {...*} arrays - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays<T>(...typedArrays: T[]): T {\n  // @ts-ignore\n  const arrays = typedArrays as TypedArray[];\n  // @ts-ignore\n  const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n  if (!TypedArrayConstructor) {\n    throw new Error(\n      '\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types'\n    );\n  }\n\n  const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n  // @ts-ignore typescript does not like dynamic constructors\n  const result = new TypedArrayConstructor(sumLength);\n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  return result;\n}\n\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength?: number\n): ArrayBuffer {\n  const subArray =\n    byteLength !== undefined\n      ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n      : new Uint8Array(arrayBuffer).subarray(byteOffset);\n  const arrayCopy = new Uint8Array(subArray);\n  return arrayCopy.buffer;\n}\n","import {assert} from '../env-utils/assert';\n\n/**\n * Calculate new size of an arrayBuffer to be aligned to an n-byte boundary\n * This function increases `byteLength` by the minimum delta,\n * allowing the total length to be divided by `padding`\n * @param byteLength\n * @param padding\n */\nexport function padToNBytes(byteLength: number, padding: number): number {\n  assert(byteLength >= 0); // `Incorrect 'byteLength' value: ${byteLength}`\n  assert(padding > 0); // `Incorrect 'padding' value: ${padding}`\n  return (byteLength + (padding - 1)) & ~(padding - 1);\n}\n\n/**\n * Creates a new Uint8Array based on two different ArrayBuffers\n * @param targetBuffer The first buffer.\n * @param sourceBuffer The second buffer.\n * @return The new ArrayBuffer created out of the two.\n */\nexport function copyArrayBuffer(\n  targetBuffer: ArrayBuffer,\n  sourceBuffer: ArrayBuffer,\n  byteOffset: number,\n  byteLength: number = sourceBuffer.byteLength\n): ArrayBuffer {\n  const targetArray = new Uint8Array(targetBuffer, byteOffset, byteLength);\n  const sourceArray = new Uint8Array(sourceBuffer);\n  targetArray.set(sourceArray);\n  return targetBuffer;\n}\n\n/**\n * Copy from source to target at the targetOffset\n *\n * @param source - The data to copy\n * @param target - The destination to copy data into\n * @param targetOffset - The start offset into target to place the copied data\n * @returns the new offset taking into account proper padding\n */\nexport function copyToArray(source: ArrayBuffer | any, target: any, targetOffset: number): number {\n  let sourceArray;\n\n  if (source instanceof ArrayBuffer) {\n    sourceArray = new Uint8Array(source);\n  } else {\n    // Pack buffer onto the big target array\n    //\n    // 'source.data.buffer' could be a view onto a larger buffer.\n    // We MUST use this constructor to ensure the byteOffset and byteLength is\n    // set to correct values from 'source.data' and not the underlying\n    // buffer for target.set() to work properly.\n    const srcByteOffset = source.byteOffset;\n    const srcByteLength = source.byteLength;\n    // In gltf parser it is set as \"arrayBuffer\" instead of \"buffer\"\n    // https://github.com/visgl/loaders.gl/blob/1e3a82a0a65d7b6a67b1e60633453e5edda2960a/modules/gltf/src/lib/parse-gltf.js#L85\n    sourceArray = new Uint8Array(source.buffer || source.arrayBuffer, srcByteOffset, srcByteLength);\n  }\n\n  // Pack buffer onto the big target array\n  target.set(sourceArray, targetOffset);\n\n  return targetOffset + padToNBytes(sourceArray.byteLength, 4);\n}\n","export type {Tileset3DProps} from './tileset/tileset-3d';\nexport {default as Tileset3D} from './tileset/tileset-3d';\nexport {default as Tile3D} from './tileset/tile-3d';\n\nexport {default as TilesetTraverser} from './tileset/traversers/tileset-traverser';\nexport {default as TilesetCache} from './tileset/tileset-cache';\n\nexport {createBoundingVolume} from './tileset/helpers/bounding-volume';\nexport {calculateTransformProps} from './tileset/helpers/transform-utils';\n\nexport {getFrameState} from './tileset/helpers/frame-state';\n\nexport {\n  TILE_CONTENT_STATE,\n  TILE_REFINEMENT,\n  TILE_TYPE,\n  TILESET_TYPE,\n  LOD_METRIC_TYPE\n} from './constants';\n","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { vec2_transformMat4AsVector } from '../lib/gl-matrix-extras';\nexport default class Vector2 extends Vector {\n  constructor(x = 0, y = 0) {\n    super(2);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 2;\n  }\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector2.js.map","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\nimport { vec4_transformMat2, vec4_transformMat3 } from '../lib/gl-matrix-extras';\nconst constants = {};\nexport default class Vector4 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector4(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    super(-0, -0, -0, -0);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n\n}\n//# sourceMappingURL=vector4.js.map","import Matrix from './base/matrix';\nimport { checkVector, deprecated } from '../lib/validators';\nimport { vec4_transformMat3 } from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\nconst constants = {};\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix3.js.map","export default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n  TWO_PI: Math.PI * 2\n};\n//# sourceMappingURL=math-utils.js.map","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport DoublyLinkedList from '../utils/doubly-linked-list';\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * Stores tiles with content loaded.\n *\n * @private\n */\nexport default class TilesetCache {\n  private _list: DoublyLinkedList;\n  private _sentinel: any;\n  private _trimTiles: boolean;\n\n  constructor() {\n    // [head, sentinel) -> tiles that weren't selected this frame and may be removed from the cache\n    // (sentinel, tail] -> tiles that were selected this frame\n    this._list = new DoublyLinkedList();\n    this._sentinel = this._list.add('sentinel');\n    this._trimTiles = false;\n  }\n\n  reset() {\n    // Move sentinel node to the tail so, at the start of the frame, all tiles\n    // may be potentially replaced.  Tiles are moved to the right of the sentinel\n    // when they are selected so they will not be replaced.\n    this._list.splice(this._list.tail, this._sentinel);\n  }\n\n  touch(tile) {\n    const node = tile._cacheNode;\n    if (defined(node)) {\n      this._list.splice(this._sentinel, node);\n    }\n  }\n\n  add(tileset, tile, addCallback) {\n    if (!defined(tile._cacheNode)) {\n      tile._cacheNode = this._list.add(tile);\n\n      if (addCallback) {\n        addCallback(tileset, tile);\n      }\n    }\n  }\n\n  unloadTile(tileset, tile, unloadCallback?) {\n    const node = tile._cacheNode;\n    if (!defined(node)) {\n      return;\n    }\n\n    this._list.remove(node);\n    tile._cacheNode = undefined;\n    if (unloadCallback) {\n      unloadCallback(tileset, tile);\n    }\n  }\n\n  unloadTiles(tileset, unloadCallback) {\n    const trimTiles = this._trimTiles;\n    this._trimTiles = false;\n\n    const list = this._list;\n\n    const maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n\n    // Traverse the list only to the sentinel since tiles/nodes to the\n    // right of the sentinel were used this frame.\n    // The sub-list to the left of the sentinel is ordered from LRU to MRU.\n    const sentinel = this._sentinel;\n    let node = list.head;\n\n    while (\n      node !== sentinel &&\n      (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)\n    ) {\n      const tile = node.item;\n      node = node.next;\n      this.unloadTile(tileset, tile, unloadCallback);\n    }\n  }\n\n  trim() {\n    this._trimTiles = true;\n  }\n}\n","import {Ellipsoid} from '@math.gl/geospatial';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nexport function calculateTransformProps(tileHeader, tile) {\n  assert(tileHeader);\n  assert(tile);\n\n  const {rtcCenter, gltfUpAxis} = tile;\n  const {\n    computedTransform,\n    boundingVolume: {center}\n  } = tileHeader;\n\n  let modelMatrix = new Matrix4(computedTransform);\n\n  // Translate if appropriate\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  switch (gltfUpAxis) {\n    case 'Z':\n      break;\n    case 'Y':\n      const rotationY = new Matrix4().rotateX(Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationY);\n      break;\n    case 'X':\n      const rotationX = new Matrix4().rotateY(-Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationX);\n      break;\n    default:\n      break;\n  }\n\n  // Scale/offset positions if normalized integers\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  // Option 1: Cartesian matrix and origin\n  const cartesianOrigin = new Vector3(center);\n\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  // Option 2: Cartographic matrix and origin\n  const cartographicOrigin = Ellipsoid.WGS84.cartesianToCartographic(\n    cartesianOrigin,\n    new Vector3()\n  );\n  const fromFixedFrameMatrix = Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n  const toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n\n  // Deprecated, drop\n  tile.modelMatrix = tile.cartographicModelMatrix;\n}\n","import {Vector3} from '@math.gl/core';\nimport {CullingVolume, Plane} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\n\nexport type FrameState = {\n  camera: {\n    position: number[];\n    direction: number[];\n    up: number[];\n  };\n  viewport: {[key: string]: any};\n  height: number;\n  cullingVolume: CullingVolume;\n  frameNumber: number; // TODO: This can be the same between updates, what number is unique for between updates?\n  sseDenominator: number; // Assumes fovy = 60 degrees\n};\n\nconst scratchVector = new Vector3();\nconst scratchPosition = new Vector3();\nconst cullingVolume = new CullingVolume([\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane(),\n  new Plane()\n]);\n\n// Extracts a frame state appropriate for tile culling from a deck.gl viewport\n// TODO - this could likely be generalized and merged back into deck.gl for other culling scenarios\nexport function getFrameState(viewport, frameNumber: number): FrameState {\n  // Traverse and and request. Update _selectedTiles so that we know what to render.\n  const {cameraDirection, cameraUp, height} = viewport;\n  const {metersPerUnit} = viewport.distanceScales;\n\n  const viewportCenterCartographic = [viewport.longitude, viewport.latitude, 0];\n  // TODO - Ellipsoid.eastNorthUpToFixedFrame() breaks on raw array, create a Vector.\n  // TODO - Ellipsoid.eastNorthUpToFixedFrame() takes a cartesian, is that intuitive?\n  const viewportCenterCartesian = Ellipsoid.WGS84.cartographicToCartesian(\n    viewportCenterCartographic,\n    new Vector3()\n  );\n  const enuToFixedTransform = Ellipsoid.WGS84.eastNorthUpToFixedFrame(viewportCenterCartesian);\n\n  const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n  const cameraPositionCartesian = Ellipsoid.WGS84.cartographicToCartesian(\n    cameraPositionCartographic,\n    new Vector3()\n  );\n\n  // These should still be normalized as the transform has scale 1 (goes from meters to meters)\n  const cameraDirectionCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraDirection).scale(metersPerUnit))\n  ).normalize();\n  const cameraUpCartesian = new Vector3(\n    // @ts-ignore\n    enuToFixedTransform.transformAsVector(new Vector3(cameraUp).scale(metersPerUnit))\n  ).normalize();\n\n  commonSpacePlanesToWGS84(viewport, viewportCenterCartesian);\n\n  // TODO: make a file/class for frameState and document what needs to be attached to this so that traversal can function\n  return {\n    camera: {\n      position: cameraPositionCartesian,\n      direction: cameraDirectionCartesian,\n      up: cameraUpCartesian\n    },\n    viewport,\n    height,\n    cullingVolume,\n    frameNumber, // TODO: This can be the same between updates, what number is unique for between updates?\n    sseDenominator: 1.15 // Assumes fovy = 60 degrees\n  };\n}\n\nfunction commonSpacePlanesToWGS84(viewport, viewportCenterCartesian) {\n  // Extract frustum planes based on current view.\n  const frustumPlanes = viewport.getFrustumPlanes();\n  let i = 0;\n  for (const dir in frustumPlanes) {\n    const plane = frustumPlanes[dir];\n    const distanceToCenter = plane.normal.dot(viewport.center);\n    scratchPosition\n      .copy(plane.normal)\n      .scale(plane.distance - distanceToCenter)\n      .add(viewport.center);\n    const cartographicPos = viewport.unprojectPosition(scratchPosition);\n\n    const cartesianPos = Ellipsoid.WGS84.cartographicToCartesian(cartographicPos, new Vector3());\n\n    cullingVolume.planes[i++].fromPointNormal(\n      cartesianPos,\n      // Want the normal to point into the frustum since that's what culling expects\n      scratchVector.copy(viewportCenterCartesian).subtract(cartesianPos)\n    );\n  }\n}\n","import {isResponse} from '../../javascript-utils/is-type';\nimport {getResourceContentLength, getResourceUrlAndType} from './resource-utils';\n\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource: any): Promise<Response> {\n  if (isResponse(resource)) {\n    return resource;\n  }\n\n  // Add content-length header if possible\n  const headers: {[header: string]: string} = {};\n\n  const contentLength = getResourceContentLength(resource);\n  if (contentLength >= 0) {\n    headers['content-length'] = String(contentLength);\n  }\n\n  // `new Response(File)` does not preserve content-type and URL\n  // so we add them here\n  const {url, type} = getResourceUrlAndType(resource);\n  if (type) {\n    headers['content-type'] = type;\n  }\n\n  // Add a custom header with initial bytes if available\n  const initialDataUrl = await getInitialDataUrl(resource);\n  if (initialDataUrl) {\n    headers['x-first-bytes'] = initialDataUrl;\n  }\n\n  // TODO - is this the best way of handling strings?\n  // Maybe package as data URL instead?\n  if (typeof resource === 'string') {\n    // Convert to ArrayBuffer to avoid Response treating it as a URL\n    resource = new TextEncoder().encode(resource);\n  }\n\n  // Attempt to create a Response from the resource, adding headers and setting url\n  const response = new Response(resource, {headers});\n  // We can't control `Response.url` via constructor, use a property override to record URL.\n  Object.defineProperty(response, 'url', {value: url});\n  return response;\n}\n\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response: Response): Promise<void> {\n  if (!response.ok) {\n    const message = await getResponseError(response);\n    throw new Error(message);\n  }\n}\n\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response: Response): void {\n  if (!response.ok) {\n    let message = `${response.status} ${response.statusText}`;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n    throw new Error(message);\n  }\n}\n\n// HELPERS\n\nasync function getResponseError(response): Promise<string> {\n  let message = `Failed to fetch resource ${response.url} (${response.status}): `;\n  try {\n    const contentType = response.headers.get('Content-Type');\n    let text = response.statusText;\n    if (contentType.includes('application/json')) {\n      text += ` ${await response.text()}`;\n    }\n    message += text;\n    message = message.length > 60 ? `${message.slice(60)}...` : message;\n  } catch (error) {\n    // eslint forbids return in a finally statement, so we just catch here\n  }\n  return message;\n}\n\nasync function getInitialDataUrl(resource): Promise<string | null> {\n  const INITIAL_DATA_LENGTH = 5;\n  if (typeof resource === 'string') {\n    return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n  }\n  if (resource instanceof Blob) {\n    const blobSlice = resource.slice(0, 5);\n    return await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event?.target?.result as string);\n      reader.readAsDataURL(blobSlice);\n    });\n  }\n  if (resource instanceof ArrayBuffer) {\n    const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n    const base64 = arrayBufferToBase64(slice);\n    return `data:base64,${base64}`;\n  }\n  return null;\n}\n\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n","// probe.gl Log compatible loggers\nimport {Log} from 'probe.gl';\n\nexport const probeLog = new Log({id: 'loaders.gl'});\n\n// Logs nothing\nexport class NullLog {\n  log() {\n    return () => {};\n  }\n  info() {\n    return () => {};\n  }\n  warn() {\n    return () => {};\n  }\n  error() {\n    return () => {};\n  }\n}\n\n// Logs to console\nexport class ConsoleLog {\n  console;\n\n  constructor() {\n    this.console = console; // eslint-disable-line\n  }\n  log(...args) {\n    return this.console.log.bind(this.console, ...args);\n  }\n  info(...args) {\n    return this.console.info.bind(this.console, ...args);\n  }\n  warn(...args) {\n    return this.console.warn.bind(this.console, ...args);\n  }\n  error(...args) {\n    return this.console.error.bind(this.console, ...args);\n  }\n}\n","import {Loader} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getGlobalLoaderState} from '../loader-utils/option-utils';\n\n// Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n// This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\nconst getGlobalLoaderRegistry = () => {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = state.loaderRegistry || [];\n  return state.loaderRegistry;\n};\n\nexport function registerLoaders(loaders: Loader[]) {\n  const loaderRegistry = getGlobalLoaderRegistry();\n\n  loaders = Array.isArray(loaders) ? loaders : [loaders];\n\n  for (const loader of loaders) {\n    const normalizedLoader = normalizeLoader(loader);\n    if (!loaderRegistry.find((registeredLoader) => normalizedLoader === registeredLoader)) {\n      // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n      loaderRegistry.unshift(normalizedLoader);\n    }\n  }\n}\n\nexport function getRegisteredLoaders(): Loader[] {\n  return getGlobalLoaderRegistry();\n}\n\n// For testing\nexport function _unregisterLoaders() {\n  const state = getGlobalLoaderState();\n  state.loaderRegistry = [];\n}\n","import type {ReadStream} from 'fs';\n\nimport {makeStringIterator} from './make-string-iterator';\nimport {makeArrayBufferIterator} from './make-array-buffer-iterator';\nimport {makeBlobIterator} from './make-blob-iterator';\nimport type {StreamIteratorOptions} from './make-stream-iterator';\nimport {makeStreamIterator} from './make-stream-iterator';\nimport {isBlob, isReadableStream, isResponse} from '../../javascript-utils/is-type';\n\n/**\n * @param [options.chunkSize]\n */\nexport type IteratorOptions = StreamIteratorOptions & {\n  chunkSize?: number;\n};\n\n/**\n * Returns an iterator that breaks its input into chunks and yields them one-by-one.\n * @param data\n * @param options\n * @returns\n * This function can e.g. be used to enable data sources that can only be read atomically\n * (such as `Blob` and `File` via `FileReader`) to still be parsed in batches.\n */\nexport function makeIterator(\n  data: ArrayBuffer | string | Blob | Response | ReadableStream | ReadStream,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer> {\n  if (typeof data === 'string') {\n    // Note: Converts string chunks to binary\n    return makeStringIterator(data, options);\n  }\n  if (data instanceof ArrayBuffer) {\n    return makeArrayBufferIterator(data, options);\n  }\n  if (isBlob(data)) {\n    return makeBlobIterator(data as Blob, options);\n  }\n  if (isReadableStream(data)) {\n    return makeStreamIterator(data as ReadableStream, options);\n  }\n  if (isResponse(data)) {\n    const response = data as Response;\n    return makeStreamIterator(response.body as ReadableStream, options);\n  }\n  throw new Error('makeIterator');\n}\n","import type {Batch} from '@loaders.gl/schema';\nimport type {\n  BatchableDataType,\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {assert, concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getLoaderContext} from '../loader-utils/loader-context';\nimport {getAsyncIterableFromData} from '../loader-utils/get-data';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {selectLoader} from './select-loader';\n\n// Ensure `parse` is available in context if loader falls back to `parse`\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport async function parseInBatches(\n  data: BatchableDataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>> {\n  assert(!context || typeof context === 'object'); // parseInBatches no longer accepts final url\n\n  // Signature: parseInBatches(data, options, url) - Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  data = await data; // Resolve any promise\n  options = options || {};\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  // Chooses a loader and normalizes it\n  // Note - only uses URL and contentType for streams and iterator inputs\n  const loader = await selectLoader(data as ArrayBuffer, loaders as Loader[], options);\n  // Note: if options.nothrow was set, it is possible that no loader was found, if so just return null\n  if (!loader) {\n    // @ts-ignore\n    return null;\n  }\n\n  // Normalize options\n  // @ts-ignore\n  options = normalizeOptions(options, loader, loaders, url);\n  // @ts-ignore\n  context = getLoaderContext(\n    // @ts-ignore\n    {url, parseInBatches, parse, loaders: loaders as Loader[]},\n    options,\n    context\n  );\n\n  return await parseWithLoaderInBatches(loader as LoaderWithParser, data, options, context);\n}\n\n/**\n * Loader has been selected and context has been prepared, see if we need to emit a metadata batch\n */\nasync function parseWithLoaderInBatches(\n  loader: LoaderWithParser,\n  data: BatchableDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n): Promise<AsyncIterable<any>> {\n  const outputIterator = await parseToOutputIterator(loader, data, options, context);\n\n  // Generate metadata batch if requested\n  if (!options.metadata) {\n    return outputIterator;\n  }\n\n  const metadataBatch = {\n    batchType: 'metadata',\n    metadata: {\n      _loader: loader,\n      _context: context\n    },\n    // Populate with some default fields to avoid crashing\n    data: [],\n    bytesUsed: 0\n  };\n\n  async function* makeMetadataBatchIterator(iterator) {\n    yield metadataBatch;\n    yield* iterator;\n  }\n\n  return makeMetadataBatchIterator(outputIterator);\n}\n\n/**\n * Prep work is done, now it is time to start parsing into an output operator\n * The approach depends on which parse function the loader exposes\n * `parseInBatches` (preferred), `parse` (fallback)\n */\nasync function parseToOutputIterator(\n  loader: LoaderWithParser,\n  data: BatchableDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n): Promise<AsyncIterable<any>> {\n  // Get an iterator from the input\n  const inputIterator = await getAsyncIterableFromData(data, options);\n\n  // Apply any iterator transforms (options.transforms)\n  const transformedIterator = await applyInputTransforms(inputIterator, options?.transforms || []);\n\n  // If loader supports parseInBatches, we are done\n  if (loader.parseInBatches) {\n    return loader.parseInBatches(transformedIterator, options, context);\n  }\n\n  // Fallback: load atomically using `parse` concatenating input iterator into single chunk\n  async function* parseChunkInBatches() {\n    const arrayBuffer = await concatenateArrayBuffersAsync(transformedIterator);\n    // Call `parse` instead of `loader.parse` to ensure we can call workers etc.\n    const parsedData = await parse(\n      arrayBuffer,\n      loader,\n      // TODO - Hack: supply loaders MIME type to ensure we match it\n      {...options, mimeType: loader.mimeTypes[0]},\n      context\n    );\n    // yield a single batch, the output from loader.parse()\n    // TODO - run through batch builder to apply options etc...\n    const batch: Batch = {\n      mimeType: loader.mimeTypes[0],\n      shape: Array.isArray(parsedData) ? 'row-table' : 'unknown',\n      batchType: 'data',\n      data: parsedData,\n      length: Array.isArray(parsedData) ? parsedData.length : 1\n    };\n    yield batch;\n  }\n\n  return parseChunkInBatches();\n}\n\ntype TransformBatches = (\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n) => AsyncIterable<ArrayBuffer>;\n\n/**\n * Create an iterator chain with any transform iterators (crypto, decompression)\n * @param inputIterator\n * @param options\n */\nasync function applyInputTransforms(\n  inputIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  transforms: TransformBatches[] = []\n): Promise<AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>> {\n  let iteratorChain = inputIterator;\n  for await (const transformBatches of transforms) {\n    iteratorChain = transformBatches(iteratorChain);\n  }\n  return iteratorChain;\n}\n","import type {Writer, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {concatenateArrayBuffers, resolvePath} from '@loaders.gl/loader-utils';\nimport {isBrowser} from '@loaders.gl/loader-utils';\nimport {writeFile} from '../fetch/write-file';\nimport {fetchFile} from '../fetch/fetch-file';\n\n/**\n * Encode loaded data into a binary ArrayBuffer using the specified Writer.\n */\nexport async function encode(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): Promise<ArrayBuffer> {\n  if (writer.encode) {\n    return await writer.encode(data, options);\n  }\n\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n\n  if (writer.encodeText) {\n    return new TextEncoder().encode(await writer.encodeText(data, options));\n  }\n\n  if (writer.encodeInBatches) {\n    // Create an iterator representing the data\n    // TODO - Assumes this is a table\n    const batches = encodeInBatches(data, writer, options);\n\n    // Concatenate the output\n    const chunks: any[] = [];\n    for await (const batch of batches) {\n      chunks.push(batch);\n    }\n    // @ts-ignore\n    return concatenateArrayBuffers(...chunks);\n  }\n\n  if (!isBrowser && writer.encodeURLtoURL) {\n    // TODO - how to generate filenames with correct extensions?\n    const tmpInputFilename = getTemporaryFilename('input');\n    await writeFile(tmpInputFilename, data);\n\n    const tmpOutputFilename = getTemporaryFilename('output');\n\n    const outputFilename = await encodeURLtoURL(\n      tmpInputFilename,\n      tmpOutputFilename,\n      writer,\n      options\n    );\n\n    const response = await fetchFile(outputFilename);\n    return response.arrayBuffer();\n  }\n\n  throw new Error('Writer could not encode data');\n}\n\n/**\n * Encode loaded data into a binary ArrayBuffer using the specified Writer.\n */\nexport function encodeSync(data: any, writer: Writer, options?: LoaderOptions): ArrayBuffer {\n  if (writer.encodeSync) {\n    return writer.encodeSync(data, options);\n  }\n  throw new Error('Writer could not synchronously encode data');\n}\n\n/**\n * Encode loaded data to text using the specified Writer\n * @note This is a convenience function not intended for production use on large input data.\n * It is not optimized for performance. Data maybe converted from text to binary and back.\n * @throws if the writer does not generate text output\n */\nexport async function encodeText(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): Promise<string> {\n  if (writer.text && writer.encodeText) {\n    return await writer.encodeText(data, options);\n  }\n\n  if (writer.text && (writer.encode || writer.encodeInBatches)) {\n    const arrayBuffer = await encode(data, writer, options);\n    return new TextDecoder().decode(arrayBuffer);\n  }\n\n  throw new Error('Writer could not encode data as text');\n}\n\n/**\n * Encode loaded data into a sequence (iterator) of binary ArrayBuffers using the specified Writer.\n */\nexport function encodeInBatches(\n  data: any,\n  writer: Writer,\n  options?: LoaderOptions\n): AsyncIterable<ArrayBuffer> {\n  if (writer.encodeInBatches) {\n    const dataIterator = getIterator(data);\n    return writer.encodeInBatches(dataIterator, options);\n  }\n  // TODO -fall back to atomic encode?\n  throw new Error('Writer could not encode data in batches');\n}\n\n/**\n * Encode data stored in a file (on disk) to another file.\n * @note Node.js only. This function enables using command-line converters as \"writers\".\n */\nexport async function encodeURLtoURL(\n  inputUrl,\n  outputUrl,\n  writer: Writer,\n  options\n): Promise<string> {\n  inputUrl = resolvePath(inputUrl);\n  outputUrl = resolvePath(outputUrl);\n  if (isBrowser || !writer.encodeURLtoURL) {\n    throw new Error();\n  }\n  const outputFilename = await writer.encodeURLtoURL(inputUrl, outputUrl, options);\n  return outputFilename;\n}\n\n/**\n * @todo TODO - this is an unacceptable hack!!!\n */\nfunction getIterator(data) {\n  const dataIterator = [{table: data, start: 0, end: data.length}];\n  return dataIterator;\n}\n\n/**\n * @todo Move to utils\n */\nfunction getTemporaryFilename(filename: string): string {\n  return `/tmp/${filename}`;\n}\n","export type MakeDOMStreamOptions = {\n  /** Stream allocates an arrayBuffer. Enables use of a default reader. */\n  autoAllocateChunkSize?: number;\n  /** Total number of chunks in queue before back pressure is applied */\n  highWaterMark?: number;\n};\n\n/** Builds a DOM stream from an iterator */\nexport function makeDOMStream<ArrayBuffer>(\n  source: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: MakeDOMStreamOptions\n): ReadableStream {\n  const iterator = source[Symbol.asyncIterator]\n    ? source[Symbol.asyncIterator]()\n    : source[Symbol.iterator]();\n\n  return new ReadableStream<Uint8Array>(\n    {\n      // Create a byte stream (enables `Response(stream).arrayBuffer()`)\n      // Only supported on Chrome\n      // See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController\n      // @ts-expect-error Only Chrome supports byte streams\n      type: 'bytes',\n\n      async pull(controller) {\n        try {\n          const {done, value} = await iterator.next();\n          if (done) {\n            controller.close();\n          } else {\n            // TODO - ignores controller.desiredSize\n            controller.enqueue(new Uint8Array(value));\n          }\n        } catch (error) {\n          controller.error(error);\n        }\n      },\n\n      async cancel() {\n        await iterator?.return?.();\n      }\n    },\n    // options: QueingStrategy<Uint8Array>\n    {\n      // This is bytes, not chunks\n      highWaterMark: 2 ** 24,\n      ...options\n    }\n  );\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Quaternion, Vector3, Matrix3, Matrix4, degrees} from '@math.gl/core';\nimport {BoundingSphere, OrientedBoundingBox} from '@math.gl/culling';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {assert} from '@loaders.gl/loader-utils';\n\n// const scratchProjectedBoundingSphere = new BoundingSphere();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n// const scratchMatrix = new Matrix3();\nconst scratchScale = new Vector3();\nconst scratchNorthWest = new Vector3();\nconst scratchSouthEast = new Vector3();\n// const scratchRectangle = new Rectangle();\n// const scratchOrientedBoundingBox = new OrientedBoundingBox();\nconst scratchTransform = new Matrix4();\n\n/**\n * Create a bounding volume from the tile's bounding volume header.\n * @param {Object} boundingVolumeHeader The tile's bounding volume header.\n * @param {Matrix4} transform The transform to apply to the bounding volume.\n * @param [result] The object onto which to store the result.\n * @returns The modified result parameter or a new TileBoundingVolume instance if none was provided.\n */\nexport function createBoundingVolume(boundingVolumeHeader, transform, result) {\n  assert(boundingVolumeHeader, '3D Tile: boundingVolume must be defined');\n\n  // boundingVolume schema:\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/schema/boundingVolume.schema.json\n  if (boundingVolumeHeader.box) {\n    return createBox(boundingVolumeHeader.box, transform, result);\n  }\n  if (boundingVolumeHeader.region) {\n    // [west, south, east, north, minimum height, maximum height]\n    // Latitudes and longitudes are in the WGS 84 datum as defined in EPSG 4979 and are in radians.\n    // Heights are in meters above (or below) the WGS 84 ellipsoid.\n    const [west, south, east, north, minHeight, maxHeight] = boundingVolumeHeader.region;\n\n    const northWest = Ellipsoid.WGS84.cartographicToCartesian(\n      [degrees(west), degrees(north), minHeight],\n      scratchNorthWest\n    );\n    const southEast = Ellipsoid.WGS84.cartographicToCartesian(\n      [degrees(east), degrees(south), maxHeight],\n      scratchSouthEast\n    );\n    const centerInCartesian = new Vector3().addVectors(northWest, southEast).multiplyScalar(0.5);\n    const radius = new Vector3().subVectors(northWest, southEast).len() / 2.0;\n\n    // TODO improve region boundingVolume\n    // for now, create a sphere as the boundingVolume instead of box\n    return createSphere(\n      [centerInCartesian[0], centerInCartesian[1], centerInCartesian[2], radius],\n      new Matrix4()\n    );\n  }\n\n  if (boundingVolumeHeader.sphere) {\n    return createSphere(boundingVolumeHeader.sphere, transform, result);\n  }\n\n  throw new Error('3D Tile: boundingVolume must contain a sphere, region, or box');\n}\n\nfunction createBox(box, transform, result) {\n  // https://math.gl/modules/culling/docs/api-reference/oriented-bounding-box\n  // 1. A half-axes based representation.\n  // box: An array of 12 numbers that define an oriented bounding box.\n  // The first three elements define the x, y, and z values for the center of the box.\n  // The next three elements (with indices 3, 4, and 5) define the x axis direction and half-length.\n  // The next three elements (indices 6, 7, and 8) define the y axis direction and half-length.\n  // The last three elements (indices 9, 10, and 11) define the z axis direction and half-length.\n  // 2. A half-size-quaternion based representation.\n  // box: An array of 10 numbers that define an oriented bounding box.\n  // The first three elements define the x, y, and z values for the center of the box in a right-handed 3-axis (x, y, z) Cartesian coordinate system where the z-axis is up.\n  // The next three elements (with indices 3, 4, and 5) define the halfSize.\n  // The last four elements (indices 6, 7, 8 and 10) define the quaternion.\n  const center = new Vector3(box[0], box[1], box[2]);\n  transform.transform(center, center);\n  let origin: number[] = [];\n  if (box.length === 10) {\n    const halfSize = box.slice(3, 6);\n    const quaternion = new Quaternion();\n    quaternion.fromArray(box, 6);\n    const x = new Vector3([1, 0, 0]);\n    const y = new Vector3([0, 1, 0]);\n    const z = new Vector3([0, 0, 1]);\n    x.transformByQuaternion(quaternion);\n    x.scale(halfSize[0]);\n    y.transformByQuaternion(quaternion);\n    y.scale(halfSize[1]);\n    z.transformByQuaternion(quaternion);\n    z.scale(halfSize[2]);\n    origin = [...x.toArray(), ...y.toArray(), ...z.toArray()];\n  } else {\n    origin = [...box.slice(3, 6), ...box.slice(6, 9), ...box.slice(9, 12)];\n  }\n  const xAxis = transform.transformAsVector(origin.slice(0, 3));\n  const yAxis = transform.transformAsVector(origin.slice(3, 6));\n  const zAxis = transform.transformAsVector(origin.slice(6, 9));\n  const halfAxes = new Matrix3([\n    xAxis[0],\n    xAxis[1],\n    xAxis[2],\n    yAxis[0],\n    yAxis[1],\n    yAxis[2],\n    zAxis[0],\n    zAxis[1],\n    zAxis[2]\n  ]);\n\n  if (defined(result)) {\n    result.center = center;\n    result.halfAxes = halfAxes;\n    return result;\n  }\n\n  return new OrientedBoundingBox(center, halfAxes);\n}\n\n/*\nfunction createBoxFromTransformedRegion(region, transform, initialTransform, result) {\n  const rectangle = Rectangle.unpack(region, 0, scratchRectangle);\n  const minimumHeight = region[4];\n  const maximumHeight = region[5];\n\n  const orientedBoundingBox = OrientedBoundingBox.fromRectangle(\n    rectangle,\n    minimumHeight,\n    maximumHeight,\n    Ellipsoid.WGS84,\n    scratchOrientedBoundingBox\n  );\n  const center = orientedBoundingBox.center;\n  const halfAxes = orientedBoundingBox.halfAxes;\n\n  // A region bounding volume is not transformed by the transform in the tileset JSON,\n  // but may be transformed by additional transforms applied in Cesium.\n  // This is why the transform is calculated as the difference between the initial transform and the current transform.\n  transform = Matrix4.multiplyTransformation(\n    transform,\n    Matrix4.inverseTransformation(initialTransform, scratchTransform),\n    scratchTransform\n  );\n  center = Matrix4.multiplyByPoint(transform, center, center);\n  const rotationScale = Matrix4.getRotation(transform, scratchMatrix);\n  halfAxes = Matrix3.multiply(rotationScale, halfAxes, halfAxes);\n\n  if (defined(result) && result instanceof TileOrientedBoundingBox) {\n    result.update(center, halfAxes);\n    return result;\n  }\n\n  return new TileOrientedBoundingBox(center, halfAxes);\n}\n\nfunction createRegion(region, transform, initialTransform, result) {\n  if (!Matrix4.equalsEpsilon(transform, initialTransform, CesiumMath.EPSILON8)) {\n    return createBoxFromTransformedRegion(region, transform, initialTransform, result);\n  }\n\n  if (defined(result)) {\n    return result;\n  }\n\n  const rectangleRegion = Rectangle.unpack(region, 0, scratchRectangle);\n\n  return new TileBoundingRegion({\n    rectangle: rectangleRegion,\n    minimumHeight: region[4],\n    maximumHeight: region[5]\n  });\n}\n*/\n\nfunction createSphere(sphere, transform, result?) {\n  // Find the transformed center\n  const center = new Vector3(sphere[0], sphere[1], sphere[2]);\n  transform.transform(center, center);\n  const scale = transform.getScale(scratchScale);\n\n  const uniformScale = Math.max(Math.max(scale[0], scale[1]), scale[2]);\n  const radius = sphere[3] * uniformScale;\n\n  if (defined(result)) {\n    result.center = center;\n    result.radius = radius;\n    return result;\n  }\n\n  return new BoundingSphere(center, radius);\n}\n","import {toRadians} from '@math.gl/core';\n\nconst WGS84_RADIUS_X = 6378137.0;\n// use this to bias the lod switching  (1+ results in increasing the LOD quality)\nconst qualityFactor = Math.PI / 2; // empirical derived bias factor\n/* eslint-disable max-statements */\nexport function lodJudge(tile, frameState) {\n  const viewport = frameState.viewport;\n  const metersPerPixel = viewport.metersPerPixel;\n\n  const mbsLat = tile.header.mbs[1];\n  const mbsLon = tile.header.mbs[0];\n  const mbsZ = tile.header.mbs[2];\n  const mbsR = tile.header.mbs[3];\n\n  const {height, width, latitude, longitude} = viewport;\n\n  const viewportCenter = [longitude, latitude];\n  const mbsCenter = [mbsLon, mbsLat, mbsZ];\n  const mbsLatProjected = [longitude, mbsLat];\n  const mbsLonProjected = [mbsLon, latitude];\n\n  const diagonalInMeters = Math.sqrt(height * height + width * width) * metersPerPixel[0];\n  const distanceInMeters = getDistanceFromLatLon(viewportCenter, mbsCenter);\n\n  const visibleHeight = height * 0.5 + mbsR / WGS84_RADIUS_X;\n  const visibleWidth = width * 0.5 + mbsR / WGS84_RADIUS_X;\n\n  if (distanceInMeters > diagonalInMeters + mbsR / WGS84_RADIUS_X) {\n    return 'OUT';\n  }\n  if (getDistanceFromLatLon(viewportCenter, mbsLatProjected) > visibleHeight) {\n    return 'OUT';\n  }\n  if (getDistanceFromLatLon(viewportCenter, mbsLonProjected) > visibleWidth) {\n    return 'OUT';\n  }\n\n  if (tile.lodMetricValue === 0) {\n    return 'DIG';\n  }\n\n  // For the maxScreenThreshold error metric, maxError means that you should replace the node with it's children\n  // as soon as the nodes bounding sphere has a screen radius larger than maxError pixels.\n  // In this sense a value of 0 means you should always load it's children,\n  // or if it's a leaf node, you should always display it.\n  let screenSize = getI3ScreenSize(tile, frameState); // in pixels\n  screenSize *= qualityFactor;\n  if (screenSize < 0.5) {\n    return 'OUT';\n  }\n  if (!tile.header.children || screenSize <= tile.lodMetricValue) {\n    return 'DRAW';\n  } else if (tile.header.children) {\n    return 'DIG';\n  }\n  return 'OUT';\n}\n\n/* eslint-enable max-statements */\n\nfunction projectVertexToSphere([x, y, z]) {\n  const azim = toRadians(x);\n  const incl = toRadians(y);\n  const radius = 1.0 + z / WGS84_RADIUS_X;\n  const radCosInc = radius * Math.cos(incl);\n  x = radCosInc * Math.cos(azim);\n  y = radCosInc * Math.sin(azim);\n  z = radius * Math.sin(incl);\n  return [x, y, z];\n}\n\nfunction getDistanceFromLatLon(observer: number[], center: number[]) {\n  const [observerLon, observerLat, observerZ = 0.0] = observer;\n  const [centerLon, centerLat, centerZ = 0.0] = center;\n\n  const projectedCenter = projectVertexToSphere([centerLon, centerLat, centerZ]);\n  const projectedObserver = projectVertexToSphere([observerLon, observerLat, observerZ]);\n  const dx = projectedObserver[0] - projectedCenter[0];\n  const dy = projectedObserver[1] - projectedCenter[1];\n  const dz = projectedObserver[2] - projectedCenter[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\nexport function getI3ScreenSize(tile, frameState) {\n  const viewport = frameState.viewport;\n  const mbsLat = tile.header.mbs[1];\n  const mbsLon = tile.header.mbs[0];\n  const mbsZ = tile.header.mbs[2];\n  const mbsR = tile.header.mbs[3];\n\n  const mbsCenter = [mbsLon, mbsLat, mbsZ];\n  const cameraPositionCartographic = viewport.unprojectPosition(viewport.cameraPosition);\n  const dSquared = getDistanceFromLatLon(cameraPositionCartographic, mbsCenter);\n  const mbsRNormalized = mbsR / WGS84_RADIUS_X;\n  const d = dSquared - mbsRNormalized * mbsRNormalized;\n  const fltMax = 3.4028235e38; // convert from 0x7f7fffff which is the maximum\n  if (d <= 0.0) {\n    return 0.5 * fltMax;\n  }\n  // https://stackoverflow.com/questions/21648630/radius-of-projected-sphere-in-screen-space\n  // There is a formula there to calculate projected radius:\n  // return 1.0 / Math.tan(fov) * r / Math.sqrt(d * d - r * r); // Right\n  // Hack: 300 is a Magic number to get the correct LoD. Possibly, d and r are calculated in a wrong way.\n  const screenSizeFactor =\n    ((getTanOfHalfVFAngle(frameState) * mbsRNormalized) / Math.sqrt(d)) * 300;\n  return screenSizeFactor;\n}\n\nfunction getTanOfHalfVFAngle(frameState) {\n  const {projectionMatrix} = frameState.viewport;\n  const t = projectionMatrix[5];\n  return t;\n}\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n// Decode the JSON binary array into clear text\nexport function getStringFromArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n  assert(arrayBuffer instanceof ArrayBuffer);\n  const textDecoder = new TextDecoder('utf8');\n  const typedArray = new Uint8Array(arrayBuffer, byteOffset, byteLength);\n  const string = textDecoder.decode(typedArray);\n  return string;\n}\n\n// Decode the JSON binary array into clear text\nexport function getStringFromTypedArray(typedArray) {\n  assert(ArrayBuffer.isView(typedArray));\n  const textDecoder = new TextDecoder('utf8');\n  const string = textDecoder.decode(typedArray);\n  return string;\n}\n\nexport function getMagicString(arrayBuffer, byteOffset = 0) {\n  const dataView = new DataView(arrayBuffer);\n  return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {DracoMeshData, DracoLoaderData} from './lib/draco-types';\nimport type {DracoLoaderOptions} from './draco-loader';\nimport {DracoLoader as DracoWorkerLoader} from './draco-loader';\nimport DracoParser from './lib/draco-parser';\nimport {loadDracoDecoderModule} from './lib/draco-module-loader';\n\n// Draco data types\n\nexport type {DracoMeshData, DracoLoaderData};\n\n// Draco Writer\n\nexport type {DracoWriterOptions} from './draco-writer';\nexport {DracoWriter} from './draco-writer';\n\n// Draco Loader\n\nexport type {DracoLoaderOptions};\nexport {DracoWorkerLoader};\n\n/**\n * Loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  ...DracoWorkerLoader,\n  parse\n};\n\nasync function parse(\n  arrayBuffer: ArrayBuffer,\n  options?: DracoLoaderOptions\n): Promise<DracoMeshData> {\n  const {draco} = await loadDracoDecoderModule(options);\n  const dracoParser = new DracoParser(draco);\n  try {\n    return dracoParser.parseSync(arrayBuffer, options?.draco);\n  } finally {\n    dracoParser.destroy();\n  }\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckDracoLoader: LoaderWithParser = DracoLoader;\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","// COMMON CATEGORY\nexport type {TypedArray, NumberArray, AnyArray} from './types';\n\nexport type {Batch} from './category/common';\n\n// TABLE CATEGORY TYPES\n\nexport type {\n  Table,\n  ArrayRowTable,\n  ObjectRowTable,\n  ColumnarTable,\n  ArrowTable\n} from './category/table';\nexport type {\n  TableBatch,\n  RowArrayTableBatch,\n  RowObjectTableBatch,\n  ColumnarTableBatch,\n  ArrowTableBatch\n} from './category/table';\n\n// TABLE CATEGORY UTILS\nexport {default as TableBatchBuilder} from './lib/table/table-batch-builder';\nexport type {TableBatchAggregator} from './lib/table/table-batch-aggregator';\nexport {default as RowTableBatchAggregator} from './lib/table/row-table-batch-aggregator';\nexport {default as ColumnarTableBatchAggregator} from './lib/table/columnar-table-batch-aggregator';\n\nexport {convertToObjectRow, convertToArrayRow} from './lib/utils/row-utils';\n\n// MESH CATEGORY\nexport type {MeshTable, MeshArrowTable, Mesh, MeshAttribute} from './category/mesh';\n\n// MESH CATEGORY UTILS\nexport type {Attributes as _Attributes} from './category/mesh/mesh-utils';\nexport {getMeshSize, getMeshBoundingBox} from './category/mesh/mesh-utils';\n\n// TYPES\n// GIS CATEGORY - GEOJSON\nexport type {GeoJSON, Feature, Geometry, Position, GeoJsonProperties} from './category/gis';\nexport type {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n} from './category/gis';\n\n// GIS CATEGORY - BINARY\nexport type {\n  BinaryGeometryType,\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry,\n  BinaryAttribute\n} from './category/gis';\nexport type {\n  BinaryFeatures,\n  BinaryPointFeatures,\n  BinaryLineFeatures,\n  BinaryPolygonFeatures\n} from './category/gis';\n\n// SCHEMA\nexport {\n  Schema,\n  Field,\n  DataType,\n  Null,\n  Binary,\n  Bool,\n  Int,\n  Int8,\n  Int16,\n  Int32,\n  Int64,\n  Uint8,\n  Uint16,\n  Uint32,\n  Uint64,\n  Float,\n  Float16,\n  Float32,\n  Float64,\n  Utf8,\n  Date,\n  DateDay,\n  DateMillisecond,\n  Time,\n  TimeMillisecond,\n  TimeSecond,\n  Timestamp,\n  TimestampSecond,\n  TimestampMillisecond,\n  TimestampMicrosecond,\n  TimestampNanosecond,\n  Interval,\n  IntervalDayTime,\n  IntervalYearMonth,\n  FixedSizeList\n} from './lib/schema';\n\n// SCHEMA UTILS\nexport {deduceTableSchema} from './lib/schema-utils/deduce-table-schema';\nexport {getTypeInfo} from './lib/schema-utils/get-type-info';\nexport {getArrowTypeFromTypedArray} from './lib/schema-utils/type-utils';\n\n// EXPERIMENTAL APIs\nexport {default as AsyncQueue} from './lib/utils/async-queue';\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\n// import type {ArrayRowTableBatch, ObjectRowTableBatch} from '../../category/table';\nimport {convertToArrayRow, convertToObjectRow} from '../utils/row-utils';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  objectRows: {[columnName: string]: any} | null = null;\n  arrayRows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'object-row-table':\n        const rowObject = convertToObjectRow(row, this._headers);\n        this.addObjectRow(rowObject, cursor);\n        break;\n      case 'array-row-table':\n        this.arrayRows = this.arrayRows || new Array(DEFAULT_ROW_COUNT);\n        this.arrayRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    // eslint-disable-next-line default-case\n    switch (this.options.shape) {\n      case 'array-row-table':\n        const rowArray = convertToArrayRow(row, this._headers);\n        this.addArrayRow(rowArray, cursor);\n        break;\n      case 'object-row-table':\n        this.objectRows = this.objectRows || new Array(DEFAULT_ROW_COUNT);\n        this.objectRows[this.length] = row;\n        this.length++;\n        break;\n    }\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.arrayRows || this.objectRows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.arrayRows = null;\n    this.objectRows = null;\n\n    return {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n  }\n}\n","/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n","import type {Schema} from '../schema';\nimport type {ColumnarTableBatch, ArrowTableBatch} from '../../category/table';\nimport {TableBatchAggregator} from './table-batch-aggregator';\n\ntype ColumnarTableBatchOptions = {};\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class ColumnarTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  length: number = 0;\n  allocated: number = 0;\n  columns: {[columnName: string]: any[]} = {};\n\n  constructor(schema: Schema, options: ColumnarTableBatchOptions) {\n    this.schema = schema;\n    this._reallocateColumns();\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[]) {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    let i = 0;\n    // TODO what if no csv header, columns not populated?\n    for (const fieldName in this.columns) {\n      this.columns[fieldName][this.length] = row[i++];\n    }\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}): void {\n    // If user keeps pushing rows beyond batch size, reallocate\n    this._reallocateColumns();\n    for (const fieldName in row) {\n      this.columns[fieldName][this.length] = row[fieldName];\n    }\n    this.length++;\n  }\n\n  getBatch(): ColumnarTableBatch | ArrowTableBatch | null {\n    this._pruneColumns();\n    const columns = Array.isArray(this.schema) ? this.columns : {};\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    // columns should match schema format\n    if (!Array.isArray(this.schema)) {\n      for (const fieldName in this.schema) {\n        const field = this.schema[fieldName];\n        columns[field.name] = this.columns[field.index];\n      }\n    }\n\n    this.columns = {};\n\n    const batch: ColumnarTableBatch = {\n      shape: 'columnar-table',\n      batchType: 'data',\n      data: columns,\n      schema: this.schema,\n      length: this.length\n    };\n\n    return batch;\n  }\n\n  // HELPERS\n\n  _reallocateColumns() {\n    if (this.length < this.allocated) {\n      return;\n    }\n\n    // @ts-ignore TODO\n    this.allocated = this.allocated > 0 ? (this.allocated *= 2) : DEFAULT_ROW_COUNT;\n    this.columns = {};\n\n    for (const fieldName in this.schema) {\n      const field = this.schema[fieldName];\n      const ArrayType = field.type || Float32Array;\n      const oldColumn = this.columns[field.index];\n\n      if (oldColumn && ArrayBuffer.isView(oldColumn)) {\n        // Copy the old data to the new array\n        const typedArray = new ArrayType(this.allocated);\n        typedArray.set(oldColumn);\n        this.columns[field.index] = typedArray;\n      } else if (oldColumn) {\n        // Plain array\n        oldColumn.length = this.allocated;\n        this.columns[field.index] = oldColumn;\n      } else {\n        // Create new\n        this.columns[field.index] = new ArrayType(this.allocated);\n      }\n    }\n  }\n\n  _pruneColumns() {\n    for (const [columnName, column] of Object.entries(this.columns)) {\n      this.columns[columnName] = column.slice(0, this.length);\n    }\n  }\n}\n","// Dynamic DRACO module loading inspired by THREE.DRACOLoader\n// https://github.com/mrdoob/three.js/blob/398c4f39ebdb8b23eefd4a7a5ec49ec0c96c7462/examples/jsm/loaders/DRACOLoader.js\n// by Don McCurdy / https://www.donmccurdy.com / MIT license\n\nimport {loadLibrary} from '@loaders.gl/worker-utils';\n\nconst DRACO_VERSION = '1.4.1';\nconst DRACO_JS_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_decoder.js`;\nconst DRACO_WASM_WRAPPER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_wasm_wrapper.js`;\nconst DRACO_WASM_DECODER_URL = `https://www.gstatic.com/draco/versioned/decoders/${DRACO_VERSION}/draco_decoder.wasm`;\n\nconst DRACO_ENCODER_URL = `https://raw.githubusercontent.com/google/draco/${DRACO_VERSION}/javascript/draco_encoder.js`;\n\nlet loadDecoderPromise;\nlet loadEncoderPromise;\n\nexport async function loadDracoDecoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadDecoderPromise =\n      loadDecoderPromise ||\n      modules.draco3d.createDecoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadDecoderPromise = loadDecoderPromise || loadDracoDecoder(options);\n  }\n  return await loadDecoderPromise;\n}\n\nexport async function loadDracoEncoderModule(options) {\n  const modules = options.modules || {};\n\n  // Check if a bundled draco3d library has been supplied by application\n  if (modules.draco3d) {\n    loadEncoderPromise =\n      loadEncoderPromise ||\n      modules.draco3d.createEncoderModule({}).then((draco) => {\n        return {draco};\n      });\n  } else {\n    // If not, dynamically load the WASM script from our CDN\n    loadEncoderPromise = loadEncoderPromise || loadDracoEncoder(options);\n  }\n  return await loadEncoderPromise;\n}\n\n// DRACO DECODER LOADING\n\nasync function loadDracoDecoder(options) {\n  let DracoDecoderModule;\n  let wasmBinary;\n  switch (options.draco && options.draco.decoderType) {\n    case 'js':\n      DracoDecoderModule = await loadLibrary(DRACO_JS_DECODER_URL, 'draco', options);\n      break;\n\n    case 'wasm':\n    default:\n      [DracoDecoderModule, wasmBinary] = await Promise.all([\n        await loadLibrary(DRACO_WASM_WRAPPER_URL, 'draco', options),\n        await loadLibrary(DRACO_WASM_DECODER_URL, 'draco', options)\n      ]);\n  }\n  // Depends on how import happened...\n  // @ts-ignore\n  DracoDecoderModule = DracoDecoderModule || globalThis.DracoDecoderModule;\n  return await initializeDracoDecoder(DracoDecoderModule, wasmBinary);\n}\n\nfunction initializeDracoDecoder(DracoDecoderModule, wasmBinary) {\n  const options: {wasmBinary?: any} = {};\n  if (wasmBinary) {\n    options.wasmBinary = wasmBinary;\n  }\n\n  return new Promise((resolve) => {\n    DracoDecoderModule({\n      ...options,\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n\n// ENCODER\n\nasync function loadDracoEncoder(options) {\n  let DracoEncoderModule = await loadLibrary(DRACO_ENCODER_URL, 'draco', options);\n  // @ts-ignore\n  DracoEncoderModule = DracoEncoderModule || globalThis.DracoEncoderModule;\n\n  return new Promise((resolve) => {\n    DracoEncoderModule({\n      onModuleLoaded: (draco) => resolve({draco}) // Module is Promise-like. Wrap in object to avoid loop.\n    });\n  });\n}\n","/**\n * Checking if it is geometry\n * @param geometry\n */\nexport default function isGeometry(geometry: any): boolean {\n  return (\n    geometry &&\n    typeof geometry === 'object' &&\n    geometry.mode &&\n    geometry.attributes &&\n    typeof geometry.attributes === 'object'\n  );\n}\n","import {GL} from '../constants';\nimport {getPrimitiveModeType} from '../primitives/modes';\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * Iteration info for making primitive iterator\n */\ntype Information = {\n  attributes: object;\n  type: number | void;\n  i1: number;\n  i2: number;\n  i3: number;\n  primitiveIndex?: object;\n};\n/**\n * Will iterate over each primitive, expanding (dereferencing) indices\n * @param indices\n * @param attributes\n * @param mode\n * @param start\n * @param end\n */\n// eslint-disable-next-line complexity\nexport function* makePrimitiveIterator(\n  indices?: any,\n  attributes: object = {},\n  mode?: number,\n  start = 0,\n  end?: number\n): Iterable<{attributes: object; type: number; i1: number; i2: number; i3: number}> {\n  // support indices being an object with a values array\n  if (indices) {\n    indices = indices.values || indices.value || indices;\n  }\n\n  // Autodeduce length from indices\n  if (end === undefined) {\n    end = indices ? indices.length : start;\n  }\n\n  // iteration info\n  const info: Information = {\n    attributes,\n    type: getPrimitiveModeType(mode),\n    i1: 0,\n    i2: 0,\n    i3: 0\n  };\n\n  let i = start;\n  // @ts-ignore\n  while (i < end) {\n    switch (mode) {\n      case GL.POINTS: // draw single points.\n        info.i1 = i;\n        i += 1;\n        break;\n      case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n        info.i1 = i;\n        info.i2 = i + 1;\n        i += 2;\n        break;\n      case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n        info.i1 = i;\n        info.i2 = i + 1;\n        i += 1;\n        break;\n      case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n        info.i1 = i;\n        info.i2 = i + 1;\n        i += 1;\n        break;\n      case GL.TRIANGLES: // draw triangles. Each set of three vertices creates a separate triangle.\n        info.i1 = i;\n        info.i2 = i + 1;\n        info.i3 = i + 2;\n        i += 3;\n        break;\n      case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n        info.i1 = i;\n        info.i2 = i + 1;\n        i += 1;\n        break;\n      case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n        info.i1 = 1;\n        info.i2 = i;\n        info.i3 = i + 1;\n        i += 1;\n        break;\n\n      default:\n        assert(false);\n    }\n\n    // if indices are present, lookup actual vertices in indices\n    if (indices) {\n      if ('i1' in info) {\n        info.i1 = indices[info.i1];\n        info.i2 = indices[info.i2];\n        info.i3 = indices[info.i3];\n      }\n    }\n    // @ts-ignore\n    yield info;\n  }\n}\n","import {GL} from '../constants';\n\n/**\n * Different methods of working with geometries depending on glType\n /**\n\n/**\n * @param mode\n * @returns draw points | lines | triangles\n */\nexport function getPrimitiveModeType(mode?: number): number {\n  switch (mode) {\n    case GL.POINTS: // draw single points.\n      return GL.POINTS;\n    case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n      return GL.LINES;\n    case GL.TRIANGLES:\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return GL.TRIANGLES;\n    default:\n      throw new Error('Unknown primitive mode');\n  }\n}\n/**\n * @param mode\n * @returns true | false\n */\nexport function isPrimitiveModeExpandable(mode: number): boolean {\n  switch (mode) {\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return true;\n    default:\n      return false;\n  }\n}\n/**\n * Returns new length depends on glType\n * @param mode\n * @param length\n * @returns new length\n */\nexport function getPrimitiveModeExpandedLength(mode: number, length: number): number {\n  switch (mode) {\n    case GL.POINTS: // draw single points.\n      return length;\n    case GL.LINES: // draw lines. Each set of two vertices is treated as a separate line segment.\n      return length;\n    case GL.LINE_STRIP: // draw lines. Each vertex connects to the one after it.\n      return length;\n    case GL.LINE_LOOP: // draw a connected group of line segments from the first vertex to the last\n      return length + 1;\n    case GL.TRIANGLES: // draw triangles. Each set of three vertices creates a separate triangle.\n      return length;\n    case GL.TRIANGLE_STRIP: // draw a connected group of triangles.\n    case GL.TRIANGLE_FAN: // draw a connected group of triangles.\n      return (length - 2) * 3;\n    default:\n      throw new Error('Unknown length');\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - should we automatically parse the embedded glTF or leave it to the app?\n// - I.e. some apps might work directly on a GLB, in that case no need for us to decode...\n// - And if we decode, do we still keep the GLB in case it is needed?\n// - Do we add an option to control this?\n// - Also, should we have hard dependency on gltf module or use injection or auto-discovery for gltf parser?\n\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport const GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\n\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n\n  // Assume glTF consumes rest of tile\n  const gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  // TODO - We can avoid copy if already 4-byte aligned...\n  // However the rest of the code may not be able to accept byteOffsets, so copy anyway\n  tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n\n  if (byteOffset % 4 === 0) {\n    // tile.gltfArrayBuffer = arrayBuffer;\n    // tile.gltfByteOffset = byteOffset;\n    // tile.gltfByteLength = gltfByteLength;\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    // eslint-disable-next-line\n    console.warn(`${tile.type}: embedded glb is not aligned to a 4-byte boundary.`);\n  }\n\n  // Entire tile is consumed\n  return tile.byteOffset + tile.byteLength;\n}\n\nexport async function extractGLTF(tile, gltfFormat, options, context) {\n  const tile3DOptions = options['3d-tiles'] || {};\n\n  extractGLTFBufferOrURL(tile, gltfFormat, options);\n\n  if (tile3DOptions.loadGLTF) {\n    const {parse, fetch} = context;\n    if (tile.gltfUrl) {\n      tile.gltfArrayBuffer = await fetch(tile.gltfUrl, options);\n      tile.gltfByteOffset = 0;\n    }\n    if (tile.gltfArrayBuffer) {\n      // TODO - Should handle byteOffset... However, not used now...\n      tile.gltf = await parse(tile.gltfArrayBuffer, GLTFLoader, options, context);\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n    }\n  }\n}\n\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n      // This removes all white space and null characters from the end of the string.\n      const gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      const textDecoder = new TextDecoder();\n      const gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n    default:\n      throw new Error(`b3dm: Illegal glTF format field`);\n  }\n}\n","// TYPES\nexport type {ImageDataType, ImageType, ImageTypeEnum} from './types';\n\n// LOADERS AND WRITERS\nexport {ImageLoader} from './image-loader';\nexport {ImageWriter} from './image-writer';\n\n// IMAGE CATEGORY API\n\n// Binary Image API\nexport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\n// Parsed Image API\nexport {isImageTypeSupported, getDefaultImageType} from './lib/category-api/image-type';\n\nexport {\n  isImage,\n  getImageType,\n  getImageSize,\n  getImageData\n} from './lib/category-api/parsed-image-api';\n\n// DEPRECATED - Remove in V3 (fix dependency in luma.gl)\nexport {loadImage} from './lib/texture-api/load-image';\n","// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n","import {assert} from '../utils/assert';\nimport {isImageTypeSupported, getDefaultImageType} from '../category-api/image-type';\nimport {getImageData} from '../category-api/parsed-image-api';\nimport parseToImage from './parse-to-image';\nimport parseToImageBitmap from './parse-to-image-bitmap';\nimport parseToNodeImage from './parse-to-node-image';\n\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport default async function parseImage(arrayBuffer, options, context) {\n  options = options || {};\n  const imageOptions = options.image || {};\n\n  // The user can request a specific output format via `options.image.type`\n  const imageType = imageOptions.type || 'auto';\n\n  const {url} = context || {};\n\n  // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n  const loadType = getLoadableImageType(imageType);\n\n  let image;\n  switch (loadType) {\n    case 'imagebitmap':\n      image = await parseToImageBitmap(arrayBuffer, options, url);\n      break;\n    case 'image':\n      image = await parseToImage(arrayBuffer, options, url);\n      break;\n    case 'data':\n      // Node.js loads imagedata directly\n      image = await parseToNodeImage(arrayBuffer, options);\n      break;\n    default:\n      assert(false);\n  }\n\n  // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n  if (imageType === 'data') {\n    image = getImageData(image);\n  }\n\n  return image;\n}\n\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n  switch (type) {\n    case 'auto':\n    case 'data':\n      // Browser: For image data we need still need to load using an image format\n      // Node: the default image type is `data`.\n      return getDefaultImageType();\n    default:\n      // Throw an error if not supported\n      isImageTypeSupported(type);\n      return type;\n  }\n}\n","import type {ImageTypeEnum} from '../../types';\nimport {global, isBrowser} from '../utils/globals';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_parseImageNode} = global;\n\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type: string): boolean {\n  switch (type) {\n    case 'auto':\n      // Should only ever be false in Node.js, if polyfills have not been installed...\n      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n\n    case 'imagebitmap':\n      return IMAGE_BITMAP_SUPPORTED;\n    case 'image':\n      return IMAGE_SUPPORTED;\n    case 'data':\n      return DATA_SUPPORTED;\n\n    default:\n      throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n  }\n}\n\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType(): ImageTypeEnum {\n  if (IMAGE_BITMAP_SUPPORTED) {\n    return 'imagebitmap';\n  }\n  if (IMAGE_SUPPORTED) {\n    return 'image';\n  }\n  if (DATA_SUPPORTED) {\n    return 'data';\n  }\n\n  // This should only happen in Node.js\n  throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n","import {getBlobOrSVGDataUrl} from './svg-utils';\n\n// Parses html image from array buffer\nexport default async function parseToImage(arrayBuffer, options, url) {\n  // Note: image parsing requires conversion to Blob (for createObjectURL).\n  // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n  // But presumably not worth adding 'blob' flag to loader objects?\n\n  const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n  const URL = self.URL || self.webkitURL;\n  const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n  try {\n    return await loadToImage(objectUrl || blobOrDataUrl, options);\n  } finally {\n    if (objectUrl) {\n      URL.revokeObjectURL(objectUrl);\n    }\n  }\n}\n\nexport async function loadToImage(url, options) {\n  const image = new Image();\n  image.src = url;\n\n  // The `image.onload()` callback does not guarantee that the image has been decoded\n  // so a main thread \"freeze\" can be incurred when using the image for the first time.\n  // `Image.decode()` returns a promise that completes when image is decoded.\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n  // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n  // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n  if (options.image && options.image.decode && image.decode) {\n    await image.decode();\n    return image;\n  }\n\n  // Create a promise that tracks onload/onerror callbacks\n  return await new Promise((resolve, reject) => {\n    try {\n      image.onload = () => resolve(image);\n      image.onerror = (err) => reject(new Error(`Could not load image ${url}: ${err}`));\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nexport function isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // Prepare a properly tagged data URL, and load using normal mechanism\n    const textDecoder = new TextDecoder();\n    const xmlText = textDecoder.decode(arrayBuffer);\n    // TODO Escape in browser to support e.g. Chinese characters\n    // if (typeof unescape === 'function' && typeof encodeURLComponent === 'function') {\n    //   xmlText = unescape(encodeURLComponent(xmlText));\n    // }\n    // base64 encoding is safer. utf-8 fails in some browsers\n    const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n    return src;\n  }\n  return getBlob(arrayBuffer, url);\n}\n\nexport function getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n    // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n    throw new Error('SVG cannot be parsed directly to imagebitmap');\n  }\n  // TODO - how to determine mime type? Param? Sniff here?\n  return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n","import {assert} from '../utils/assert';\nimport {getAccessorArrayTypeAndLength} from '../gltf-utils/gltf-utils';\n\n// This is a post processor for loaded glTF files\n// The goal is to make the loaded data easier to use in WebGL applications\n//\n// Functions:\n// * Resolve indexed arrays structure of glTF into a linked tree.\n// * Translate stringified enum keys and values into WebGL constants.\n// * Load images (optional)\n\n// ENUM LOOKUP\n\nconst COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nconst BYTES = {\n  5120: 1, // BYTE\n  5121: 1, // UNSIGNED_BYTE\n  5122: 2, // SHORT\n  5123: 2, // UNSIGNED_SHORT\n  5125: 4, // UNSIGNED_INT\n  5126: 4 // FLOAT\n};\n\nconst GL_SAMPLER = {\n  // Sampler parameters\n  TEXTURE_MAG_FILTER: 0x2800,\n  TEXTURE_MIN_FILTER: 0x2801,\n  TEXTURE_WRAP_S: 0x2802,\n  TEXTURE_WRAP_T: 0x2803,\n\n  // Sampler default values\n  REPEAT: 0x2901,\n  LINEAR: 0x2601,\n  NEAREST_MIPMAP_LINEAR: 0x2702\n};\n\nconst SAMPLER_PARAMETER_GLTF_TO_GL = {\n  magFilter: GL_SAMPLER.TEXTURE_MAG_FILTER,\n  minFilter: GL_SAMPLER.TEXTURE_MIN_FILTER,\n  wrapS: GL_SAMPLER.TEXTURE_WRAP_S,\n  wrapT: GL_SAMPLER.TEXTURE_WRAP_T\n};\n\n// When undefined, a sampler with repeat wrapping and auto filtering should be used.\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#texture\nconst DEFAULT_SAMPLER = {\n  [GL_SAMPLER.TEXTURE_MAG_FILTER]: GL_SAMPLER.LINEAR,\n  [GL_SAMPLER.TEXTURE_MIN_FILTER]: GL_SAMPLER.NEAREST_MIPMAP_LINEAR,\n  [GL_SAMPLER.TEXTURE_WRAP_S]: GL_SAMPLER.REPEAT,\n  [GL_SAMPLER.TEXTURE_WRAP_]: GL_SAMPLER.REPEAT\n};\n\nfunction getBytesFromComponentType(componentType) {\n  return BYTES[componentType];\n}\n\nfunction getSizeFromAccessorType(type) {\n  return COMPONENTS[type];\n}\n\nclass GLTFPostProcessor {\n  postProcess(gltf, options = {}) {\n    const {json, buffers = [], images = [], baseUri = ''} = gltf;\n    assert(json);\n\n    this.baseUri = baseUri;\n    this.json = json;\n    this.buffers = buffers;\n    this.images = images;\n\n    this._resolveTree(this.json, options);\n\n    return this.json;\n  }\n\n  // Convert indexed glTF structure into tree structure\n  // cross-link index resolution, enum lookup, convenience calculations\n  // eslint-disable-next-line complexity\n  _resolveTree(json, options = {}) {\n    if (json.bufferViews) {\n      json.bufferViews = json.bufferViews.map((bufView, i) => this._resolveBufferView(bufView, i));\n    }\n    if (json.images) {\n      json.images = json.images.map((image, i) => this._resolveImage(image, i));\n    }\n    if (json.samplers) {\n      json.samplers = json.samplers.map((sampler, i) => this._resolveSampler(sampler, i));\n    }\n    if (json.textures) {\n      json.textures = json.textures.map((texture, i) => this._resolveTexture(texture, i));\n    }\n    if (json.accessors) {\n      json.accessors = json.accessors.map((accessor, i) => this._resolveAccessor(accessor, i));\n    }\n    if (json.materials) {\n      json.materials = json.materials.map((material, i) => this._resolveMaterial(material, i));\n    }\n    if (json.meshes) {\n      json.meshes = json.meshes.map((mesh, i) => this._resolveMesh(mesh, i));\n    }\n    if (json.nodes) {\n      json.nodes = json.nodes.map((node, i) => this._resolveNode(node, i));\n    }\n    if (json.skins) {\n      json.skins = json.skins.map((skin, i) => this._resolveSkin(skin, i));\n    }\n    if (json.scenes) {\n      json.scenes = json.scenes.map((scene, i) => this._resolveScene(scene, i));\n    }\n    if (json.scene !== undefined) {\n      json.scene = json.scenes[this.json.scene];\n    }\n  }\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getCamera(index) {\n    return null; // TODO: fix this\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  _get(array, index) {\n    // check if already resolved\n    if (typeof index === 'object') {\n      return index;\n    }\n    const object = this.json[array] && this.json[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not find ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PARSING HELPERS\n\n  _resolveScene(scene, index) {\n    // scene = {...scene};\n    scene.id = scene.id || `scene-${index}`;\n    scene.nodes = (scene.nodes || []).map((node) => this.getNode(node));\n    return scene;\n  }\n\n  _resolveNode(node, index) {\n    // node = {...node};\n    node.id = node.id || `node-${index}`;\n    if (node.children) {\n      node.children = node.children.map((child) => this.getNode(child));\n    }\n    if (node.mesh !== undefined) {\n      node.mesh = this.getMesh(node.mesh);\n    } else if (node.meshes !== undefined && node.meshes.length) {\n      node.mesh = node.meshes.reduce(\n        (accum, meshIndex) => {\n          const mesh = this.getMesh(meshIndex);\n          accum.id = mesh.id;\n          accum.primitives = accum.primitives.concat(mesh.primitives);\n          return accum;\n        },\n        {primitives: []}\n      );\n    }\n    if (node.camera !== undefined) {\n      node.camera = this.getCamera(node.camera);\n    }\n    if (node.skin !== undefined) {\n      node.skin = this.getSkin(node.skin);\n    }\n    return node;\n  }\n\n  _resolveSkin(skin, index) {\n    // skin = {...skin};\n    skin.id = skin.id || `skin-${index}`;\n    skin.inverseBindMatrices = this.getAccessor(skin.inverseBindMatrices);\n    return skin;\n  }\n\n  _resolveMesh(mesh, index) {\n    // mesh = {...mesh};\n    mesh.id = mesh.id || `mesh-${index}`;\n    if (mesh.primitives) {\n      mesh.primitives = mesh.primitives.map((primitive) => {\n        primitive = {...primitive};\n        const attributes = primitive.attributes;\n        primitive.attributes = {};\n        for (const attribute in attributes) {\n          primitive.attributes[attribute] = this.getAccessor(attributes[attribute]);\n        }\n        if (primitive.indices !== undefined) {\n          primitive.indices = this.getAccessor(primitive.indices);\n        }\n        if (primitive.material !== undefined) {\n          primitive.material = this.getMaterial(primitive.material);\n        }\n        return primitive;\n      });\n    }\n    return mesh;\n  }\n\n  _resolveMaterial(material, index) {\n    // material = {...material};\n    material.id = material.id || `material-${index}`;\n    if (material.normalTexture) {\n      material.normalTexture = {...material.normalTexture};\n      material.normalTexture.texture = this.getTexture(material.normalTexture.index);\n    }\n    if (material.occlusionTexture) {\n      material.occlustionTexture = {...material.occlustionTexture};\n      material.occlusionTexture.texture = this.getTexture(material.occlusionTexture.index);\n    }\n    if (material.emissiveTexture) {\n      material.emmisiveTexture = {...material.emmisiveTexture};\n      material.emissiveTexture.texture = this.getTexture(material.emissiveTexture.index);\n    }\n    if (!material.emissiveFactor) {\n      material.emissiveFactor = material.emmisiveTexture ? [1, 1, 1] : [0, 0, 0];\n    }\n\n    if (material.pbrMetallicRoughness) {\n      material.pbrMetallicRoughness = {...material.pbrMetallicRoughness};\n      const mr = material.pbrMetallicRoughness;\n      if (mr.baseColorTexture) {\n        mr.baseColorTexture = {...mr.baseColorTexture};\n        mr.baseColorTexture.texture = this.getTexture(mr.baseColorTexture.index);\n      }\n      if (mr.metallicRoughnessTexture) {\n        mr.metallicRoughnessTexture = {...mr.metallicRoughnessTexture};\n        mr.metallicRoughnessTexture.texture = this.getTexture(mr.metallicRoughnessTexture.index);\n      }\n    }\n    return material;\n  }\n\n  _resolveAccessor(accessor, index) {\n    // accessor = {...accessor};\n    accessor.id = accessor.id || `accessor-${index}`;\n    if (accessor.bufferView !== undefined) {\n      // Draco encoded meshes don't have bufferView\n      accessor.bufferView = this.getBufferView(accessor.bufferView);\n    }\n\n    // Look up enums\n    accessor.bytesPerComponent = getBytesFromComponentType(accessor.componentType);\n    accessor.components = getSizeFromAccessorType(accessor.type);\n    accessor.bytesPerElement = accessor.bytesPerComponent * accessor.components;\n\n    // Create TypedArray for the accessor\n    // Note: The canonical way to instantiate is to ignore this array and create\n    // WebGLBuffer's using the bufferViews.\n    if (accessor.bufferView) {\n      const buffer = accessor.bufferView.buffer;\n      const {ArrayType, byteLength} = getAccessorArrayTypeAndLength(accessor, accessor.bufferView);\n      const byteOffset =\n        (accessor.bufferView.byteOffset || 0) + (accessor.byteOffset || 0) + buffer.byteOffset;\n      const cutBufffer = buffer.arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n      accessor.value = new ArrayType(cutBufffer);\n    }\n\n    return accessor;\n  }\n\n  _resolveTexture(texture, index) {\n    // texture = {...texture};\n    texture.id = texture.id || `texture-${index}`;\n    texture.sampler = 'sampler' in texture ? this.getSampler(texture.sampler) : DEFAULT_SAMPLER;\n    texture.source = this.getImage(texture.source);\n    return texture;\n  }\n\n  _resolveSampler(sampler, index) {\n    // sampler = {...sampler};\n    sampler.id = sampler.id || `sampler-${index}`;\n    // Map textual parameters to GL parameter values\n    sampler.parameters = {};\n    for (const key in sampler) {\n      const glEnum = this._enumSamplerParameter(key);\n      if (glEnum !== undefined) {\n        sampler.parameters[glEnum] = sampler[key];\n      }\n    }\n    return sampler;\n  }\n\n  _enumSamplerParameter(key) {\n    return SAMPLER_PARAMETER_GLTF_TO_GL[key];\n  }\n\n  _resolveImage(image, index) {\n    // image = {...image};\n    image.id = image.id || `image-${index}`;\n    if (image.bufferView !== undefined) {\n      image.bufferView = this.getBufferView(image.bufferView);\n    }\n\n    // Check if image has been preloaded by the GLTFLoader\n    // If so, link it into the JSON and drop the URI\n    const preloadedImage = this.images[index];\n    if (preloadedImage) {\n      image.image = preloadedImage;\n    }\n\n    return image;\n  }\n\n  _resolveBufferView(bufferView, index) {\n    // bufferView = {...bufferView};\n    bufferView.id = bufferView.id || `bufferView-${index}`;\n    const bufferIndex = bufferView.buffer;\n    bufferView.buffer = this.buffers[bufferIndex];\n\n    const arrayBuffer = this.buffers[bufferIndex].arrayBuffer;\n    let byteOffset = this.buffers[bufferIndex].byteOffset || 0;\n\n    if ('byteOffset' in bufferView) {\n      byteOffset += bufferView.byteOffset;\n    }\n\n    bufferView.data = new Uint8Array(arrayBuffer, byteOffset, bufferView.byteLength);\n    return bufferView;\n  }\n\n  _resolveCamera(camera, index) {\n    camera.id = camera.id || `camera-${index}`;\n    // TODO - create 4x4 matrices\n    if (camera.perspective) {\n      // camera.matrix = createPerspectiveMatrix(camera.perspective);\n    }\n    if (camera.orthographic) {\n      // camera.matrix = createOrthographicMatrix(camera.orthographic);\n    }\n    return camera;\n  }\n}\n\nexport function postProcessGLTF(gltf, options) {\n  return new GLTFPostProcessor().postProcess(gltf, options);\n}\n","/* eslint-disable camelcase, max-statements */\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#glb-file-format-specification\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\nimport type {GLB} from '../types/glb-types';\nimport {padToNBytes, assert} from '@loaders.gl/loader-utils';\n\nexport type GLBParseOptions = {\n  magic?: number;\n  strict?: boolean;\n};\n\nconst MAGIC_glTF = 0x676c5446; // glTF in Big-Endian ASCII\n\nconst GLB_FILE_HEADER_SIZE = 12;\nconst GLB_CHUNK_HEADER_SIZE = 8;\n\nconst GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nconst GLB_CHUNK_TYPE_BIN = 0x004e4942;\nconst GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED = 0; // DEPRECATED - Backward compatibility for old xviz files\nconst GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED = 1; // DEPRECATED - Backward compatibility for old xviz files\n\nconst GLB_V1_CONTENT_FORMAT_JSON = 0x0;\n\nconst LE = true; // Binary GLTF is little endian.\n\nfunction getMagicString(dataView, byteOffset = 0) {\n  return `\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 0))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 1))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 2))}\\\n${String.fromCharCode(dataView.getUint8(byteOffset + 3))}`;\n}\n\n// Check if a data view is a GLB\nexport function isGLB(\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number = 0,\n  options: GLBParseOptions = {}\n): boolean {\n  const dataView = new DataView(arrayBuffer);\n  // Check that GLB Header starts with the magic number\n  const {magic = MAGIC_glTF} = options;\n  const magic1 = dataView.getUint32(byteOffset, false);\n  return magic1 === magic || magic1 === MAGIC_glTF;\n}\n\nexport default function parseGLBSync(\n  glb: GLB,\n  arrayBuffer: ArrayBuffer,\n  byteOffset: number = 0,\n  options: GLBParseOptions = {}\n) {\n  // Check that GLB Header starts with the magic number\n  const dataView = new DataView(arrayBuffer);\n\n  // Compare format with GLBLoader documentation\n  const type = getMagicString(dataView, byteOffset + 0);\n  const version = dataView.getUint32(byteOffset + 4, LE); // Version 2 of binary glTF container format\n  const byteLength = dataView.getUint32(byteOffset + 8, LE); // Total byte length of binary file\n\n  Object.assign(glb, {\n    // Put less important stuff in a header, to avoid clutter\n    header: {\n      byteOffset, // Byte offset into the initial arrayBuffer\n      byteLength,\n      hasBinChunk: false\n    },\n\n    type,\n    version,\n\n    json: {},\n    binChunks: []\n  } as GLB);\n\n  byteOffset += GLB_FILE_HEADER_SIZE;\n\n  switch (glb.version) {\n    case 1:\n      // eslint-disable-next-line\n      return parseGLBV1(glb, dataView, byteOffset);\n    case 2:\n      // eslint-disable-next-line\n      return parseGLBV2(glb, dataView, byteOffset, (options = {}));\n    default:\n      throw new Error(`Invalid GLB version ${glb.version}. Only supports v1 and v2.`);\n  }\n}\n\nfunction parseGLBV1(glb: GLB, dataView: DataView, byteOffset: number): number {\n  // Sanity: ensure file is big enough to hold at least the headers\n  assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n\n  // Explanation of GLB structure:\n  // https://cloud.githubusercontent.com/assets/3479527/22600725/36b87122-ea55-11e6-9d40-6fd42819fcab.png\n  const contentLength = dataView.getUint32(byteOffset + 0, LE); // Byte length of chunk\n  const contentFormat = dataView.getUint32(byteOffset + 4, LE); // Chunk format as uint32\n  byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n  // GLB v1 only supports a single chunk type\n  assert(contentFormat === GLB_V1_CONTENT_FORMAT_JSON);\n\n  parseJSONChunk(glb, dataView, byteOffset, contentLength);\n  // No need to call the function padToBytes() from parseJSONChunk()\n  byteOffset += contentLength;\n  byteOffset += parseBINChunk(glb, dataView, byteOffset, glb.header.byteLength);\n\n  return byteOffset;\n}\n\nfunction parseGLBV2(\n  glb: GLB,\n  dataView: DataView,\n  byteOffset: number,\n  options: GLBParseOptions\n): number {\n  // Sanity: ensure file is big enough to hold at least the first chunk header\n  assert(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n\n  parseGLBChunksSync(glb, dataView, byteOffset, options);\n\n  return byteOffset + glb.header.byteLength;\n}\n\nfunction parseGLBChunksSync(\n  glb: GLB,\n  dataView: DataView,\n  byteOffset: number,\n  options: GLBParseOptions\n) {\n  // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n  // Iterate as long as there is space left for another chunk header\n  while (byteOffset + 8 <= glb.header.byteLength) {\n    const chunkLength = dataView.getUint32(byteOffset + 0, LE); // Byte length of chunk\n    const chunkFormat = dataView.getUint32(byteOffset + 4, LE); // Chunk format as uint32\n    byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n    // Per spec we must iterate over chunks, ignoring all except JSON and BIN\n    switch (chunkFormat) {\n      case GLB_CHUNK_TYPE_JSON:\n        parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n        break;\n      case GLB_CHUNK_TYPE_BIN:\n        parseBINChunk(glb, dataView, byteOffset, chunkLength);\n        break;\n\n      // Backward compatibility for very old xviz files\n      case GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED:\n        if (!options.strict) {\n          parseJSONChunk(glb, dataView, byteOffset, chunkLength);\n        }\n        break;\n      case GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED:\n        if (!options.strict) {\n          parseBINChunk(glb, dataView, byteOffset, chunkLength);\n        }\n        break;\n\n      default:\n        // Ignore, per spec\n        // console.warn(`Unknown GLB chunk type`); // eslint-disable-line\n        break;\n    }\n\n    byteOffset += padToNBytes(chunkLength, 4);\n  }\n\n  return byteOffset;\n}\n\n// Parse a GLB JSON chunk\nfunction parseJSONChunk(glb: GLB, dataView: DataView, byteOffset: number, chunkLength: number) {\n  // 1. Create a \"view\" of the binary encoded JSON data inside the GLB\n  const jsonChunk = new Uint8Array(dataView.buffer, byteOffset, chunkLength);\n\n  // 2. Decode the JSON binary array into clear text\n  const textDecoder = new TextDecoder('utf8');\n  const jsonText = textDecoder.decode(jsonChunk);\n\n  // 3. Parse the JSON text into a JavaScript data structure\n  glb.json = JSON.parse(jsonText);\n\n  return padToNBytes(chunkLength, 4);\n}\n\n// Parse a GLB BIN chunk\nfunction parseBINChunk(glb: GLB, dataView, byteOffset, chunkLength) {\n  // Note: BIN chunk can be optional\n  glb.header.hasBinChunk = true;\n  glb.binChunks.push({\n    byteOffset,\n    byteLength: chunkLength,\n    arrayBuffer: dataView.buffer\n    // TODO - copy, or create typed array view?\n  });\n\n  return padToNBytes(chunkLength, 4);\n}\n","/* eslint-disable camelcase, max-statements */\nimport {\n  copyPaddedStringToDataView,\n  copyPaddedArrayBufferToDataView\n} from '@loaders.gl/loader-utils';\n\nconst MAGIC_glTF = 0x46546c67; // glTF in ASCII\nconst MAGIC_JSON = 0x4e4f534a; // JSON in ASCII\nconst MAGIC_BIN = 0x004e4942; // BIN\\0 in ASCII\n\nconst LE = true; // Binary GLTF is little endian.\n\n// Encode the full GLB buffer with header etc\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n// glb-file-format-specification\nexport default function encodeGLBSync(glb, dataView, byteOffset = 0, options = {}) {\n  const {magic = MAGIC_glTF, version = 2, json = {}, binary} = glb;\n\n  const byteOffsetStart = byteOffset;\n\n  // Write GLB Header\n  if (dataView) {\n    dataView.setUint32(byteOffset + 0, magic, LE); // Magic number (the ASCII string 'glTF').\n    dataView.setUint32(byteOffset + 4, version, LE); // Version 2 of binary glTF container format uint32\n    dataView.setUint32(byteOffset + 8, 0, LE); // Total byte length of generated file (uint32), will be set last\n  }\n  const byteOffsetFileLength = byteOffset + 8;\n  byteOffset += 12; // GLB_FILE_HEADER_SIZE\n\n  // Write the JSON chunk header\n  const byteOffsetJsonHeader = byteOffset;\n  if (dataView) {\n    dataView.setUint32(byteOffset + 0, 0, LE); // Byte length of json chunk (will be written later)\n    dataView.setUint32(byteOffset + 4, MAGIC_JSON, LE); // Chunk type\n  }\n  byteOffset += 8; // GLB_CHUNK_HEADER_SIZE\n\n  // Write the JSON chunk\n  const jsonString = JSON.stringify(json);\n  byteOffset = copyPaddedStringToDataView(dataView, byteOffset, jsonString, 4);\n\n  // Now we know the JSON chunk length so we can write it.\n  if (dataView) {\n    const jsonByteLength = byteOffset - byteOffsetJsonHeader - 8; // GLB_CHUNK_HEADER_SIZE\n    dataView.setUint32(byteOffsetJsonHeader + 0, jsonByteLength, LE); // Byte length of json chunk (uint32)\n  }\n\n  // Write the BIN chunk if present. The BIN chunk is optional.\n  if (binary) {\n    const byteOffsetBinHeader = byteOffset;\n\n    // Write the BIN chunk header\n    if (dataView) {\n      dataView.setUint32(byteOffset + 0, 0, LE); // Byte length BIN (uint32)\n      dataView.setUint32(byteOffset + 4, MAGIC_BIN, LE); // Chunk type\n    }\n    byteOffset += 8; // GLB_CHUNK_HEADER_SIZE\n\n    byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, binary, 4);\n\n    // Now we know the BIN chunk length so we can write it.\n    if (dataView) {\n      const binByteLength = byteOffset - byteOffsetBinHeader - 8; // GLB_CHUNK_HEADER_SIZE\n      dataView.setUint32(byteOffsetBinHeader + 0, binByteLength, LE); // Byte length BIN (uint32)\n    }\n  }\n\n  // Now we know the glb file length so we can write it.\n  if (dataView) {\n    const fileByteLength = byteOffset - byteOffsetStart;\n    dataView.setUint32(byteOffsetFileLength, fileByteLength, LE); // Total byte length of generated file (uint32)\n  }\n\n  return byteOffset;\n}\n","// Minimal support to load tilsets from the Cesium ION services\n\nimport {fetchFile} from '@loaders.gl/core';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst CESIUM_ION_URL = 'https://api.cesium.com/v1/assets';\n\n// Returns `{url, headers, type, attributions}` for an ion tileset\nexport async function getIonTilesetMetadata(accessToken, assetId) {\n  // Step 1, if no asset id, look for first 3DTILES asset associated with this token.\n  if (!assetId) {\n    const assets = await getIonAssets(accessToken);\n    for (const item of assets.items) {\n      if (item.type === '3DTILES') {\n        assetId = item.id;\n      }\n    }\n  }\n\n  // Step 2: Query metdatadata for this asset.\n  const ionAssetMetadata = await getIonAssetMetadata(accessToken, assetId);\n  const {type, url} = ionAssetMetadata;\n  assert(type === '3DTILES' && url);\n\n  // Prepare a headers object for fetch\n  ionAssetMetadata.headers = {\n    Authorization: `Bearer ${ionAssetMetadata.accessToken}`\n  };\n  return ionAssetMetadata;\n}\n\n// Return a list of all assets associated with accessToken\nexport async function getIonAssets(accessToken) {\n  assert(accessToken);\n  const url = CESIUM_ION_URL;\n  const headers = {Authorization: `Bearer ${accessToken}`};\n  const response = await fetchFile(url, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n}\n\n// Return metadata for a specific asset associated with token\nexport async function getIonAssetMetadata(accessToken, assetId) {\n  assert(accessToken, assetId);\n  const headers = {Authorization: `Bearer ${accessToken}`};\n\n  const url = `${CESIUM_ION_URL}/${assetId}`;\n  // https://cesium.com/docs/rest-api/#operation/getAsset\n  // Retrieves metadata information about a specific asset.\n  let response = await fetchFile(`${url}`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  let metadata = await response.json();\n\n  // https://cesium.com/docs/rest-api/#operation/getAssetEndpoint\n  // Retrieves information and credentials that allow you to access the tiled asset data for visualization and analysis.\n  response = await fetchFile(`${url}/endpoint`, {fetch: {headers}});\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  const tilesetInfo = await response.json();\n\n  // extract dataset description\n  metadata = {\n    ...metadata,\n    ...tilesetInfo\n  };\n\n  return metadata;\n}\n","// @ts-nocheck\nconst moduleExports = require('./index');\nconst _global = typeof window === 'undefined' ? global : window;\n_global.loaders = _global.loaders || {};\nmodule.exports = Object.assign(_global.loaders, moduleExports);\n","// LOADERS\nexport {Tiles3DLoader} from './tiles-3d-loader';\nexport {CesiumIonLoader} from './cesium-ion-loader';\n\n// WRITERS\nexport {Tile3DWriter} from './tile-3d-writer';\n\n// CLASSES\nexport {default as Tile3DFeatureTable} from './lib/classes/tile-3d-feature-table';\nexport {default as Tile3DBatchTable} from './lib/classes/tile-3d-batch-table';\n\n// EXPERIMENTAL\nexport {TILE3D_TYPE} from './lib/constants';\nexport {getIonTilesetMetadata as _getIonTilesetMetadata} from './lib/ion/ion';\nexport type {BatchTableJson, B3DMContent, Node3D} from './types';\n","// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\ntype obj = {[key: string]: any};\nconst self_: obj = globals.self || globals.window || globals.global || {};\nconst window_: obj = globals.window || globals.self || globals.global || {};\nconst global_: obj = globals.global || globals.self || globals.window || {};\nconst document_: obj = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\n/** true if running in a browser */\nexport const isBrowser: boolean =\n  // @ts-ignore process does not exist on browser\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\n/** true if running in a worker thread */\nexport const isWorker: boolean = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion: number = (matches && parseFloat(matches[1])) || 0;\n","/* eslint-disable no-restricted-globals */\nimport type {LoaderWithParser} from '../../types';\nimport {WorkerBody} from '@loaders.gl/worker-utils';\n// import {validateLoaderVersion} from './validate-loader-version';\n\nlet requestId = 0;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n * @param loader\n */\nexport function createLoaderWorker(loader: LoaderWithParser) {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload) => {\n    switch (type) {\n      case 'process':\n        try {\n          // validateLoaderVersion(loader, data.source.split('@')[1]);\n\n          const {input, options = {}} = payload;\n\n          const result = await parseData({\n            loader,\n            arrayBuffer: input,\n            options,\n            context: {\n              parse: parseOnMainThread\n            }\n          });\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n}\n\nfunction parseOnMainThread(arrayBuffer: ArrayBuffer, options: {[key: string]: any}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n\n// TODO - Support byteOffset and byteLength (enabling parsing of embedded binaries without copies)\n// TODO - Why not support async loader.parse* funcs here?\n// TODO - Why not reuse a common function instead of reimplementing loader.parse* selection logic? Keeping loader small?\n// TODO - Lack of appropriate parser functions can be detected when we create worker, no need to wait until parse\nasync function parseData({loader, arrayBuffer, options, context}) {\n  let data;\n  let parser;\n  if (loader.parseSync || loader.parse) {\n    data = arrayBuffer;\n    parser = loader.parseSync || loader.parse;\n  } else if (loader.parseTextSync) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(arrayBuffer);\n    parser = loader.parseTextSync;\n  } else {\n    throw new Error(`Could not load data with ${loader.name} loader`);\n  }\n\n  // TODO - proper merge in of loader options...\n  options = {\n    ...options,\n    modules: (loader && loader.options && loader.options.modules) || {},\n    worker: false\n  };\n\n  return await parser(data, {...options}, context, loader);\n}\n","import {assert} from '../env-utils/assert';\n\nconst workerURLCache = new Map();\n\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props: {source?: string; url?: string}) {\n  assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n\n  let workerURL = workerURLCache.get(props.source || props.url);\n  if (!workerURL) {\n    // Differentiate worker urls from worker source code\n    if (props.url) {\n      workerURL = getLoadableWorkerURLFromURL(props.url);\n      workerURLCache.set(props.url, workerURL);\n    }\n\n    if (props.source) {\n      workerURL = getLoadableWorkerURLFromSource(props.source);\n      workerURLCache.set(props.source, workerURL);\n    }\n  }\n\n  assert(workerURL);\n  return workerURL;\n}\n\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url: string): string {\n  // A local script url, we can use it to initialize a Worker directly\n  if (!url.startsWith('http')) {\n    return url;\n  }\n\n  // A remote script, we need to use `importScripts` to load from different origin\n  const workerSource = buildScriptSource(url);\n  return getLoadableWorkerURLFromSource(workerSource);\n}\n\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource: string): string {\n  // NOTE: webworkify was previously used\n  // const blob = webworkify(workerSource, {bare: true});\n  const blob = new Blob([workerSource], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl: string): string {\n  return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n","import type {\n  WorkerObject,\n  WorkerOptions,\n  WorkerContext,\n  WorkerMessageType,\n  WorkerMessagePayload\n} from '../../types';\nimport type WorkerJob from '../worker-farm/worker-job';\nimport WorkerFarm from '../worker-farm/worker-farm';\nimport {removeNontransferableOptions} from '../worker-utils/remove-nontransferable-options';\nimport {getWorkerURL, getWorkerName} from './get-worker-url';\n\ntype ProcessOnWorkerOptions = WorkerOptions & {\n  jobName?: string;\n  [key: string]: any;\n};\n\n/**\n * Determines if we can parse with worker\n * @param loader\n * @param data\n * @param options\n */\nexport function canProcessOnWorker(worker: WorkerObject, options?: WorkerOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return worker.worker && options?.worker;\n}\n\n/**\n * This function expects that the worker thread sends certain messages,\n * Creating such a worker can be automated if the worker is wrapper by a call to\n * createWorker in @loaders.gl/worker-utils.\n */\nexport async function processOnWorker(\n  worker: WorkerObject,\n  data: any,\n  options: ProcessOnWorkerOptions = {},\n  context: WorkerContext = {}\n): Promise<any> {\n  const name = getWorkerName(worker);\n  const url = getWorkerURL(worker, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  const jobName = options.jobName || worker.name;\n  const job = await workerPool.startJob(\n    jobName,\n    // eslint-disable-next-line\n    onMessage.bind(null, context)\n  );\n\n  // Kick off the processing in the worker\n  const transferableOptions = removeNontransferableOptions(options);\n  job.postMessage('process', {input: data, options: transferableOptions});\n\n  const result = await job.result;\n  return result.result;\n}\n\n/**\n * Job completes when we receive the result\n * @param job\n * @param message\n */\nasync function onMessage(\n  context: WorkerContext,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      // Worker is done\n      job.done(payload);\n      break;\n\n    case 'error':\n      // Worker encountered an error\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for us (main thread) to process something\n      const {id, input, options} = payload;\n      try {\n        if (!context.process) {\n          job.postMessage('error', {id, error: 'Worker not set up to process on main thread'});\n          return;\n        }\n        const result = await context.process(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`process-on-worker: unknown message ${type}`);\n  }\n}\n","/**\n * Safely stringify JSON (drop non serializable values like functions and regexps)\n * @param value\n */\nexport function removeNontransferableOptions(object: object): object {\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  // TODO - warn if options stringification is long\n  return JSON.parse(stringifyJSON(object));\n}\n\nfunction stringifyJSON(v) {\n  const cache = new Set();\n  return JSON.stringify(v, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.has(value)) {\n        // Circular reference found\n        try {\n          // If this value does not reference a parent it can be deduped\n          return JSON.parse(JSON.stringify(value));\n        } catch (err) {\n          // discard key if value cannot be deduped\n          return undefined;\n        }\n      }\n      // Store value in our set\n      cache.add(value);\n    }\n    return value;\n  });\n}\n","import type {\n  WorkerMessageType,\n  WorkerMessagePayload,\n  WorkerContext,\n  Process,\n  ProcessInBatches\n} from '../../types';\nimport AsyncQueue from '../async-queue/async-queue';\nimport WorkerBody from '../worker-farm/worker-body';\n// import {validateWorkerVersion} from './validate-worker-version';\n\n/** Counter for jobs */\nlet requestId = 0;\nlet inputBatches;\nlet options;\n\nexport type ProcessOnMainThread = (data: any, options?: {[key: string]: any}, context?) => any;\n\n/**\n * Set up a WebWorkerGlobalScope to talk with the main thread\n */\nexport function createWorker(process: Process, processInBatches?: ProcessInBatches): void {\n  // Check that we are actually in a worker thread\n  if (typeof self === 'undefined') {\n    return;\n  }\n\n  const context: WorkerContext = {\n    process: processOnMainThread\n  };\n\n  // eslint-disable-next-line complexity\n  WorkerBody.onmessage = async (type: WorkerMessageType, payload: WorkerMessagePayload) => {\n    try {\n      switch (type) {\n        case 'process':\n          if (!process) {\n            throw new Error('Worker does not support atomic processing');\n          }\n          const result = await process(payload.input, payload.options || {}, context);\n          WorkerBody.postMessage('done', {result});\n          break;\n\n        case 'process-in-batches':\n          if (!processInBatches) {\n            throw new Error('Worker does not support batched processing');\n          }\n          inputBatches = new AsyncQueue();\n          options = payload.options || {};\n          const resultIterator = processInBatches(inputBatches, options, context?.processInBatches);\n          for await (const batch of resultIterator) {\n            WorkerBody.postMessage('output-batch', {result: batch});\n          }\n          WorkerBody.postMessage('done', {});\n          break;\n\n        case 'input-batch':\n          inputBatches.push(payload.input);\n          break;\n\n        case 'input-done':\n          inputBatches.close();\n          break;\n\n        default:\n      }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : '';\n      WorkerBody.postMessage('error', {error: message});\n    }\n  };\n}\n\nfunction processOnMainThread(arrayBuffer, options = {}) {\n  return new Promise((resolve, reject) => {\n    const id = requestId++;\n\n    /**\n     */\n    const onMessage = (type, payload) => {\n      if (payload.id !== id) {\n        // not ours\n        return;\n      }\n\n      switch (type) {\n        case 'done':\n          WorkerBody.removeEventListener(onMessage);\n          resolve(payload.result);\n          break;\n\n        case 'error':\n          WorkerBody.removeEventListener(onMessage);\n          reject(payload.error);\n          break;\n\n        default:\n        // ignore\n      }\n    };\n\n    WorkerBody.addEventListener(onMessage);\n\n    // Ask the main thread to decode data\n    const payload = {id, input: arrayBuffer, options};\n    WorkerBody.postMessage('process', payload);\n  });\n}\n","import type {WorkerObject} from '../../types';\nimport {assert} from '../env-utils/assert';\nimport {VERSION} from '../env-utils/version';\n\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(\n  worker: WorkerObject,\n  coreVersion: string = VERSION\n): boolean {\n  assert(worker, 'no worker provided');\n\n  const workerVersion = worker.version;\n  if (!coreVersion || !workerVersion) {\n    return false;\n  }\n\n  // TODO enable when fix the __version__ injection\n  // const coreVersions = parseVersion(coreVersion);\n  // const workerVersions = parseVersion(workerVersion);\n  // assert(\n  //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n  //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n  //     coreVersion.minor\n  //   }+ is required.`\n  // );\n\n  return true;\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n  const parts = version.split('.').map(Number);\n  return {major: parts[0], minor: parts[1]};\n}\n","/* global importScripts */\nimport {global, isBrowser, isWorker} from '../env-utils/globals';\nimport * as node from '../node/require-utils.node';\nimport {assert} from '../env-utils/assert';\nimport {VERSION as __VERSION__} from '../env-utils/version';\n\n// TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\nconst LATEST = 'beta';\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : LATEST;\n\nconst loadLibraryPromises = {}; // promises\n\n/**\n * Dynamically loads a library (\"module\")\n *\n * - wasm library: Array buffer is returned\n * - js library: Parse JS is returned\n *\n * Method depends on environment\n * - browser - script element is created and installed on document\n * - worker - eval is called on global context\n * - node - file is required\n *\n * @param libraryUrl\n * @param moduleName\n * @param options\n */\nexport async function loadLibrary(\n  libraryUrl: string,\n  moduleName: string | null = null,\n  options: object = {}\n): Promise<any> {\n  if (moduleName) {\n    libraryUrl = getLibraryUrl(libraryUrl, moduleName, options);\n  }\n\n  // Ensure libraries are only loaded once\n  loadLibraryPromises[libraryUrl] =\n    loadLibraryPromises[libraryUrl] || loadLibraryFromFile(libraryUrl);\n  return await loadLibraryPromises[libraryUrl];\n}\n\n// TODO - sort out how to resolve paths for main/worker and dev/prod\nexport function getLibraryUrl(library, moduleName?: string, options?): string {\n  // Check if already a URL\n  if (library.startsWith('http')) {\n    return library;\n  }\n\n  // Allow application to import and supply libraries through `options.modules`\n  const modules = options.modules || {};\n  if (modules[library]) {\n    return modules[library];\n  }\n\n  // Load from local files, not from CDN scripts in Node.js\n  // TODO - needs to locate the modules directory when installed!\n  if (!isBrowser) {\n    return `modules/${moduleName}/dist/libs/${library}`;\n  }\n\n  // In browser, load from external scripts\n  if (options.CDN) {\n    assert(options.CDN.startsWith('http'));\n    return `${options.CDN}/${moduleName}@${VERSION}/dist/libs/${library}`;\n  }\n\n  // TODO - loading inside workers requires paths relative to worker script location...\n  if (isWorker) {\n    return `../src/libs/${library}`;\n  }\n\n  return `modules/${moduleName}/src/libs/${library}`;\n}\n\nasync function loadLibraryFromFile(libraryUrl) {\n  if (libraryUrl.endsWith('wasm')) {\n    const response = await fetch(libraryUrl);\n    return await response.arrayBuffer();\n  }\n\n  if (!isBrowser) {\n    return node.requireFromFile && (await node.requireFromFile(libraryUrl));\n  }\n  if (isWorker) {\n    return importScripts(libraryUrl);\n  }\n  // TODO - fix - should be more secure than string parsing since observes CORS\n  // if (isBrowser) {\n  //   return await loadScriptFromFile(libraryUrl);\n  // }\n\n  const response = await fetch(libraryUrl);\n  const scriptSource = await response.text();\n  return loadLibraryFromString(scriptSource, libraryUrl);\n}\n\n/*\nasync function loadScriptFromFile(libraryUrl) {\n  const script = document.createElement('script');\n  script.src = libraryUrl;\n  return await new Promise((resolve, reject) => {\n    script.onload = data => {\n      resolve(data);\n    };\n    script.onerror = reject;\n  });\n}\n*/\n\n// TODO - Needs security audit...\n//  - Raw eval call\n//  - Potentially bypasses CORS\n// Upside is that this separates fetching and parsing\n// we could create a`LibraryLoader` or`ModuleLoader`\nfunction loadLibraryFromString(scriptSource, id) {\n  if (!isBrowser) {\n    return node.requireFromString && node.requireFromString(scriptSource, id);\n  }\n\n  if (isWorker) {\n    // Use lvalue trick to make eval run in global scope\n    eval.call(global, scriptSource); // eslint-disable-line no-eval\n    // https://stackoverflow.com/questions/9107240/1-evalthis-vs-evalthis-in-javascript\n    // http://perfectionkills.com/global-eval-what-are-the-options/\n    return null;\n  }\n\n  const script = document.createElement('script');\n  script.id = id;\n  // most browsers like a separate text node but some throw an error. The second method covers those.\n  try {\n    script.appendChild(document.createTextNode(scriptSource));\n  } catch (e) {\n    script.text = scriptSource;\n  }\n  document.body.appendChild(script);\n  return null;\n}\n\n// TODO - technique for module injection into worker, from THREE.DracoLoader...\n/*\nfunction combineWorkerWithLibrary(worker, jsContent) {\n  var fn = wWorker.toString();\n  var body = [\n    '// injected',\n    jsContent,\n    '',\n    '// worker',\n    fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))\n  ].join('\\n');\n  this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n}\n*/\n","/* eslint-disable no-console */\nimport {spawn, ChildProcess, SpawnOptionsWithoutStdio} from 'child_process';\nimport {getAvailablePort} from './process-utils';\n\nexport type ChildProcessProxyProps = {\n  command: string;\n  arguments: string[];\n  /** Whether to add a port specified arg */\n  portArg?: string;\n  /** Base port number */\n  port?: number;\n  /** Whether to search for an available port if the base port is occupied */\n  autoPort?: boolean;\n  /** Number of milliseconds to wait until concluding success */\n  /** wait: 0 - infinity */\n  wait?: number;\n  /** Options passed on to Node'.js `spawn` */\n  spawn?: SpawnOptionsWithoutStdio;\n  /** Callback when the  */\n  onStart?: (proxy: ChildProcessProxy) => void;\n  onSuccess?: (proxy: ChildProcessProxy) => void;\n};\n\nconst DEFAULT_PROPS: ChildProcessProxyProps = {\n  command: '',\n  arguments: [],\n  port: 5000,\n  autoPort: true,\n  wait: 2000,\n  onSuccess: (processProxy) => {\n    console.log(`Started ${processProxy.props.command}`);\n  }\n};\n\n/**\n * Manager for a Node.js child process\n * Prepares arguments, starts, stops and tracks output\n */\nexport default class ChildProcessProxy {\n  id: string;\n  props: ChildProcessProxyProps = {...DEFAULT_PROPS};\n  private childProcess: ChildProcess | null = null;\n  private port: number = 0;\n  private successTimer?;\n\n  // constructor(props?: {id?: string});\n  constructor({id = 'browser-driver'} = {}) {\n    this.id = id;\n  }\n\n  /** Starts a child process with the provided props */\n  async start(props: ChildProcessProxyProps): Promise<object> {\n    props = {...DEFAULT_PROPS, ...props};\n    this.props = props;\n\n    const args = [...props.arguments];\n\n    // If portArg is set, we can look up an available port\n    this.port = Number(props.port);\n    if (props.portArg) {\n      if (props.autoPort) {\n        this.port = await getAvailablePort(props.port);\n      }\n      args.push(props.portArg, String(this.port));\n    }\n\n    return await new Promise((resolve, reject) => {\n      try {\n        this._setTimeout(() => {\n          if (props.onSuccess) {\n            props.onSuccess(this);\n          }\n          resolve({});\n        });\n\n        console.log(`Spawning ${props.command} ${props.arguments.join(' ')}`);\n        const childProcess = spawn(props.command, args, props.spawn);\n        this.childProcess = childProcess;\n\n        childProcess.stdout.on('data', (data) => {\n          console.log(data.toString());\n        });\n        // TODO - add option regarding whether stderr should be treated as data\n        childProcess.stderr.on('data', (data) => {\n          console.log(`Child process wrote to stderr: \"${data}\".`);\n          this._clearTimeout();\n          reject(new Error(data));\n        });\n        childProcess.on('error', (error) => {\n          console.log(`Child process errored with ${error}`);\n          this._clearTimeout();\n          reject(error);\n        });\n        childProcess.on('close', (code) => {\n          console.log(`Child process exited with ${code}`);\n          this.childProcess = null;\n          this._clearTimeout();\n          resolve({});\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /** Stops a running child process */\n  async stop(): Promise<void> {\n    if (this.childProcess) {\n      this.childProcess.kill();\n      this.childProcess = null;\n    }\n  }\n\n  /** Exits this process */\n  async exit(statusCode: number = 0): Promise<void> {\n    try {\n      await this.stop();\n      // eslint-disable-next-line no-process-exit\n      process.exit(statusCode);\n    } catch (error) {\n      console.error(error.message || error);\n      // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    }\n  }\n\n  _setTimeout(callback: (...args: any[]) => void) {\n    if (Number(this.props.wait) > 0) {\n      this.successTimer = setTimeout(callback, this.props.wait);\n    }\n  }\n\n  _clearTimeout() {\n    if (this.successTimer) {\n      clearTimeout(this.successTimer);\n    }\n  }\n}\n","import ChildProcess from 'child_process';\n\n// Get an available port\n// Works on Unix systems\nexport function getAvailablePort(defaultPort: number = 3000): Promise<number> {\n  return new Promise((resolve) => {\n    // Get a list of all ports in use\n    ChildProcess.exec('lsof -i -P -n | grep LISTEN', (error, stdout) => {\n      if (error) {\n        // likely no permission, e.g. CI\n        resolve(defaultPort);\n        return;\n      }\n\n      const portsInUse: number[] = [];\n      const regex = /:(\\d+) \\(LISTEN\\)/;\n      stdout.split('\\n').forEach((line) => {\n        const match = regex.exec(line);\n        if (match) {\n          portsInUse.push(Number(match[1]));\n        }\n      });\n      let port = defaultPort;\n      while (portsInUse.includes(port)) {\n        port++;\n      }\n      resolve(port);\n    });\n  });\n}\n","import type {WorkerJob, WorkerMessageType, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport type {Loader, LoaderOptions, LoaderContext} from '../../types';\nimport {WorkerFarm, getWorkerURL} from '@loaders.gl/worker-utils';\n\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader: Loader, options?: LoaderOptions) {\n  if (!WorkerFarm.isSupported()) {\n    return false;\n  }\n\n  return loader.worker && options?.worker;\n}\n\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(\n  loader: Loader,\n  data,\n  options?: LoaderOptions,\n  context?: LoaderContext,\n  parseOnMainThread?: (arrayBuffer: ArrayBuffer, options: {[key: string]: any}) => Promise<void>\n) {\n  const name = loader.id; // TODO\n  const url = getWorkerURL(loader, options);\n\n  const workerFarm = WorkerFarm.getWorkerFarm(options);\n  const workerPool = workerFarm.getWorkerPool({name, url});\n\n  // options.log object contains functions which cannot be transferred\n  // TODO - decide how to handle logging on workers\n  options = JSON.parse(JSON.stringify(options));\n\n  const job = await workerPool.startJob(\n    'process-on-worker',\n    // eslint-disable-next-line\n    onMessage.bind(null, parseOnMainThread)\n  );\n\n  job.postMessage('process', {\n    // @ts-ignore\n    input: data,\n    options\n  });\n\n  const result = await job.result;\n  return await result.result;\n}\n\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(\n  parseOnMainThread,\n  job: WorkerJob,\n  type: WorkerMessageType,\n  payload: WorkerMessagePayload\n) {\n  switch (type) {\n    case 'done':\n      job.done(payload);\n      break;\n\n    case 'error':\n      job.error(payload.error);\n      break;\n\n    case 'process':\n      // Worker is asking for main thread to parseO\n      const {id, input, options} = payload;\n      try {\n        const result = await parseOnMainThread(input, options);\n        job.postMessage('done', {id, result});\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'unknown error';\n        job.postMessage('error', {id, error: message});\n      }\n      break;\n\n    default:\n      // eslint-disable-next-line\n      console.warn(`parse-with-worker unknown message ${type}`);\n  }\n}\n","import {getFirstCharacters} from '../binary-utils/get-first-characters';\n\n/**\n * Minimal JSON parser that throws more meaningful error messages\n */\nexport function parseJSON(string: string): any {\n  try {\n    return JSON.parse(string);\n  } catch (_) {\n    throw new Error(`Failed to parse JSON from data starting with \"${getFirstCharacters(string)}\"`);\n  }\n}\n","import {TypedArray} from '../../types';\nimport {padToNBytes} from './memory-copy-utils';\n\n/**\n * Copy sourceBuffer to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {Array | TypedArray} sourceBuffer - source data buffer\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedArrayBufferToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  sourceBuffer: TypedArray,\n  padding: number\n) {\n  const paddedLength = padToNBytes(sourceBuffer.byteLength, padding);\n  const padLength = paddedLength - sourceBuffer.byteLength;\n\n  if (dataView) {\n    // Copy array\n    const targetArray = new Uint8Array(\n      dataView.buffer,\n      dataView.byteOffset + byteOffset,\n      sourceBuffer.byteLength\n    );\n    const sourceArray = new Uint8Array(sourceBuffer);\n    targetArray.set(sourceArray);\n\n    // Add PADDING\n    for (let i = 0; i < padLength; ++i) {\n      // json chunk is padded with spaces (ASCII 0x20)\n      dataView.setUint8(byteOffset + sourceBuffer.byteLength + i, 0x20);\n    }\n  }\n  byteOffset += paddedLength;\n  return byteOffset;\n}\n\n/**\n * Copy string to dataView with some padding\n *\n * @param {DataView | null} dataView - destination data container. If null - only new offset is calculated\n * @param {number} byteOffset - destination byte offset to copy to\n * @param {string} string - source string\n * @param {number} padding - pad the resulting array to multiple of \"padding\" bytes. Additional bytes are filled with 0x20 (ASCII space)\n *\n * @return new byteOffset of resulting dataView\n */\nexport function copyPaddedStringToDataView(\n  dataView: DataView | null,\n  byteOffset: number,\n  string: string,\n  padding: number\n): number {\n  const textEncoder = new TextEncoder();\n  // PERFORMANCE IDEA: We encode twice, once to get size and once to store\n  // PERFORMANCE IDEA: Use TextEncoder.encodeInto() to avoid temporary copy\n  const stringBuffer = textEncoder.encode(string);\n\n  byteOffset = copyPaddedArrayBufferToDataView(dataView, byteOffset, stringBuffer, padding);\n\n  return byteOffset;\n}\n","// Note: These were broken out from gltf loader...\n// eslint-disable-next-line complexity\n\n// PERFORMANCE IDEA: No need to copy string twice...\nexport function padStringToByteAlignment(string, byteAlignment) {\n  const length = string.length;\n  const paddedLength = Math.ceil(length / byteAlignment) * byteAlignment; // Round up to the required alignment\n  const padding = paddedLength - length;\n  let whitespace = '';\n  for (let i = 0; i < padding; ++i) {\n    whitespace += ' ';\n  }\n  return string + whitespace;\n}\n\nexport function copyStringToDataView(dataView, byteOffset, string, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, string.charCodeAt(i));\n    }\n  }\n  return byteOffset + byteLength;\n}\n\nexport function copyBinaryToDataView(dataView, byteOffset, binary, byteLength) {\n  if (dataView) {\n    for (let i = 0; i < byteLength; i++) {\n      dataView.setUint8(byteOffset + i, binary[i]);\n    }\n  }\n  return byteOffset + byteLength;\n}\n","// TextDecoder iterators\n// TextDecoder will keep any partial undecoded bytes between calls to `decode`\n\nexport async function* makeTextDecoderIterator(\n  arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: TextDecoderOptions = {}\n): AsyncIterable<string> {\n  const textDecoder = new TextDecoder(undefined, options);\n  for await (const arrayBuffer of arrayBufferIterator) {\n    yield typeof arrayBuffer === 'string'\n      ? arrayBuffer\n      : textDecoder.decode(arrayBuffer, {stream: true});\n  }\n}\n\n// TextEncoder iterator\n// TODO - this is not useful unless min chunk size is given\n// TextEncoder will keep any partial undecoded bytes between calls to `encode`\n// If iterator does not yield strings, assume arrayBuffer and return unencoded\n\nexport async function* makeTextEncoderIterator(\n  textIterator: AsyncIterable<string> | Iterable<ArrayBuffer>\n): AsyncIterable<ArrayBuffer> {\n  const textEncoder = new TextEncoder();\n  for await (const text of textIterator) {\n    yield typeof text === 'string' ? textEncoder.encode(text) : text;\n  }\n}\n\n/**\n * @param textIterator async iterable yielding strings\n * @returns an async iterable over lines\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\n\nexport async function* makeLineIterator(\n  textIterator: AsyncIterable<string>\n): AsyncIterable<string> {\n  let previous = '';\n  for await (const textChunk of textIterator) {\n    previous += textChunk;\n    let eolIndex;\n    while ((eolIndex = previous.indexOf('\\n')) >= 0) {\n      // line includes the EOL\n      const line = previous.slice(0, eolIndex + 1);\n      previous = previous.slice(eolIndex + 1);\n      yield line;\n    }\n  }\n\n  if (previous.length > 0) {\n    yield previous;\n  }\n}\n\n/**\n * @param lineIterator async iterable yielding lines\n * @returns async iterable yielding numbered lines\n *\n * See http://2ality.com/2018/04/async-iter-nodejs.html\n */\nexport async function* makeNumberedLineIterator(\n  lineIterator: AsyncIterable<string>\n): AsyncIterable<{counter: number; line: string}> {\n  let counter = 1;\n  for await (const line of lineIterator) {\n    yield {counter, line};\n    counter++;\n  }\n}\n","import {concatenateArrayBuffers} from '../binary-utils/array-buffer-utils';\n\n// GENERAL UTILITIES\n\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n  // eslint-disable-next-line\n  while (true) {\n    const {done, value} = await iterator.next();\n    if (done) {\n      iterator.return();\n      return;\n    }\n    const cancel = visitor(value);\n    if (cancel) {\n      return;\n    }\n  }\n}\n\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\n\nexport async function concatenateArrayBuffersAsync(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): Promise<ArrayBuffer> {\n  const arrayBuffers: ArrayBuffer[] = [];\n  for await (const chunk of asyncIterator) {\n    arrayBuffers.push(chunk);\n  }\n  return concatenateArrayBuffers(...arrayBuffers);\n}\n\nexport async function concatenateStringsAsync(\n  asyncIterator: AsyncIterable<string> | Iterable<string>\n): Promise<string> {\n  const strings: string[] = [];\n  for await (const chunk of asyncIterator) {\n    strings.push(chunk);\n  }\n  return strings.join('');\n}\n","import {Stats} from '@probe.gl/stats';\n\ntype Handle = any;\ntype DoneFunction = () => any;\ntype GetPriorityFunction = () => number;\ntype RequestResult = {\n  done: DoneFunction;\n} | null;\n\n/** RequestScheduler Options */\nexport type RequestSchedulerProps = {\n  id?: string;\n  throttleRequests?: boolean;\n  maxRequests?: number;\n};\n\nconst STAT_QUEUED_REQUESTS = 'Queued Requests';\nconst STAT_ACTIVE_REQUESTS = 'Active Requests';\nconst STAT_CANCELLED_REQUESTS = 'Cancelled Requests';\nconst STAT_QUEUED_REQUESTS_EVER = 'Queued Requests Ever';\nconst STAT_ACTIVE_REQUESTS_EVER = 'Active Requests Ever';\n\nconst DEFAULT_PROPS: Required<RequestSchedulerProps> = {\n  id: 'request-scheduler',\n  // Specifies if the request scheduler should throttle incoming requests, mainly for comparative testing\n  throttleRequests: true,\n  // The maximum number of simultaneous active requests. Un-throttled requests do not observe this limit.\n  maxRequests: 6\n};\n\n/** Tracks one request */\ntype Request = {\n  handle: Handle;\n  priority: number;\n  getPriority: GetPriorityFunction;\n  resolve?: (value: any) => any;\n};\n\n/**\n * Used to issue a request, without having them \"deeply queued\" by the browser.\n * @todo - Track requests globally, across multiple servers\n */\nexport default class RequestScheduler {\n  readonly props: Required<RequestSchedulerProps>;\n  readonly stats: Stats;\n  activeRequestCount: number = 0;\n\n  /** Tracks the number of active requests and prioritizes/cancels queued requests. */\n  private requestQueue: Request[] = [];\n  private requestMap: Map<Handle, Promise<RequestResult>> = new Map();\n  private deferredUpdate: any = null;\n\n  constructor(props: RequestSchedulerProps = {}) {\n    this.props = {...DEFAULT_PROPS, ...props};\n\n    // Returns the statistics used by the request scheduler.\n    this.stats = new Stats({id: this.props.id});\n    this.stats.get(STAT_QUEUED_REQUESTS);\n    this.stats.get(STAT_ACTIVE_REQUESTS);\n    this.stats.get(STAT_CANCELLED_REQUESTS);\n    this.stats.get(STAT_QUEUED_REQUESTS_EVER);\n    this.stats.get(STAT_ACTIVE_REQUESTS_EVER);\n  }\n\n  /**\n   * Called by an application that wants to issue a request, without having it deeply queued by the browser\n   *\n   * When the returned promise resolved, it is OK for the application to issue a request.\n   * The promise resolves to an object that contains a `done` method.\n   * When the application's request has completed (or failed), the application must call the `done` function\n   *\n   * @param handle\n   * @param getPriority will be called when request \"slots\" open up,\n   *    allowing the caller to update priority or cancel the request\n   *    Highest priority executes first, priority < 0 cancels the request\n   * @returns a promise\n   *   - resolves to a object (with a `done` field) when the request can be issued without queueing,\n   *   - resolves to `null` if the request has been cancelled (by the callback return < 0).\n   *     In this case the application should not issue the request\n   */\n  scheduleRequest(\n    handle: Handle,\n    getPriority: GetPriorityFunction = () => 0\n  ): Promise<RequestResult> {\n    // Allows throttling to be disabled\n    if (!this.props.throttleRequests) {\n      return Promise.resolve({done: () => {}});\n    }\n\n    // dedupe\n    if (this.requestMap.has(handle)) {\n      return this.requestMap.get(handle) as Promise<any>;\n    }\n\n    const request: Request = {handle, priority: 0, getPriority};\n    const promise = new Promise<RequestResult>((resolve) => {\n      // @ts-ignore\n      request.resolve = resolve;\n      return request;\n    });\n\n    this.requestQueue.push(request);\n    this.requestMap.set(handle, promise);\n    this._issueNewRequests();\n    return promise;\n  }\n\n  // PRIVATE\n\n  _issueRequest(request: Request): Promise<any> {\n    const {handle, resolve} = request;\n    let isDone = false;\n\n    const done = () => {\n      // can only be called once\n      if (!isDone) {\n        isDone = true;\n\n        // Stop tracking a request - it has completed, failed, cancelled etc\n        this.requestMap.delete(handle);\n        this.activeRequestCount--;\n        // A slot just freed up, see if any queued requests are waiting\n        this._issueNewRequests();\n      }\n    };\n\n    // Track this request\n    this.activeRequestCount++;\n\n    return resolve ? resolve({done}) : Promise.resolve({done});\n  }\n\n  /** We check requests asynchronously, to prevent multiple updates */\n  _issueNewRequests(): void {\n    if (!this.deferredUpdate) {\n      this.deferredUpdate = setTimeout(() => this._issueNewRequestsAsync(), 0);\n    }\n  }\n\n  /** Refresh all requests  */\n  _issueNewRequestsAsync() {\n    // TODO - shouldn't we clear the timeout?\n    this.deferredUpdate = null;\n\n    const freeSlots = Math.max(this.props.maxRequests - this.activeRequestCount, 0);\n\n    if (freeSlots === 0) {\n      return;\n    }\n\n    this._updateAllRequests();\n\n    // Resolve pending promises for the top-priority requests\n    for (let i = 0; i < freeSlots; ++i) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        this._issueRequest(request); // eslint-disable-line @typescript-eslint/no-floating-promises\n      }\n    }\n\n    // Uncomment to debug\n    // console.log(`${freeSlots} free slots, ${this.requestQueue.length} queued requests`);\n  }\n\n  /** Ensure all requests have updated priorities, and that no longer valid requests are cancelled */\n  _updateAllRequests() {\n    const requestQueue = this.requestQueue;\n    for (let i = 0; i < requestQueue.length; ++i) {\n      const request = requestQueue[i];\n      if (!this._updateRequest(request)) {\n        // Remove the element and make sure to adjust the counter to account for shortened array\n        requestQueue.splice(i, 1);\n        this.requestMap.delete(request.handle);\n        i--;\n      }\n    }\n\n    // Sort the remaining requests based on priority\n    requestQueue.sort((a, b) => a.priority - b.priority);\n  }\n\n  /** Update a single request by calling the callback */\n  _updateRequest(request) {\n    request.priority = request.getPriority(request.handle); // eslint-disable-line callback-return\n\n    // by returning a negative priority, the callback cancels the request\n    if (request.priority < 0) {\n      request.resolve(null);\n      return false;\n    }\n    return true;\n  }\n}\n","// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\n\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url: string): string {\n  const slashIndex = url && url.lastIndexOf('/');\n  return slashIndex >= 0 ? url.substr(0, slashIndex as number) : '';\n}\n\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts: string[]): string {\n  const separator = '/';\n  parts = parts.map((part, index) => {\n    if (index) {\n      part = part.replace(new RegExp(`^${separator}`), '');\n    }\n    if (index !== parts.length - 1) {\n      part = part.replace(new RegExp(`${separator}$`), '');\n    }\n    return part;\n  });\n  return parts.join(separator);\n}\n","// Simple file alias mechanisms for tests.\n\nlet pathPrefix = '';\nconst fileAliases: {[aliasPath: string]: string} = {};\n\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix: string): void {\n  pathPrefix = prefix;\n}\n\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix(): string {\n  return pathPrefix;\n}\n\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases: {[aliasPath: string]: string}): void {\n  Object.assign(fileAliases, aliases);\n}\n\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename: string): string {\n  for (const alias in fileAliases) {\n    if (filename.startsWith(alias)) {\n      const replacement = fileAliases[alias];\n      filename = filename.replace(alias, replacement);\n    }\n  }\n  if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n    filename = `${pathPrefix}${filename}`;\n  }\n  return filename;\n}\n","// fs wrapper (promisified fs + avoids bundling fs in browsers)\nimport fs from 'fs';\nimport {toArrayBuffer} from './buffer-utils.node';\nimport {promisify} from 'util';\n\nconst error = (fsFunction) => () => {\n  throw new Error(`${fsFunction} not available in browser`);\n};\n\nexport const isSupported = Boolean(fs);\n\nexport const open = fs?.open ? promisify(fs.open) : error('fs.open');\nexport const close = fs?.close ? promisify(fs.close) : error('fs.close');\nexport const read = fs?.read ? promisify(fs.read) : error('fs.read');\n\nexport const readFile = fs?.readFile ? promisify(fs.readFile) : error('fs.readFile');\nexport const readFileSync = fs?.readFileSync ? fs.readFileSync : error('fs.readFileSync');\nexport const writeFile = fs?.writeFile ? promisify(fs.writeFile) : error('fs.writeFile');\nexport const writeFileSync = fs?.writeFileSync ? fs.writeFileSync : error('fs.writeFileSync');\n\nexport async function _readToArrayBuffer(fd: number, start: number, length: number) {\n  const buffer = Buffer.alloc(length);\n  const {bytesRead} = await read(fd, buffer, 0, length, start);\n  if (bytesRead !== length) {\n    throw new Error('fs.read failed');\n  }\n  return toArrayBuffer(buffer);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","import * as node from '../node/buffer-utils.node';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n","import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/*\n\n  The Tileset loading and rendering flow is as below,\n  A rendered (i.e. deck.gl `Tile3DLayer`) triggers `tileset.update()` after a `tileset` is loaded\n  `tileset` starts traversing the tile tree and update `requestTiles` (tiles of which content need\n  to be fetched) and `selectedTiles` (tiles ready for rendering under the current viewport).\n  `Tile3DLayer` will update rendering based on `selectedTiles`.\n  `Tile3DLayer` also listens to `onTileLoad` callback and trigger another round of `update and then traversal`\n  when new tiles are loaded.\n\n  As I3S tileset have stored `tileHeader` file (metadata) and tile content files (geometry, texture, ...) separately.\n  During each traversal, it issues `tilHeader` requests if that `tileHeader` is not yet fetched,\n  after the tile header is fulfilled, it will resume the traversal starting from the tile just fetched (not root).\n\n  Tile3DLayer\n       |\n   await load(tileset)\n       |\n   tileset.update()\n       |                async load tileHeader\n   tileset.traverse() -------------------------- Queued\n       |        resume traversal after fetched  |\n       |----------------------------------------|\n       |\n       |                     async load tile content\n  tilset.requestedTiles  ----------------------------- RequestScheduler\n                                                              |\n  tilset.selectedTiles (ready for rendering)                  |\n       |         Listen to                                    |\n    Tile3DLayer ----------- onTileLoad  ----------------------|\n       |                         |   notify new tile is available\n    updateLayers                 |\n                        tileset.update // trigger another round of update\n*/\n\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {Stats} from '@probe.gl/stats';\nimport {\n  RequestScheduler,\n  assert,\n  path,\n  LoaderWithParser,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport TilesetCache from './tileset-cache';\nimport {calculateTransformProps} from './helpers/transform-utils';\nimport {FrameState, getFrameState} from './helpers/frame-state';\nimport {getZoomFromBoundingVolume} from './helpers/zoom';\nimport Tile3D from './tile-3d';\nimport Tileset3DTraverser from './traversers/tileset-3d-traverser';\nimport TilesetTraverser from './traversers/tileset-traverser';\nimport I3SetTraverser from './traversers/i3s-tileset-traverser';\nimport {TILESET_TYPE} from '../constants';\n\nexport type Tileset3DProps = {\n  // loading\n  throttleRequests?: boolean;\n  maxRequests?: number;\n  loadOptions?: LoaderOptions;\n  loadTiles?: boolean;\n  basePath?: string;\n  maximumMemoryUsage?: number;\n\n  // Metadata\n  description?: string;\n  attributions?: string[];\n\n  // Transforms\n  ellipsoid?: object;\n  modelMatrix?: Matrix4;\n\n  // Traversal\n  maximumScreenSpaceError?: number;\n  viewportTraversersMap?: any;\n  updateTransforms?: boolean;\n  viewDistanceScale?: number;\n\n  // Callbacks\n  onTileLoad?: (tile: Tile3D) => any;\n  onTileUnload?: (tile: Tile3D) => any;\n  onTileError?: (tile: Tile3D, message: string, url: string) => any;\n  contentLoader?: (tile: Tile3D) => Promise<void>;\n  onTraversalComplete?: (selectedTiles: Tile3D[]) => Tile3D[];\n};\n\ntype Props = {\n  description: string;\n  ellipsoid: object;\n  modelMatrix: Matrix4;\n  throttleRequests: boolean;\n  maximumMemoryUsage: number;\n  onTileLoad: (tile: Tile3D) => any;\n  onTileUnload: (tile: Tile3D) => any;\n  onTileError: (tile: Tile3D, message: string, url: string) => any;\n  onTraversalComplete: (selectedTiles: Tile3D[]) => Tile3D[];\n  maximumScreenSpaceError: number;\n  viewportTraversersMap: any;\n  attributions: string[];\n  maxRequests: number;\n  loadTiles: boolean;\n  loadOptions: LoaderOptions;\n  updateTransforms: boolean;\n  viewDistanceScale: number;\n  basePath: string;\n  contentLoader?: (tile: Tile3D) => Promise<void>;\n  i3s: {[key: string]: any};\n};\n\nconst DEFAULT_PROPS: Props = {\n  description: '',\n\n  ellipsoid: Ellipsoid.WGS84,\n  // A 4x4 transformation matrix this transforms the entire tileset.\n  modelMatrix: new Matrix4(),\n\n  // Set to false to disable network request throttling\n  throttleRequests: true,\n\n  // Number of simultaneous requsts, if throttleRequests is true\n  maxRequests: 64,\n\n  maximumMemoryUsage: 32,\n\n  /**\n   * Callback. Indicates this a tile's content was loaded\n   * @param tile {TileHeader}\n   */\n  onTileLoad: () => {},\n  /**\n   * Callback. Indicates this a tile's content was unloaded\n   * @param tile {TileHeader}\n   */\n  onTileUnload: () => {},\n  onTileError: () => {},\n  /**\n   * Callback. Allows post-process selectedTiles right after traversal.\n   * @param selectedTiles {TileHeader[]}\n   * @returns TileHeader[] - output array of tiles to return to deck.gl\n   */\n  onTraversalComplete: (selectedTiles: Tile3D[]) => selectedTiles,\n\n  // Optional async tile content loader\n  contentLoader: undefined,\n\n  // View distance scale modifier\n  viewDistanceScale: 1.0,\n\n  // TODO CESIUM\n  // The maximum screen space error used to drive level of detail refinement.\n  maximumScreenSpaceError: 8,\n\n  loadTiles: true,\n  updateTransforms: true,\n  viewportTraversersMap: null,\n\n  loadOptions: {fetch: {}},\n\n  attributions: [],\n  basePath: '',\n\n  i3s: {}\n};\n\n// Tracked Stats\nconst TILES_TOTAL = 'Tiles In Tileset(s)';\nconst TILES_IN_MEMORY = 'Tiles In Memory';\nconst TILES_IN_VIEW = 'Tiles In View';\nconst TILES_RENDERABLE = 'Tiles To Render';\nconst TILES_LOADED = 'Tiles Loaded';\nconst TILES_LOADING = 'Tiles Loading';\nconst TILES_UNLOADED = 'Tiles Unloaded';\nconst TILES_LOAD_FAILED = 'Failed Tile Loads';\nconst POINTS_COUNT = 'Points';\nconst TILES_GPU_MEMORY = 'Tile Memory Use';\n\nexport default class Tileset3D {\n  // props: Tileset3DProps;\n  options: Props;\n  loadOptions: {[key: string]: any};\n\n  type: string;\n  tileset: {[key: string]: any};\n  loader: LoaderWithParser;\n  url: string;\n  basePath: string;\n  modelMatrix: Matrix4;\n  ellipsoid: any;\n  lodMetricType: string;\n  lodMetricValue: number;\n  refine: string;\n  root: Tile3D | null;\n  roots: {[key: string]: Tile3D};\n  asset: {[key: string]: any};\n\n  description: string;\n  properties: any;\n  extras: any;\n  attributions: any;\n  credits: any;\n\n  stats: Stats;\n\n  traverseCounter: number;\n  geometricError: number;\n  selectedTiles: Tile3D[];\n\n  cartographicCenter: Vector3 | null;\n  cartesianCenter: Vector3 | null;\n  zoom: number;\n  boundingVolume: any;\n\n  // METRICS\n  // The maximum amount of GPU memory (in MB) that may be used to cache tiles.\n  // Tiles not in view are unloaded to enforce private\n  // The total amount of GPU memory in bytes used by the tileset.\n  gpuMemoryUsageInBytes: any;\n  dynamicScreenSpaceErrorComputedDensity: any;\n\n  // TRAVERSAL\n  _traverser: TilesetTraverser;\n  private _cache: TilesetCache;\n  _requestScheduler: RequestScheduler;\n\n  _frameNumber: number;\n  private _queryParamsString: string;\n  private _queryParams: any;\n  private _extensionsUsed: any;\n  private _tiles: {[id: string]: Tile3D};\n\n  // counter for tracking tiles requests\n  private _pendingCount: any;\n\n  // HOLD TRAVERSAL RESULTS\n  private lastUpdatedVieports: any[] | null;\n  private _requestedTiles: any;\n  private _emptyTiles: any;\n  private frameStateData: any;\n\n  maximumMemoryUsage: number;\n\n  /**\n   * Create a new Tileset3D\n   * @param json\n   * @param props\n   */\n  // eslint-disable-next-line max-statements\n  constructor(json: any, options?: Tileset3DProps) {\n    assert(json);\n\n    // PUBLIC MEMBERS\n    this.options = {...DEFAULT_PROPS, ...options};\n    // raw data\n    this.tileset = json;\n    this.loader = json.loader;\n    // could be  3d tiles, i3s\n    this.type = json.type;\n    // The url to a tileset JSON file.\n    this.url = json.url;\n    this.basePath = json.basePath || path.dirname(this.url);\n    this.modelMatrix = this.options.modelMatrix;\n    this.ellipsoid = this.options.ellipsoid;\n\n    // Geometric error when the tree is not rendered at all\n    this.lodMetricType = json.lodMetricType;\n    this.lodMetricValue = json.lodMetricValue;\n    this.refine = json.root.refine;\n\n    this.loadOptions = this.options.loadOptions || {};\n\n    this.root = null;\n    this.roots = {};\n    // view props\n    this.cartographicCenter = null;\n    this.cartesianCenter = null;\n    this.zoom = 1;\n    this.boundingVolume = null;\n\n    // TRAVERSAL\n    this.traverseCounter = 0;\n    this.geometricError = 0;\n    this._traverser = this._initializeTraverser();\n    this._cache = new TilesetCache();\n    this._requestScheduler = new RequestScheduler({\n      throttleRequests: this.options.throttleRequests,\n      maxRequests: this.options.maxRequests\n    });\n    // update tracker\n    // increase in each update cycle\n    this._frameNumber = 0;\n\n    // counter for tracking tiles requests\n    this._pendingCount = 0;\n\n    // HOLD TRAVERSAL RESULTS\n    this._tiles = {};\n    this.selectedTiles = [];\n    this._emptyTiles = [];\n    this._requestedTiles = [];\n    this.frameStateData = {};\n    this.lastUpdatedVieports = null;\n\n    this._queryParams = {};\n    this._queryParamsString = '';\n\n    // METRICS\n    // The maximum amount of GPU memory (in MB) that may be used to cache tiles.\n    // Tiles not in view are unloaded to enforce this.\n    this.maximumMemoryUsage = this.options.maximumMemoryUsage || 32;\n    // The total amount of GPU memory in bytes used by the tileset.\n    this.gpuMemoryUsageInBytes = 0;\n    this.stats = new Stats({id: this.url});\n    this._initializeStats();\n\n    // EXTRACTED FROM TILESET\n    this._extensionsUsed = undefined;\n    this.dynamicScreenSpaceErrorComputedDensity = 0.0; // Updated based on the camera position and direction\n    // Metadata for the entire tileset\n    this.extras = null;\n    this.asset = {};\n    this.credits = {};\n    this.description = this.options.description || '';\n\n    this._initializeTileSet(json);\n  }\n\n  /** Release resources */\n  destroy(): void {\n    this._destroy();\n  }\n\n  /** Is the tileset loaded (update needs to have been called at least once) */\n  isLoaded(): boolean {\n    // Check that `_frameNumber !== 0` which means that update was called at least once\n    return this._pendingCount === 0 && this._frameNumber !== 0;\n  }\n\n  get tiles(): object[] {\n    return Object.values(this._tiles);\n  }\n\n  get frameNumber(): number {\n    return this._frameNumber;\n  }\n\n  get queryParams(): string {\n    if (!this._queryParamsString) {\n      this._queryParamsString = getQueryParamString(this._queryParams);\n    }\n    return this._queryParamsString;\n  }\n\n  setProps(props: Tileset3DProps): void {\n    this.options = {...this.options, ...props};\n  }\n\n  /** @deprecated */\n  setOptions(options: Tileset3DProps): void {\n    this.options = {...this.options, ...options};\n  }\n\n  /**\n   * Return a loadable tile url for a specific tile subpath\n   * @param tilePath a tile subpath\n   */\n  getTileUrl(tilePath: string): string {\n    const isDataUrl = tilePath.startsWith('data:');\n    if (isDataUrl) {\n      return tilePath;\n    }\n    return `${tilePath}${this.queryParams}`;\n  }\n\n  // TODO CESIUM specific\n  hasExtension(extensionName: string): boolean {\n    return Boolean(this._extensionsUsed && this._extensionsUsed.indexOf(extensionName) > -1);\n  }\n\n  /**\n   * Update visible tiles relying on a list of viewports\n   * @param viewports - list of viewports\n   */\n  // eslint-disable-next-line max-statements, complexity\n  update(viewports: any[]): void {\n    if ('loadTiles' in this.options && !this.options.loadTiles) {\n      return;\n    }\n    if (this.traverseCounter > 0) {\n      return;\n    }\n    if (!viewports && this.lastUpdatedVieports) {\n      viewports = this.lastUpdatedVieports;\n    } else {\n      this.lastUpdatedVieports = viewports;\n    }\n    if (!(viewports instanceof Array)) {\n      viewports = [viewports];\n    }\n\n    this._cache.reset();\n    this._frameNumber++;\n    this.traverseCounter = viewports.length;\n    const viewportsToTraverse: string[] = [];\n    // First loop to decrement traverseCounter\n    for (const viewport of viewports) {\n      const id = viewport.id as string;\n      if (this._needTraverse(id)) {\n        viewportsToTraverse.push(id);\n      } else {\n        this.traverseCounter--;\n      }\n    }\n\n    // Second loop to traverse\n    for (const viewport of viewports) {\n      const id = viewport.id as string;\n      if (!this.roots[id]) {\n        this.roots[id] = this._initializeTileHeaders(this.tileset, null);\n      }\n\n      if (!viewportsToTraverse.includes(id)) {\n        continue; // eslint-disable-line no-continue\n      }\n      const frameState = getFrameState(viewport, this._frameNumber);\n      this._traverser.traverse(this.roots[id], frameState, this.options);\n    }\n  }\n\n  /**\n   * Check if traversal is needed for particular viewport\n   * @param {string} viewportId - id of a viewport\n   * @return {boolean}\n   */\n  _needTraverse(viewportId: string): boolean {\n    let traverserId = viewportId;\n    if (this.options.viewportTraversersMap) {\n      traverserId = this.options.viewportTraversersMap[viewportId];\n    }\n    if (traverserId !== viewportId) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * The callback to post-process tiles after traversal procedure\n   * @param frameState - frame state for tile culling\n   */\n  _onTraversalEnd(frameState: FrameState): void {\n    const id = frameState.viewport.id;\n    if (!this.frameStateData[id]) {\n      this.frameStateData[id] = {selectedTiles: [], _requestedTiles: [], _emptyTiles: []};\n    }\n    const currentFrameStateData = this.frameStateData[id];\n    const selectedTiles = Object.values(this._traverser.selectedTiles);\n    currentFrameStateData.selectedTiles = selectedTiles;\n    currentFrameStateData._requestedTiles = Object.values(this._traverser.requestedTiles);\n    currentFrameStateData._emptyTiles = Object.values(this._traverser.emptyTiles);\n\n    this.traverseCounter--;\n    if (this.traverseCounter > 0) {\n      return;\n    }\n\n    this._updateTiles();\n  }\n\n  /**\n   * Update tiles relying on data from all traversers\n   */\n  _updateTiles(): void {\n    this.selectedTiles = [];\n    this._requestedTiles = [];\n    this._emptyTiles = [];\n\n    for (const frameStateKey in this.frameStateData) {\n      const frameStateDataValue = this.frameStateData[frameStateKey];\n      this.selectedTiles = this.selectedTiles.concat(frameStateDataValue.selectedTiles);\n      this._requestedTiles = this._requestedTiles.concat(frameStateDataValue._requestedTiles);\n      this._emptyTiles = this._emptyTiles.concat(frameStateDataValue._emptyTiles);\n    }\n\n    this.selectedTiles = this.options.onTraversalComplete(this.selectedTiles);\n\n    for (const tile of this.selectedTiles) {\n      this._tiles[tile.id] = tile;\n    }\n\n    this._loadTiles();\n    this._unloadTiles();\n    this._updateStats();\n  }\n\n  _tilesChanged(oldSelectedTiles, selectedTiles) {\n    if (oldSelectedTiles.length !== selectedTiles.length) {\n      return true;\n    }\n    const set1 = new Set(oldSelectedTiles.map((t) => t.id));\n    const set2 = new Set(selectedTiles.map((t) => t.id));\n    let changed = oldSelectedTiles.filter((x) => !set2.has(x.id)).length > 0;\n    changed = changed || selectedTiles.filter((x) => !set1.has(x.id)).length > 0;\n    return changed;\n  }\n\n  _loadTiles() {\n    // Sort requests by priority before making any requests.\n    // This makes it less likely this requests will be cancelled after being issued.\n    // requestedTiles.sort((a, b) => a._priority - b._priority);\n    for (const tile of this._requestedTiles) {\n      if (tile.contentUnloaded) {\n        this._loadTile(tile);\n      }\n    }\n  }\n\n  _unloadTiles() {\n    // unload tiles from cache when hit maximumMemoryUsage\n    this._cache.unloadTiles(this, (tileset, tile) => tileset._unloadTile(tile));\n  }\n\n  _updateStats() {\n    let tilesRenderable = 0;\n    let pointsRenderable = 0;\n    for (const tile of this.selectedTiles) {\n      if (tile.contentAvailable && tile.content) {\n        tilesRenderable++;\n        if (tile.content.pointCount) {\n          pointsRenderable += tile.content.pointCount;\n        }\n      }\n    }\n\n    this.stats.get(TILES_IN_VIEW).count = this.selectedTiles.length;\n    this.stats.get(TILES_RENDERABLE).count = tilesRenderable;\n    this.stats.get(POINTS_COUNT).count = pointsRenderable;\n  }\n\n  _initializeTileSet(tilesetJson) {\n    this.root = this._initializeTileHeaders(tilesetJson, null);\n\n    // TODO CESIUM Specific\n    if (this.type === TILESET_TYPE.TILES3D) {\n      this._initializeCesiumTileset(tilesetJson);\n    }\n\n    if (this.type === TILESET_TYPE.I3S) {\n      this._initializeI3STileset();\n    }\n    // Calculate cartographicCenter & zoom props to help apps center view on tileset\n    this._calculateViewProps();\n  }\n\n  // Called during initialize Tileset to initialize the tileset's cartographic center (longitude, latitude) and zoom.\n  _calculateViewProps() {\n    const root = this.root as Tile3D;\n    assert(root);\n    const {center} = root.boundingVolume;\n    // TODO - handle all cases\n    if (!center) {\n      // eslint-disable-next-line\n      console.warn('center was not pre-calculated for the root tile');\n      this.cartographicCenter = new Vector3();\n      this.zoom = 1;\n      return;\n    }\n    this.cartographicCenter = Ellipsoid.WGS84.cartesianToCartographic(center, new Vector3());\n    this.cartesianCenter = center;\n    this.zoom = getZoomFromBoundingVolume(root.boundingVolume);\n  }\n\n  _initializeStats() {\n    this.stats.get(TILES_TOTAL);\n    this.stats.get(TILES_LOADING);\n    this.stats.get(TILES_IN_MEMORY);\n    this.stats.get(TILES_IN_VIEW);\n    this.stats.get(TILES_RENDERABLE);\n    this.stats.get(TILES_LOADED);\n    this.stats.get(TILES_UNLOADED);\n    this.stats.get(TILES_LOAD_FAILED);\n    this.stats.get(POINTS_COUNT, 'memory');\n    this.stats.get(TILES_GPU_MEMORY, 'memory');\n  }\n\n  // Installs the main tileset JSON file or a tileset JSON file referenced from a tile.\n  // eslint-disable-next-line max-statements\n  _initializeTileHeaders(tilesetJson, parentTileHeader) {\n    // A tileset JSON file referenced from a tile may exist in a different directory than the root tileset.\n    // Get the basePath relative to the external tileset.\n    const rootTile = new Tile3D(this, tilesetJson.root, parentTileHeader); // resource\n\n    // If there is a parentTileHeader, add the root of the currently loading tileset\n    // to parentTileHeader's children, and update its depth.\n    if (parentTileHeader) {\n      parentTileHeader.children.push(rootTile);\n      rootTile.depth = parentTileHeader.depth + 1;\n    }\n\n    // Cesium 3d tiles knows the hierarchy beforehand\n    if (this.type === TILESET_TYPE.TILES3D) {\n      const stack: Tile3D[] = [];\n      stack.push(rootTile);\n\n      while (stack.length > 0) {\n        const tile = stack.pop() as Tile3D;\n        this.stats.get(TILES_TOTAL).incrementCount();\n        const children = tile.header.children || [];\n        for (const childHeader of children) {\n          const childTile = new Tile3D(this, childHeader, tile);\n          tile.children.push(childTile);\n          childTile.depth = tile.depth + 1;\n          stack.push(childTile);\n        }\n      }\n    }\n\n    return rootTile;\n  }\n\n  _initializeTraverser() {\n    let TraverserClass;\n    const type = this.type;\n    switch (type) {\n      case TILESET_TYPE.TILES3D:\n        TraverserClass = Tileset3DTraverser;\n        break;\n      case TILESET_TYPE.I3S:\n        TraverserClass = I3SetTraverser;\n        break;\n      default:\n        TraverserClass = TilesetTraverser;\n    }\n\n    return new TraverserClass({\n      basePath: this.basePath,\n      onTraversalEnd: this._onTraversalEnd.bind(this)\n    });\n  }\n\n  _destroyTileHeaders(parentTile) {\n    this._destroySubtree(parentTile);\n  }\n\n  async _loadTile(tile) {\n    let loaded;\n    try {\n      this._onStartTileLoading();\n      loaded = await tile.loadContent();\n    } catch (error) {\n      this._onTileLoadError(tile, error);\n    } finally {\n      this._onEndTileLoading();\n      this._onTileLoad(tile, loaded);\n    }\n  }\n\n  _onTileLoadError(tile, error) {\n    this.stats.get(TILES_LOAD_FAILED).incrementCount();\n\n    const message = error.message || error.toString();\n    const url = tile.url;\n    // TODO - Allow for probe log to be injected instead of console?\n    console.error(`A 3D tile failed to load: ${tile.url} ${message}`); // eslint-disable-line\n    this.options.onTileError(tile, message, url);\n  }\n\n  _onTileLoad(tile, loaded) {\n    if (!loaded) {\n      return;\n    }\n\n    // add coordinateOrigin and modelMatrix to tile\n    if (tile && tile.content) {\n      calculateTransformProps(tile, tile.content);\n    }\n\n    this._addTileToCache(tile);\n    this.options.onTileLoad(tile);\n  }\n\n  _onStartTileLoading() {\n    this._pendingCount++;\n    this.stats.get(TILES_LOADING).incrementCount();\n  }\n\n  _onEndTileLoading() {\n    this._pendingCount--;\n    this.stats.get(TILES_LOADING).decrementCount();\n  }\n\n  _addTileToCache(tile) {\n    this._cache.add(this, tile, (tileset) => tileset._updateCacheStats(tile));\n  }\n\n  _updateCacheStats(tile) {\n    this.stats.get(TILES_LOADED).incrementCount();\n    this.stats.get(TILES_IN_MEMORY).incrementCount();\n\n    // Good enough? Just use the raw binary ArrayBuffer's byte length.\n    this.gpuMemoryUsageInBytes += tile.content.byteLength || 0;\n    this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n  }\n\n  _unloadTile(tile) {\n    this.gpuMemoryUsageInBytes -= (tile.content && tile.content.byteLength) || 0;\n\n    this.stats.get(TILES_IN_MEMORY).decrementCount();\n    this.stats.get(TILES_UNLOADED).incrementCount();\n    this.stats.get(TILES_GPU_MEMORY).count = this.gpuMemoryUsageInBytes;\n\n    this.options.onTileUnload(tile);\n    tile.unloadContent();\n  }\n\n  // Traverse the tree and destroy all tiles\n  _destroy() {\n    const stack: Tile3D[] = [];\n\n    if (this.root) {\n      stack.push(this.root);\n    }\n\n    while (stack.length > 0) {\n      const tile: Tile3D = stack.pop() as Tile3D;\n\n      for (const child of tile.children) {\n        stack.push(child);\n      }\n\n      this._destroyTile(tile);\n    }\n    this.root = null;\n  }\n\n  // Traverse the tree and destroy all sub tiles\n  _destroySubtree(tile) {\n    const root = tile;\n    const stack: Tile3D[] = [];\n    stack.push(root);\n    while (stack.length > 0) {\n      tile = stack.pop();\n      for (const child of tile.children) {\n        stack.push(child);\n      }\n      if (tile !== root) {\n        this._destroyTile(tile);\n      }\n    }\n    root.children = [];\n  }\n\n  _destroyTile(tile) {\n    this._cache.unloadTile(this, tile);\n    this._unloadTile(tile);\n    tile.destroy();\n  }\n\n  _initializeCesiumTileset(tilesetJson) {\n    this.asset = tilesetJson.asset;\n    if (!this.asset) {\n      throw new Error('Tileset must have an asset property.');\n    }\n    if (this.asset.version !== '0.0' && this.asset.version !== '1.0') {\n      throw new Error('The tileset must be 3D Tiles version 0.0 or 1.0.');\n    }\n\n    // Note: `asset.tilesetVersion` is version of the tileset itself (not the version of the 3D TILES standard)\n    // We add this version as a `v=1.0` query param to fetch the right version and not get an older cached version\n    if ('tilesetVersion' in this.asset) {\n      this._queryParams.v = this.asset.tilesetVersion;\n    }\n\n    // TODO - ion resources have a credits property we can use for additional attribution.\n    this.credits = {\n      attributions: this.options.attributions || []\n    };\n    this.description = this.options.description || '';\n\n    // Gets the tileset's properties dictionary object, which contains metadata about per-feature properties.\n    this.properties = tilesetJson.properties;\n    this.geometricError = tilesetJson.geometricError;\n    this._extensionsUsed = tilesetJson.extensionsUsed;\n    // Returns the extras property at the top of the tileset JSON (application specific metadata).\n    this.extras = tilesetJson.extras;\n  }\n\n  _initializeI3STileset() {\n    if (this.loadOptions.i3s && 'token' in this.loadOptions.i3s) {\n      this._queryParams.token = this.loadOptions.i3s.token;\n    }\n  }\n}\n\nfunction getQueryParamString(queryParams): string {\n  const queryParamStrings: string[] = [];\n  for (const key of Object.keys(queryParams)) {\n    queryParamStrings.push(`${key}=${queryParams[key]}`);\n  }\n  switch (queryParamStrings.length) {\n    case 0:\n      return '';\n    case 1:\n      return `?${queryParamStrings[0]}`;\n    default:\n      return `?${queryParamStrings.join('&')}`;\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport DoublyLinkedListNode from '../utils/doubly-linked-list-node';\n\n/**\n * Doubly linked list\n *\n * @private\n */\nexport default class DoublyLinkedList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this._length = 0;\n  }\n\n  get length() {\n    return this._length;\n  }\n\n  /**\n   * Adds the item to the end of the list\n   * @param {*} [item]\n   * @return {DoublyLinkedListNode}\n   */\n  add(item) {\n    const node = new DoublyLinkedListNode(item, this.tail, null);\n\n    if (this.tail) {\n      this.tail.next = node;\n      this.tail = node;\n    } else {\n      this.head = node;\n      this.tail = node;\n    }\n\n    ++this._length;\n\n    return node;\n  }\n\n  /**\n   * Removes the given node from the list\n   * @param {DoublyLinkedListNode} node\n   */\n  remove(node) {\n    if (!node) {\n      return;\n    }\n\n    if (node.previous && node.next) {\n      node.previous.next = node.next;\n      node.next.previous = node.previous;\n    } else if (node.previous) {\n      // Remove last node\n      node.previous.next = null;\n      this.tail = node.previous;\n    } else if (node.next) {\n      // Remove first node\n      node.next.previous = null;\n      this.head = node.next;\n    } else {\n      // Remove last node in the linked list\n      this.head = null;\n      this.tail = null;\n    }\n\n    node.next = null;\n    node.previous = null;\n\n    --this._length;\n  }\n\n  /**\n   * Moves nextNode after node\n   * @param {DoublyLinkedListNode} node\n   * @param {DoublyLinkedListNode} nextNode\n   */\n  splice(node, nextNode) {\n    if (node === nextNode) {\n      return;\n    }\n\n    // Remove nextNode, then insert after node\n    this.remove(nextNode);\n    this._insert(node, nextNode);\n  }\n\n  _insert(node, nextNode) {\n    const oldNodeNext = node.next;\n    node.next = nextNode;\n\n    // nextNode is the new tail\n    if (this.tail === node) {\n      this.tail = nextNode;\n    } else {\n      oldNodeNext.previous = nextNode;\n    }\n\n    nextNode.next = oldNodeNext;\n    nextNode.previous = node;\n\n    ++this._length;\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/**\n * Doubly linked list node\n *\n * @private\n */\nexport default class DoublyLinkedListNode {\n  constructor(item, previous, next) {\n    this.item = item;\n    this.previous = previous;\n    this.next = next;\n  }\n}\n","import {Vector3} from '@math.gl/core';\n\nconst WGS84_RADIUS_X = 6378137.0;\nconst WGS84_RADIUS_Y = 6378137.0;\nconst WGS84_RADIUS_Z = 6356752.3142451793;\n\nconst scratchVector = new Vector3();\n\n/**\n * Calculate appropriate zoom value for a particular boundingVolume\n * @param {BoundingSphere, OrientedBoundingBox} boundingVolume - the instance of bounding volume\n * @returns {number} - zoom value\n */\nexport function getZoomFromBoundingVolume(boundingVolume) {\n  const {halfAxes, radius, width, height} = boundingVolume;\n\n  if (halfAxes) {\n    // OrientedBoundingBox\n    const obbSize = getObbSize(halfAxes);\n    // Use WGS84_RADIUS_Z to allign with BoundingSphere algorithm\n    return Math.log2(WGS84_RADIUS_Z / obbSize);\n  } else if (radius) {\n    // BoundingSphere\n    return Math.log2(WGS84_RADIUS_Z / radius);\n  } else if (height && width) {\n    // BoundingRectangle\n    const zoomX = Math.log2(WGS84_RADIUS_X / width);\n    const zoomY = Math.log2(WGS84_RADIUS_Y / height);\n\n    return (zoomX + zoomY) / 2;\n  }\n\n  return 1;\n}\n\nfunction getObbSize(halfAxes) {\n  halfAxes.getColumn(0, scratchVector);\n  const axeY = halfAxes.getColumn(1);\n  const axeZ = halfAxes.getColumn(2);\n  const farthestVertex = scratchVector.add(axeY).add(axeZ);\n  const size = farthestVertex.len();\n  return size;\n}\n","// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\n\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString: string): string {\n  // If resource is a data url, extract any embedded mime type\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\n  if (matches) {\n    return matches[1];\n  }\n  return mimeString;\n}\n\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url: string): string {\n  // If resource is a data URL, extract any embedded mime type\n  const matches = DATA_URL_PATTERN.exec(url);\n  if (matches) {\n    return matches[1];\n  }\n  return '';\n}\n","//\nimport {fs} from '@loaders.gl/loader-utils';\n\n/**\n * Reads a chunk from a random access file\n * @param file\n * @param start\n * @param length\n * @returns\n */\nexport async function readArrayBuffer(\n  file: Blob | ArrayBuffer | string | number,\n  start: number,\n  length: number\n): Promise<ArrayBuffer> {\n  if (typeof file === 'number') {\n    return await fs._readToArrayBuffer(file, start, length);\n  }\n  // TODO - we can do better for ArrayBuffer and string\n  if (!(file instanceof Blob)) {\n    file = new Blob([file]);\n  }\n  const slice = file.slice(start, start + length);\n  return await readBlob(slice);\n}\n\n/**\n * Read a slice of a Blob or File, without loading the entire file into memory\n * The trick when reading File objects is to read successive \"slices\" of the File\n * Per spec https://w3c.github.io/FileAPI/, slicing a File only updates the start and end fields\n * Actually reading from file happens in `readAsArrayBuffer`\n * @param blob to read\n */\nexport async function readBlob(blob: Blob): Promise<ArrayBuffer> {\n  return await new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = (event: ProgressEvent<FileReader>) =>\n      resolve(event?.target?.result as ArrayBuffer);\n    // TODO - reject with a proper Error\n    fileReader.onerror = (error: ProgressEvent<FileReader>) => reject(error);\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n","// File read\nimport {isBrowser, resolvePath, fs, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\n// TODO - this is not tested\n// const isDataURL = (url) => url.startsWith('data:');\n\n/**\n * In a few cases (data URIs, node.js) \"files\" can be read synchronously\n */\nexport function readFileSync(url: string, options: object = {}) {\n  url = resolvePath(url);\n\n  // Only support this if we can also support sync data URL decoding in browser\n  // if (isDataURL(url)) {\n  //   return decodeDataUri(url);\n  // }\n\n  if (!isBrowser) {\n    const buffer = fs.readFileSync(url, options);\n    return typeof buffer !== 'string' ? toArrayBuffer(buffer) : buffer;\n  }\n\n  // @ts-ignore\n  if (!options.nothrow) {\n    // throw new Error('Cant load URI synchronously');\n    assert(false);\n  }\n\n  return null;\n}\n","import {setGlobalOptions} from '../loader-utils/option-utils';\n\n/**\n * Set global loader options\n * @param options\n */\nexport function setLoaderOptions(options: object): void {\n  setGlobalOptions(options);\n}\n","import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {ConsoleLog} from './loggers';\n\nexport const DEFAULT_LOADER_OPTIONS: LoaderOptions = {\n  // baseUri\n  fetch: null,\n  mimeType: undefined,\n  nothrow: false,\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n\n  CDN: 'https://unpkg.com/@loaders.gl',\n  worker: true, // By default, use worker if provided by loader.\n  maxConcurrency: 3, // How many worker instances should be created for each loader.\n  maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n  reuseWorkers: true, // By default reuse workers,\n  _workerType: '', // 'test' to use locally generated workers\n\n  limit: 0,\n  _limitMB: 0,\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n  transforms: []\n};\n\nexport const REMOVED_LOADER_OPTIONS = {\n  throws: 'nothrow',\n  dataType: '(no longer used)',\n  uri: 'baseUri',\n  // Warn if fetch options are used on top-level\n  method: 'fetch.method',\n  headers: 'fetch.headers',\n  body: 'fetch.body',\n  mode: 'fetch.mode',\n  credentials: 'fetch.credentials',\n  cache: 'fetch.cache',\n  redirect: 'fetch.redirect',\n  referrer: 'fetch.referrer',\n  referrerPolicy: 'fetch.referrerPolicy',\n  integrity: 'fetch.integrity',\n  keepalive: 'fetch.keepalive',\n  signal: 'fetch.signal'\n};\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big string into chunks and yields them one-by-one as ArrayBuffers\n * @param blob string to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeStringIterator(\n  string: string,\n  options?: IteratorOptions\n): Iterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  const textEncoder = new TextEncoder();\n  while (offset < string.length) {\n    // Create a chunk of the right size\n    const chunkLength = Math.min(string.length - offset, chunkSize);\n    const chunk = string.slice(offset, offset + chunkLength);\n    offset += chunkLength;\n\n    // yield an ArrayBuffer chunk\n    yield textEncoder.encode(chunk);\n  }\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n\n/**\n * Returns an iterator that breaks a big ArrayBuffer into chunks and yields them one-by-one\n * @param blob ArrayBuffer to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeArrayBufferIterator(\n  arrayBuffer: ArrayBuffer,\n  options: IteratorOptions = {}\n): Iterable<ArrayBuffer> {\n  const {chunkSize = DEFAULT_CHUNK_SIZE} = options;\n\n  let byteOffset = 0;\n\n  while (byteOffset < arrayBuffer.byteLength) {\n    // Create a chunk of the right size\n    const chunkByteLength = Math.min(arrayBuffer.byteLength - byteOffset, chunkSize);\n    const chunk = new ArrayBuffer(chunkByteLength);\n\n    // Copy data from the big chunk\n    const sourceArray = new Uint8Array(arrayBuffer, byteOffset, chunkByteLength);\n    const chunkArray = new Uint8Array(chunk);\n    chunkArray.set(sourceArray);\n\n    // yield the chunk\n    byteOffset += chunkByteLength;\n    yield chunk;\n  }\n}\n","import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB — biggest value that keeps UI responsive\n\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(\n  blob: Blob,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  while (offset < blob.size) {\n    const end = offset + chunkSize;\n\n    const chunk = await blob.slice(offset, end).arrayBuffer();\n\n    offset = end;\n    yield chunk;\n  }\n}\n","import type {Readable} from 'stream';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport type StreamIteratorOptions = {\n  _streamReadAhead?: boolean;\n};\n\n/**\n * Returns an async iterable that reads from a stream (works in both Node.js and browsers)\n * @param stream stream to iterator over\n */\nexport function makeStreamIterator(\n  stream: ReadableStream | Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  return isBrowser\n    ? makeBrowserStreamIterator(stream as ReadableStream, options)\n    : makeNodeStreamIterator(stream as Readable, options);\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @see https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nasync function* makeBrowserStreamIterator(\n  stream: ReadableStream,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // WhatWG: stream is supposed to have a `getIterator` method\n  // if (typeof stream.getIterator === 'function') {\n  //   return stream.getIterator();\n  // }\n  // if (typeof stream[Symbol.asyncIterator] === 'function') {\n  //   return makeToArrayBufferIterator(stream);\n  // }\n\n  // In the browser, we first need to get a lock on the stream\n  const reader = stream.getReader();\n\n  let nextBatchPromise: Promise<{done?: boolean; value?: Uint8Array}> | undefined;\n\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const currentBatchPromise = nextBatchPromise || reader.read();\n      // Issue a read for an additional batch, while we await the next batch\n      // Idea is to make fetching happen in parallel with processing / parsing\n      if (options?._streamReadAhead) {\n        nextBatchPromise = reader.read();\n      }\n      // Read from the stream\n      // value is a Uint8Array\n      const {done, value} = await currentBatchPromise;\n      // Exit if we're done\n      if (done) {\n        return;\n      }\n      // Else yield the chunk\n      yield toArrayBuffer(value);\n    }\n  } catch (error) {\n    // TODO - examples makes it look like this should always be called,\n    // but that generates exceptions so only call it if we do not reach the end\n    reader.releaseLock();\n  }\n}\n\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @note Requires Node.js >= 10\n */\nasync function* makeNodeStreamIterator(\n  stream: Readable,\n  options?: StreamIteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  // Hacky test for node version to ensure we don't call bad polyfills\n  // NODE 10+: stream is an asyncIterator\n  for await (const chunk of stream) {\n    yield toArrayBuffer(chunk); // Coerce each chunk to ArrayBuffer\n  }\n}\n/* TODO - remove NODE < 10\n * @see https://github.com/bustle/streaming-iterables, MIT license\n *\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return;\n  }\n\n  // TODO - check if is this ever used in Node 10+?\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState?.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n\nasync function onceReadable(stream: Readable): Promise<any> {\n  return new Promise((resolve) => {\n    stream.once('readable', resolve);\n  });\n}\n  */\n","import type {\n  SyncDataType,\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions\n} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {selectLoaderSync} from './select-loader';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {normalizeOptions} from '../loader-utils/option-utils';\nimport {getArrayBufferOrStringFromDataSync} from '../loader-utils/get-data';\nimport {getLoaderContext, getLoadersFromContext} from '../loader-utils/loader-context';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\n\n/**\n * Parses `data` synchronously using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport function parseSync(\n  data: SyncDataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): any {\n  assert(!context || typeof context === 'object'); // parseSync no longer accepts final url\n\n  // Signature: parseSync(data, options)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  options = options || {};\n\n  // Chooses a loader (and normalizes it)\n  // Also use any loaders in the context, new loaders take priority\n  const typedLoaders = loaders as Loader | Loader[] | undefined;\n  const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n  const loader = selectLoaderSync(data, candidateLoaders, options);\n  // Note: if nothrow option was set, it is possible that no loader was found, if so just return null\n  if (!loader) {\n    return null;\n  }\n\n  // Normalize options\n  options = normalizeOptions(options, loader, candidateLoaders);\n\n  // Extract a url for auto detection\n  const {url} = getResourceUrlAndType(data);\n\n  const parse = () => {\n    throw new Error('parseSync called parse');\n  };\n  context = getLoaderContext({url, parseSync, parse, loaders: loaders as Loader[]}, options);\n\n  return parseWithLoaderSync(loader as LoaderWithParser, data, options, context);\n}\n\n// TODO - should accept loader.parseSync/parse and generate 1 chunk asyncIterator\nfunction parseWithLoaderSync(\n  loader: LoaderWithParser,\n  data: SyncDataType,\n  options: LoaderOptions,\n  context: LoaderContext\n) {\n  data = getArrayBufferOrStringFromDataSync(data, loader, options);\n\n  if (loader.parseTextSync && typeof data === 'string') {\n    return loader.parseTextSync(data, options); // , context, loader);\n  }\n\n  if (loader.parseSync && data instanceof ArrayBuffer) {\n    return loader.parseSync(data, options, context); // , loader);\n  }\n\n  // TBD - If synchronous parser not available, return null\n  throw new Error(\n    `${loader.name} loader: 'parseSync' not supported by this loader, use 'parse' instead. ${\n      context.url || ''\n    }`\n  );\n}\n","import type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {isBlob} from '../../javascript-utils/is-type';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * Note: Load does duplicate a lot of parse.\n * it can also call fetchFile on string urls, which `parse` won't do.\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function load(\n  url: string | DataType,\n  loaders?: Loader | Loader[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<any> {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders as LoaderOptions;\n    loaders = undefined;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options);\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetch(url);\n    // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  }\n\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    data = await fetch(url);\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  return await parse(data, loaders, options);\n}\n","import type {LoaderWithParser, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/option-utils';\n\nimport {parseInBatches} from './parse-in-batches';\n\ntype FileType = string | File | Blob | Response | (string | File | Blob | Response)[] | FileList;\n\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\nexport function loadInBatches(\n  files: FileType,\n  loaders?: LoaderWithParser | LoaderWithParser[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>>;\n\nexport function loadInBatches(\n  files: FileType[] | FileList,\n  loaders?: LoaderWithParser | LoaderWithParser[] | LoaderOptions,\n  options?: LoaderOptions,\n  context?: LoaderContext\n): Promise<AsyncIterable<any>>;\n\nexport function loadInBatches(files, loaders, options, context) {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    context = undefined; // context not supported in short signature\n    options = loaders;\n    loaders = null;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(options || {});\n\n  // Single url/file\n  if (!Array.isArray(files)) {\n    return loadOneFileInBatches(files, loaders, options, fetch);\n  }\n\n  // Multiple URLs / files\n  const promises = files.map((file) => loadOneFileInBatches(file, loaders, options, fetch));\n\n  // No point in waiting here for all responses before starting to stream individual streams?\n  return promises;\n}\n\nasync function loadOneFileInBatches(file, loaders, options, fetch) {\n  if (typeof file === 'string') {\n    const url = file;\n    const response = await fetch(url);\n    return await parseInBatches(response, loaders, options);\n  }\n  return await parseInBatches(file, loaders, options);\n}\n","import type {Writer, WriterOptions} from '@loaders.gl/loader-utils';\nimport {encode, encodeSync} from './encode';\nimport {writeFile, writeFileSync} from '../fetch/write-file';\n\nexport async function save(data, url, writer: Writer, options: WriterOptions) {\n  const encodedData = await encode(data, writer, options);\n  return await writeFile(url, encodedData);\n}\n\nexport function saveSync(data, url, writer, options) {\n  const encodedData = encodeSync(data, writer, options);\n  return writeFileSync(url, encodedData);\n}\n","import type {ReadableStreamType} from '../../javascript-utils/is-type';\nimport type {MakeDOMStreamOptions} from './make-dom-stream';\nimport type {MakeNodeStreamOptions} from './make-node-stream';\n\nimport {isBrowser} from '@loaders.gl/loader-utils';\nimport {makeDOMStream} from './make-dom-stream';\nimport {makeNodeStream} from './make-node-stream';\n\nexport type MakeStreamOptions = MakeDOMStreamOptions | MakeNodeStreamOptions;\n\n/**\n * Returns a stream for an (async) iterator (works in both Node.js and browsers)\n */\nexport function makeStream(\n  data: Iterable<ArrayBuffer> | AsyncIterable<ArrayBuffer>,\n  options?: MakeStreamOptions\n): ReadableStreamType {\n  return isBrowser ? makeDOMStream(data, options) : makeNodeStream(data, options);\n}\n","// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nimport {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullWorkerLoader: Loader = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  worker: true,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n\n/**\n * Loads any data and returns null (or optionally passes through data unparsed)\n */\nexport const NullLoader: LoaderWithParser = {\n  name: 'Null loader',\n  id: 'null',\n  module: 'core',\n  version: VERSION,\n  mimeTypes: ['application/x.empty'],\n  extensions: ['null'],\n  parse: async (arrayBuffer) => arrayBuffer,\n  parseSync: (arrayBuffer) => arrayBuffer,\n  parseInBatches: async function* generator(asyncIterator) {\n    for await (const batch of asyncIterator) {\n      yield batch;\n    }\n  },\n  tests: [() => false],\n  options: {\n    null: {}\n  }\n};\n","// Forked from github AnthumChris/fetch-progress-indicators under MIT license\n\n/**\n * Intercepts the Response stream and creates a new Response\n */\nexport default async function fetchProgress(\n  response: Response | Promise<Response>,\n  onProgress: any, // TODO better callback types\n  onDone = () => {},\n  onError = () => {}\n) {\n  response = await response;\n  if (!response.ok) {\n    // ERROR checking needs to be done separately\n    return response;\n  }\n  const body = response.body;\n  if (!body) {\n    // 'ReadableStream not yet supported in this browser.\n    return response;\n  }\n  const contentLength = response.headers.get('content-length') || 0;\n  const totalBytes = contentLength && parseInt(contentLength);\n  if (!(contentLength > 0)) {\n    return response;\n  }\n  // Currently override only implemented in browser\n  if (typeof ReadableStream === 'undefined' || !body.getReader) {\n    return response;\n  }\n\n  // Create a new stream that invisbly wraps original stream\n  const progressStream = new ReadableStream({\n    async start(controller) {\n      const reader = body.getReader();\n      await read(controller, reader, 0, totalBytes, onProgress, onDone, onError);\n    }\n  });\n\n  return new Response(progressStream);\n}\n\n// Forward to original streams controller\n// TODO - this causes a crazy deep \"async stack\"... rewrite as async iterator?\n// eslint-disable-next-line max-params\nasync function read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError) {\n  try {\n    const {done, value} = await reader.read();\n    if (done) {\n      onDone();\n      controller.close();\n      return;\n    }\n    loadedBytes += value.byteLength;\n    const percent = Math.round((loadedBytes / totalBytes) * 100);\n    onProgress(percent, {loadedBytes, totalBytes});\n    controller.enqueue(value);\n    await read(controller, reader, loadedBytes, totalBytes, onProgress, onDone, onError);\n  } catch (error) {\n    controller.error(error);\n    onError(error);\n  }\n}\n","import type {FileSystem} from './filesystem';\n\ntype BrowserFileSystemOptions = {\n  fetch?: typeof fetch;\n};\n\n/**\n * FileSystem adapter for a browser FileList.\n * Holds a list of browser 'File' objects.\n */\nexport default class BrowserFileSystem implements FileSystem {\n  private _fetch: typeof fetch;\n  private files: {[filename: string]: File} = {};\n  private lowerCaseFiles: {[filename: string]: File} = {};\n  private usedFiles: {[filename: string]: boolean} = {};\n\n  /**\n   * A FileSystem API wrapper around a list of browser 'File' objects\n   * @param files\n   * @param options\n   */\n  constructor(files: FileList | File[], options?: BrowserFileSystemOptions) {\n    this._fetch = options?.fetch || fetch;\n\n    for (let i = 0; i < files.length; ++i) {\n      const file = files[i];\n      this.files[file.name] = file;\n      this.lowerCaseFiles[file.name.toLowerCase()] = file;\n      this.usedFiles[file.name] = false;\n    }\n\n    this.fetch = this.fetch.bind(this);\n  }\n\n  // implements IFileSystem\n\n  /**\n   * Implementation of fetch against this file system\n   * Delegates to global fetch for http{s}:// or data://\n   */\n  async fetch(path: string, options?: RequestInit): Promise<Response> {\n    // Fallback to handle https:/http:/data: etc fetches\n    if (path.includes('://')) {\n      return this._fetch(path, options);\n    }\n\n    // Local fetches are served from the list of files\n    const file = this.files[path];\n    if (!file) {\n      return new Response(path, {status: 400, statusText: 'NOT FOUND'});\n    }\n\n    const headers = new Headers(options?.headers);\n    const range = headers.get('Range');\n    const bytes = range && /bytes=($1)-($2)/.exec(range);\n\n    if (bytes) {\n      const start = parseInt(bytes[1]);\n      const end = parseInt(bytes[2]);\n      // The trick when reading File objects is to read successive \"slices\" of the File\n      // Per spec https://w3c.github.io/FileAPI/, slicing a File should only update the start and end fields\n      // Actually reading from file should happen in `readAsArrayBuffer` (and as far we can tell it does)\n      const data = await file.slice(start, end).arrayBuffer();\n      const response = new Response(data);\n      Object.defineProperty(response, 'url', {value: path});\n      return response;\n    }\n\n    // return makeResponse()\n    const response = new Response(file);\n    Object.defineProperty(response, 'url', {value: path});\n    return response;\n  }\n\n  /**\n   * List filenames in this filesystem\n   * @param dirname\n   * @returns\n   */\n  async readdir(dirname?: string): Promise<string[]> {\n    const files: string[] = [];\n    for (const path in this.files) {\n      files.push(path);\n    }\n    // TODO filter by dirname\n    return files;\n  }\n\n  /**\n   * Return information (size) about files in this file system\n   */\n  async stat(path: string, options?: object): Promise<{size: number}> {\n    const file = this.files[path];\n    if (!file) {\n      throw new Error(path);\n    }\n    return {size: file.size};\n  }\n\n  /**\n   * Just removes the file from the list\n   */\n  async unlink(path: string): Promise<void> {\n    delete this.files[path];\n    delete this.lowerCaseFiles[path];\n    this.usedFiles[path] = true;\n  }\n\n  // implements IRandomAccessFileSystem\n\n  // RANDOM ACCESS\n  async open(pathname: string, flags, mode?): Promise<any> {\n    return this.files[pathname];\n  }\n\n  /**\n   * Read a range into a buffer\n   * @todo - handle position memory\n   * @param buffer is the buffer that the data (read from the fd) will be written to.\n   * @param offset is the offset in the buffer to start writing at.\n   * @param length is an integer specifying the number of bytes to read.\n   * @param position is an argument specifying where to begin reading from in the file. If position is null, data will be read from the current file position, and the file position will be updated. If position is an integer, the file position will remain unchanged.\n   */\n  async read(\n    fd: any,\n    buffer: ArrayBuffer,\n    offset: number = 0,\n    length: number = buffer.byteLength,\n    position: number | null = null\n  ): Promise<{bytesRead: number; buffer: ArrayBuffer}> {\n    const file = fd as File;\n    const startPosition = 0; // position\n    const arrayBuffer = await file.slice(startPosition, startPosition + length).arrayBuffer();\n    // copy into target buffer\n    return {bytesRead: length, buffer: arrayBuffer};\n  }\n\n  async close(fd: number): Promise<void> {\n    // NO OP\n  }\n\n  // fstat(fd: number): Promise<object>; // Stat\n\n  // PRIVATE\n\n  // Supports case independent paths, and file usage tracking\n  _getFile(path, used) {\n    // Prefer case match, but fall back to case indepent.\n    const file = this.files[path] || this.lowerCaseFiles[path];\n    if (file && used) {\n      this.usedFiles[path] = true;\n    }\n    return file;\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - Dynamic screen space error provides an optimization when looking at\n// tilesets from above\n\n/* eslint-disable */\n// @ts-nocheck\nimport {Matrix4, Vector3, clamp} from '@math.gl/core';\n\nconst scratchPositionNormal = new Vector3();\nconst scratchCartographic = new Vector3();\nconst scratchMatrix = new Matrix4();\nconst scratchCenter = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchDirection = new Vector3();\n\n// eslint-disable-next-line max-statements, complexity\nexport function calculateDynamicScreenSpaceError(root, {camera, mapProjection}, options = {}) {\n  const {dynamicScreenSpaceErrorHeightFalloff = 0.25, dynamicScreenSpaceErrorDensity = 0.00278} =\n    options;\n\n  let up;\n  let direction;\n  let height;\n  let minimumHeight;\n  let maximumHeight;\n\n  const tileBoundingVolume = root.contentBoundingVolume;\n\n  if (tileBoundingVolume instanceof TileBoundingRegion) {\n    up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n    direction = camera.directionWC;\n    height = camera.positionCartographic.height;\n    minimumHeight = tileBoundingVolume.minimumHeight;\n    maximumHeight = tileBoundingVolume.maximumHeight;\n  } else {\n    // Transform camera position and direction into the local coordinate system of the tileset\n    const transformLocal = Matrix4.inverseTransformation(root.computedTransform, scratchMatrix);\n    const ellipsoid = mapProjection.ellipsoid;\n    const boundingVolume = tileBoundingVolume.boundingVolume;\n    const centerLocal = Matrix4.multiplyByPoint(\n      transformLocal,\n      boundingVolume.center,\n      scratchCenter\n    );\n    if (Cartesian3.magnitude(centerLocal) > ellipsoid.minimumRadius) {\n      // The tileset is defined in WGS84. Approximate the minimum and maximum height.\n      const centerCartographic = Cartographic.fromCartesian(\n        centerLocal,\n        ellipsoid,\n        scratchCartographic\n      );\n      up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n      direction = camera.directionWC;\n      height = camera.positionCartographic.height;\n      minimumHeight = 0.0;\n      maximumHeight = centerCartographic.height * 2.0;\n    } else {\n      // The tileset is defined in local coordinates (z-up)\n      const positionLocal = Matrix4.multiplyByPoint(\n        transformLocal,\n        camera.positionWC,\n        scratchPosition\n      );\n      up = Cartesian3.UNIT_Z;\n      direction = Matrix4.multiplyByPointAsVector(\n        transformLocal,\n        camera.directionWC,\n        scratchDirection\n      );\n      direction = Cartesian3.normalize(direction, direction);\n      height = positionLocal.z;\n      if (tileBoundingVolume instanceof TileOrientedBoundingBox) {\n        // Assuming z-up, the last component stores the half-height of the box\n        const boxHeight = root._header.boundingVolume.box[11];\n        minimumHeight = centerLocal.z - boxHeight;\n        maximumHeight = centerLocal.z + boxHeight;\n      } else if (tileBoundingVolume instanceof TileBoundingSphere) {\n        const radius = boundingVolume.radius;\n        minimumHeight = centerLocal.z - radius;\n        maximumHeight = centerLocal.z + radius;\n      }\n    }\n  }\n\n  // The range where the density starts to lessen. Start at the quarter height of the tileset.\n  const heightFalloff = dynamicScreenSpaceErrorHeightFalloff;\n  const heightClose = minimumHeight + (maximumHeight - minimumHeight) * heightFalloff;\n  const heightFar = maximumHeight;\n\n  const t = clamp((height - heightClose) / (heightFar - heightClose), 0.0, 1.0);\n\n  // Increase density as the camera tilts towards the horizon\n  const dot = Math.abs(Cartesian3.dot(direction, up));\n\n  let horizonFactor = 1.0 - dot;\n\n  // Weaken the horizon factor as the camera height increases, implying the camera is further away from the tileset.\n  // The goal is to increase density for the \"street view\", not when viewing the tileset from a distance.\n  horizonFactor = horizonFactor * (1.0 - t);\n\n  return dynamicScreenSpaceErrorDensity * horizonFactor;\n}\n\nexport function fog(distanceToCamera, density) {\n  const scalar = distanceToCamera * density;\n  return 1.0 - Math.exp(-(scalar * scalar));\n}\n\nexport function getDynamicScreenSpaceError(tileset, distanceToCamera) {\n  if (tileset.dynamicScreenSpaceError && tileset.dynamicScreenSpaceErrorComputedDensity) {\n    const density = tileset.dynamicScreenSpaceErrorComputedDensity;\n    const factor = tileset.dynamicScreenSpaceErrorFactor;\n    // TODO: Refined screen space error that minimizes tiles in non-first-person\n    const dynamicError = fog(distanceToCamera, density) * factor;\n    return dynamicError;\n  }\n\n  return 0;\n}\n\nexport function getTiles3DScreenSpaceError(tile, frameState, useParentLodMetric) {\n  const tileset = tile.tileset;\n  const parentLodMetricValue = (tile.parent && tile.parent.lodMetricValue) || tile.lodMetricValue;\n  const lodMetricValue = useParentLodMetric ? parentLodMetricValue : tile.lodMetricValue;\n\n  // Leaf tiles do not have any error so save the computation\n  if (lodMetricValue === 0.0) {\n    return 0.0;\n  }\n\n  // TODO: Orthographic Frustum needs special treatment?\n  // this._getOrthograhicScreenSpaceError();\n\n  // Avoid divide by zero when viewer is inside the tile\n  const distance = Math.max(tile._distanceToCamera, 1e-7);\n  const {height, sseDenominator} = frameState;\n  const {viewDistanceScale} = tileset.options;\n  let error = (lodMetricValue * height * (viewDistanceScale || 1.0)) / (distance * sseDenominator);\n\n  error -= getDynamicScreenSpaceError(tileset, distance);\n\n  return error;\n}\n","export function get3dTilesOptions(tileset) {\n  return {\n    assetGltfUpAxis: (tileset.asset && tileset.asset.gltfUpAxis) || 'Y'\n  };\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport default class ManagedArray {\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._map = new Map();\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT} from '../../constants';\nimport TilesetTraverser from './tileset-traverser';\n\nexport default class Tileset3DTraverser extends TilesetTraverser {\n  compareDistanceToCamera(a, b) {\n    // Sort by farthest child first since this is going on a stack\n    return b._distanceToCamera === 0 && a._distanceToCamera === 0\n      ? b._centerZDepth - a._centerZDepth\n      : b._distanceToCamera - a._distanceToCamera;\n  }\n\n  updateTileVisibility(tile, frameState) {\n    super.updateTileVisibility(tile, frameState);\n\n    //  Optimization - if none of the tile's children are visible then this tile isn't visible\n    if (!tile.isVisibleAndInRequestVolume) {\n      return;\n    }\n\n    const hasChildren = tile.children.length > 0;\n    if (tile.hasTilesetContent && hasChildren) {\n      // Use the root tile's visibility instead of this tile's visibility.\n      // The root tile may be culled by the children bounds optimization in which\n      // case this tile should also be culled.\n      const firstChild = tile.children[0];\n      this.updateTileVisibility(firstChild, frameState);\n      tile._visible = firstChild._visible;\n      return;\n    }\n\n    if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n      tile._visible = false;\n      return;\n    }\n\n    const replace = tile.refine === TILE_REFINEMENT.REPLACE;\n    const useOptimization =\n      tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n    if (replace && useOptimization && hasChildren) {\n      if (!this.anyChildrenVisible(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n    }\n  }\n\n  meetsScreenSpaceErrorEarly(tile, frameState) {\n    const {parent} = tile;\n    if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n      return false;\n    }\n\n    // Use parent's geometric error with child's box to see if the tile already meet the SSE\n    return !this.shouldRefine(tile, frameState, true);\n  }\n}\n","import {load} from '@loaders.gl/core';\nimport TilesetTraverser from './tileset-traverser';\n\nimport {lodJudge} from '../helpers/i3s-lod';\nimport TileHeader from '../tile-3d';\nimport I3STileManager from './i3s-tile-manager';\n\nexport default class I3STilesetTraverser extends TilesetTraverser {\n  private _tileManager: I3STileManager;\n\n  constructor(options) {\n    super(options);\n    this._tileManager = new I3STileManager();\n  }\n\n  shouldRefine(tile, frameState) {\n    // TODO refactor loaJudge\n    tile._lodJudge = lodJudge(tile, frameState);\n    return tile._lodJudge === 'DIG';\n  }\n\n  updateChildTiles(tile, frameState): boolean {\n    const children = tile.header.children || [];\n    // children which are already fetched and constructed as Tile3D instances\n    const childTiles = tile.children;\n    const tileset = tile.tileset;\n\n    for (const child of children) {\n      const extendedId = `${child.id}-${frameState.viewport.id}`;\n      // if child tile is not fetched\n      const childTile = childTiles && childTiles.find((t) => t.id === extendedId);\n      if (!childTile) {\n        let request = () => this._loadTile(child.id, tileset);\n        const cachedRequest = this._tileManager.find(extendedId);\n        if (!cachedRequest) {\n          // eslint-disable-next-line max-depth\n          if (tileset.tileset.nodePages) {\n            request = () => tileset.tileset.nodePagesTile.formTileFromNodePages(child.id);\n          }\n          this._tileManager.add(\n            request,\n            extendedId,\n            (header) => this._onTileLoad(header, tile, extendedId),\n            frameState\n          );\n        } else {\n          // update frameNumber since it is still needed in current frame\n          this._tileManager.update(extendedId, frameState);\n        }\n      } else if (childTile) {\n        // if child tile is fetched and available\n        this.updateTile(childTile, frameState);\n      }\n    }\n    return false;\n  }\n\n  async _loadTile(nodeId, tileset) {\n    const {loader} = tileset;\n    const nodeUrl = tileset.getTileUrl(`${tileset.url}/nodes/${nodeId}`);\n    // load metadata\n    const options = {\n      ...tileset.loadOptions,\n      i3s: {\n        ...tileset.loadOptions.i3s,\n        isTileHeader: true,\n        loadContent: false\n      }\n    };\n\n    return await load(nodeUrl, loader, options);\n  }\n\n  /**\n   * The callback to init TileHeader instance after loading the tile JSON\n   * @param {Object} header - the tile JSON from a dataset\n   * @param {TileHeader} tile - the parent TileHeader instance\n   * @param {string} extendedId - optional ID to separate copies of a tile for different viewports.\n   *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   * @return {void}\n   */\n  _onTileLoad(header, tile, extendedId) {\n    // after child tile is fetched\n    const childTile = new TileHeader(tile.tileset, header, tile, extendedId);\n    tile.children.push(childTile);\n    const frameState = this._tileManager.find(childTile.id).frameState;\n    this.updateTile(childTile, frameState);\n\n    // after tile fetched, resume traversal if still in current update/traversal frame\n    if (this._frameNumber === frameState.frameNumber) {\n      this.executeTraversal(childTile, frameState);\n    }\n  }\n}\n","const STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport default class I3STileManager {\n  private _statusMap: object;\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          callback(error);\n        });\n    }\n  }\n\n  update(key, frameState) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  tile.byteOffset = byteOffset;\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {DracoLoader} from '@loaders.gl/draco';\nimport {GL} from '@loaders.gl/math';\nimport {Vector3} from '@math.gl/core';\n\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\nimport Tile3DBatchTable from '../classes/tile-3d-batch-table';\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {normalize3DTileColorAttribute} from './helpers/normalize-3d-tile-colors';\nimport {normalize3DTileNormalAttribute} from './helpers/normalize-3d-tile-normals';\nimport {normalize3DTilePositionAttribute} from './helpers/normalize-3d-tile-positions';\n\nexport async function parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n  initializeTile(tile);\n\n  const {featureTable, batchTable} = parsePointCloudTables(tile);\n\n  await parseDraco(tile, featureTable, batchTable, options, context);\n\n  parsePositions(tile, featureTable, options);\n  parseColors(tile, featureTable, batchTable);\n  parseNormals(tile, featureTable);\n\n  return byteOffset;\n}\n\nfunction initializeTile(tile) {\n  // Initialize point cloud tile defaults\n  tile.attributes = {\n    positions: null,\n    colors: null,\n    normals: null,\n    batchIds: null\n  };\n  tile.isQuantized = false;\n  tile.isTranslucent = false;\n  tile.isRGB565 = false;\n  tile.isOctEncoded16P = false;\n}\n\nfunction parsePointCloudTables(tile) {\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n\n  const pointsLength = featureTable.getGlobalProperty('POINTS_LENGTH');\n  if (!Number.isFinite(pointsLength)) {\n    throw new Error('POINTS_LENGTH must be defined');\n  }\n  featureTable.featuresLength = pointsLength;\n\n  tile.featuresLength = pointsLength;\n  tile.pointsLength = pointsLength;\n  tile.pointCount = pointsLength;\n\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  const batchTable = parseBatchIds(tile, featureTable);\n\n  return {featureTable, batchTable};\n}\n\nfunction parsePositions(tile, featureTable, options) {\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      const positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n\n      tile.isQuantized = true;\n      tile.quantizedRange = (1 << 16) - 1;\n\n      tile.quantizedVolumeScale = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_SCALE',\n        GL.FLOAT,\n        3\n      );\n      if (!tile.quantizedVolumeScale) {\n        throw new Error('QUANTIZED_VOLUME_SCALE must be defined for quantized positions.');\n      }\n\n      tile.quantizedVolumeOffset = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_OFFSET',\n        GL.FLOAT,\n        3\n      );\n      if (!tile.quantizedVolumeOffset) {\n        throw new Error('QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.');\n      }\n\n      tile.attributes.positions = normalize3DTilePositionAttribute(tile, positions, options);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n\nfunction parseColors(tile, featureTable, batchTable) {\n  if (!tile.attributes.colors) {\n    let colors = null;\n    if (featureTable.hasProperty('RGBA')) {\n      colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasProperty('RGB565')) {\n      colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n\n    tile.attributes.colors = normalize3DTileColorAttribute(tile, colors, batchTable);\n  }\n\n  if (featureTable.hasProperty('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n  }\n}\n\nfunction parseNormals(tile, featureTable) {\n  if (!tile.attributes.normals) {\n    let normals = null;\n    if (featureTable.hasProperty('NORMAL')) {\n      normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('NORMAL_OCT16P')) {\n      normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n\n    tile.attributes.normals = normalize3DTileNormalAttribute(tile, normals);\n  }\n}\n\nfunction parseBatchIds(tile, featureTable) {\n  let batchTable = null;\n  if (!tile.batchIds && featureTable.hasProperty('BATCH_ID')) {\n    tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n\n    if (tile.batchIds) {\n      const batchFeatureLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n      if (!batchFeatureLength) {\n        throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n      }\n      const {batchTableJson, batchTableBinary} = tile;\n      batchTable = new Tile3DBatchTable(batchTableJson, batchTableBinary, batchFeatureLength);\n    }\n  }\n  return batchTable;\n}\n\n// eslint-disable-next-line complexity\nasync function parseDraco(tile, featureTable, batchTable, options, context) {\n  let dracoBuffer;\n  let dracoFeatureTableProperties;\n  let dracoBatchTableProperties;\n  const batchTableDraco =\n    tile.batchTableJson &&\n    tile.batchTableJson.extensions &&\n    tile.batchTableJson.extensions['3DTILES_draco_point_compression'];\n  if (batchTableDraco) {\n    dracoBatchTableProperties = batchTableDraco.properties;\n  }\n\n  const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n  if (featureTableDraco) {\n    dracoFeatureTableProperties = featureTableDraco.properties;\n    const dracoByteOffset = featureTableDraco.byteOffset;\n    const dracoByteLength = featureTableDraco.byteLength;\n    if (!dracoFeatureTableProperties || !Number.isFinite(dracoByteOffset) || !dracoByteLength) {\n      throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n    }\n\n    dracoBuffer = tile.featureTableBinary.slice(dracoByteOffset, dracoByteOffset + dracoByteLength);\n\n    tile.hasPositions = Number.isFinite(dracoFeatureTableProperties.POSITION);\n    tile.hasColors =\n      Number.isFinite(dracoFeatureTableProperties.RGB) ||\n      Number.isFinite(dracoFeatureTableProperties.RGBA);\n    tile.hasNormals = Number.isFinite(dracoFeatureTableProperties.NORMAL);\n    tile.hasBatchIds = Number.isFinite(dracoFeatureTableProperties.BATCH_ID);\n    tile.isTranslucent = Number.isFinite(dracoFeatureTableProperties.RGBA);\n  }\n\n  if (!dracoBuffer) {\n    return true;\n  }\n\n  const dracoData = {\n    buffer: dracoBuffer,\n    properties: {...dracoFeatureTableProperties, ...dracoBatchTableProperties},\n    featureTableProperties: dracoFeatureTableProperties,\n    batchTableProperties: dracoBatchTableProperties,\n    dequantizeInShader: false\n  };\n\n  return await loadDraco(tile, dracoData, options, context);\n}\n\n// eslint-disable-next-line complexity, max-statements\nexport async function loadDraco(tile, dracoData, options, context) {\n  const {parse} = context;\n  const dracoOptions = {\n    ...options,\n    draco: {\n      ...options.draco,\n      extraAttributes: dracoData.batchTableProperties || {}\n    }\n  };\n\n  // The entire tileset might be included, too expensive to serialize\n  delete dracoOptions['3d-tiles'];\n\n  const data = await parse(dracoData.buffer, DracoLoader, dracoOptions);\n\n  const decodedPositions = data.attributes.POSITION && data.attributes.POSITION.value;\n  const decodedColors = data.attributes.COLOR_0 && data.attributes.COLOR_0.value;\n  const decodedNormals = data.attributes.NORMAL && data.attributes.NORMAL.value;\n  const decodedBatchIds = data.attributes.BATCH_ID && data.attributes.BATCH_ID.value;\n  const isQuantizedDraco = decodedPositions && data.attributes.POSITION.value.quantization;\n  const isOctEncodedDraco = decodedNormals && data.attributes.NORMAL.value.quantization;\n  if (isQuantizedDraco) {\n    // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n    // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n    const quantization = data.POSITION.data.quantization;\n    const range = quantization.range;\n    tile.quantizedVolumeScale = new Vector3(range, range, range);\n    tile.quantizedVolumeOffset = new Vector3(quantization.minValues);\n    tile.quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n    tile.isQuantizedDraco = true;\n  }\n  if (isOctEncodedDraco) {\n    tile.octEncodedRange = (1 << data.NORMAL.data.quantization.quantizationBits) - 1.0;\n    tile.isOctEncodedDraco = true;\n  }\n\n  // Extra batch table attributes\n  const batchTableAttributes = {};\n  if (dracoData.batchTableProperties) {\n    for (const attributeName of Object.keys(dracoData.batchTableProperties)) {\n      if (data.attributes[attributeName] && data.attributes[attributeName].value) {\n        batchTableAttributes[attributeName.toLowerCase()] = data.attributes[attributeName].value;\n      }\n    }\n  }\n\n  tile.attributes = {\n    positions: decodedPositions,\n    colors: normalize3DTileColorAttribute(tile, decodedColors),\n    normals: decodedNormals,\n    batchIds: decodedBatchIds,\n    ...batchTableAttributes\n  };\n}\n\n// TODO - this is the remaining code from Cesium's parser\n/*\n  const batchTable = new Tile3DBatchTable(tile);\n\n  // parseDracoBuffer(tile, featureTable, batchTable);\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n}\n/*\n\n  if (!tile.attributes.positions) {\n    if (featureTable.hasProperty('POSITION')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION', GL.FLOAT, 3);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      tile.attributes.positions = featureTable.getPropertyArray('POSITION_QUANTIZED', GL.UNSIGNED_SHORT, 3);\n\n\n  if (!tile.colors) {\n    if (featureTable.hasProperty('RGBA')) {\n      tile.colors = featureTable.getPropertyArray('RGBA', GL.UNSIGNED_BYTE, 4);\n      tile.isTranslucent = true;\n    } else if (featureTable.hasProperty('RGB')) {\n      tile.colors = featureTable.getPropertyArray('RGB', GL.UNSIGNED_BYTE, 3);\n    } else if (featureTable.hasPropertry('RGB565')) {\n      tile.colors = featureTable.getPropertyArray('RGB565', GL.UNSIGNED_SHORT, 1);\n      tile.isRGB565 = true;\n    }\n  }\n\n  if (!tile.attributes.normals) {\n    if (featureTable.getPropertry('NORMAL')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL', GL.FLOAT, 3);\n    } else if (featureTable.getProperty('NORMAL_OCT16P')) {\n      tile.attributes.normals = featureTable.getPropertyArray('NORMAL_OCT16P', GL.UNSIGNED_BYTE, 2);\n      tile.isOctEncoded16P = true;\n    }\n  }\n\n  if (!tile.batchIds) {\n    if (featureTable.hasProperty('BATCH_ID')) {\n      tile.batchIds = featureTable.getPropertyArray('BATCH_ID', GL.UNSIGNED_SHORT, 1);\n    }\n  }\n\n  if (!tile.attributes.positions) {\n    throw new Error('Either POSITION or POSITION_QUANTIZED must be defined.');\n  }\n\n  if (featureTable.getPropertry('CONSTANT_RGBA')) {\n    tile.constantRGBA = featureTable.getGlobalProperty('CONSTANT_RGBA', GL.UNSIGNED_BYTE, 4);\n  }\n\n  if (tile.batchIds) {\n    const batchLength = featureTable.getGlobalProperty('BATCH_LENGTH');\n    if (!defined(batchLength)) {\n      throw new Error('Global property: BATCH_LENGTH must be defined when BATCH_ID is defined.');\n    }\n\n    if (defined(batchTableBinary)) {\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n    }\n\n    if (defined(pointCloud._batchTableLoaded)) {\n      pointCloud._batchTableLoaded(batchLength, batchTableJson, batchTableBinary);\n    }\n  }\n\n  // If points are not batched and there are per-point properties, use these properties for styling purposes\n  var styleableProperties;\n  if (!hasBatchIds && defined(batchTableBinary)) {\n    tile.styleableProperties = Cesium3DTileBatchTable.getBinaryProperties(\n      pointsLength,\n      batchTableJson,\n      batchTableBinary\n    );\n  }\n\n  tile.draco = draco;\n}\n\n// Separate parsing and decoding of Draco\nexport function parseDracoBuffer(tile, featureTable, batchTable) {\n  let dracoBuffer;\n  let dracoFeatureTableProperties;\n  let dracoBatchTableProperties;\n\n  const batchTableDraco = batchTable.getExtension('3DTILES_draco_point_compression');\n  if (batchTableDraco) {\n    dracoBatchTableProperties = batchTableDraco.properties;\n  }\n\n  const featureTableDraco = featureTable.getExtension('3DTILES_draco_point_compression');\n  if (featureTableDraco) {\n    dracoFeatureTableProperties = featureTableDraco.properties;\n    const dracoByteOffset = featureTableDraco.byteOffset;\n    const dracoByteLength = featureTableDraco.byteLength;\n    if (!dracoFeatureTableProperties || !dracoByteOffset || !dracoByteLength) {\n      throw new Error('Draco properties, byteOffset, and byteLength must be defined');\n    }\n\n    dracoBuffer = arraySlice(\n      featureTableBinary,\n      dracoByteOffset,\n      dracoByteOffset + dracoByteLength\n    );\n    tile.hasPositions = dracoFeatureTableProperties.POSITION;\n    tile.hasColors = dracoFeatureTableProperties.RGB || dracoFeatureTableProperties.RGBA;\n    tile.hasNormals = dracoFeatureTableProperties.NORMAL;\n    tile.hasBatchIds = dracoFeatureTableProperties.BATCH_ID;\n    tile.isTranslucent = dracoFeatureTableProperties.RGBA;\n  }\n\n  if (dracoBuffer) {\n    tile.draco = {\n      buffer: dracoBuffer,\n      properties: {...dracoFeatureTableProperties, ...dracoBatchTableProperties},\n      featureTableProperties: dracoFeatureTableProperties,\n      batchTableProperties: dracoBatchTableProperties,\n      dequantizeInShader: false\n    };\n\n    tile.decodingState = DECODING_STATE.NEEDS_DECODE;\n  }\n}\n\n/*\nfunction decodeDraco(tile, context) {\n  if (tile.decodingState === DECODING_STATE.READY) {\n    return false;\n  }\n  if (tile.decodingState === DECODING_STATE.NEEDS_DECODE) {\n    var parsedContent = tile._parsedContent;\n    var draco = parsedContent.draco;\n    var decodePromise = DracoLoader.decodePointCloud(draco, context);\n    if (defined(decodePromise)) {\n      tile.decodingState = DECODING_STATE.DECODING;\n      decodePromise.then(function(result) {\n        tile.decodingState = DECODING_STATE.READY;\n        var decodedPositions = defined(result.POSITION) ? result.POSITION.array : undefined;\n        var decodedRgb = defined(result.RGB) ? result.RGB.array : undefined;\n        var decodedRgba = defined(result.RGBA) ? result.RGBA.array : undefined;\n        var decodedNormals = defined(result.NORMAL) ? result.NORMAL.array : undefined;\n        var decodedBatchIds = defined(result.BATCH_ID) ? result.BATCH_ID.array : undefined;\n        var isQuantizedDraco = defined(decodedPositions) && defined(result.POSITION.data.quantization);\n        var isOctEncodedDraco = defined(decodedNormals) && defined(result.NORMAL.data.quantization);\n        if (isQuantizedDraco) {\n          // Draco quantization range == quantized volume scale - size in meters of the quantized volume\n          // Internal quantized range is the range of values of the quantized data, e.g. 255 for 8-bit, 1023 for 10-bit, etc\n          var quantization = result.POSITION.data.quantization;\n          var range = quantization.range;\n          tile._quantizedVolumeScale = Cartesian3.fromElements(range, range, range);\n          tile._quantizedVolumeOffset = Cartesian3.unpack(quantization.minValues);\n          tile._quantizedRange = (1 << quantization.quantizationBits) - 1.0;\n          tile._isQuantizedDraco = true;\n        }\n        if (isOctEncodedDraco) {\n          tile._octEncodedRange = (1 << result.NORMAL.data.quantization.quantizationBits) - 1.0;\n          tile._isOctEncodedDraco = true;\n        }\n        var styleableProperties = parsedContent.styleableProperties;\n        var batchTableProperties = draco.batchTableProperties;\n        for (var name in batchTableProperties) {\n          if (batchTableProperties.hasOwnProperty(name)) {\n            var property = result[name];\n            if (!defined(styleableProperties)) {\n              styleableProperties = {};\n            }\n            styleableProperties[name] = {\n              typedArray : property.array,\n              componentCount : property.data.componentsPerAttribute\n            };\n          }\n        }\n        parsedContent.positions = defaultValue(decodedPositions, parsedContent.positions);\n        parsedContent.colors = defaultValue(defaultValue(decodedRgba, decodedRgb), parsedContent.colors);\n        parsedContent.normals = defaultValue(decodedNormals, parsedContent.normals);\n        parsedContent.batchIds = defaultValue(decodedBatchIds, parsedContent.batchIds);\n        parsedContent.styleableProperties = styleableProperties;\n      }).otherwise(function(error) {\n        tile.decodingState = DECODING_STATE.FAILED;\n        tile._readyPromise.reject(error);\n      });\n    }\n  }\n  return true;\n}\n*/\n","import type {Loader, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {DracoParseOptions} from './lib/draco-parser';\n// import type {DracoMeshData} from './types';\nimport {VERSION} from './lib/utils/version';\n\nexport type DracoLoaderOptions = LoaderOptions & {\n  draco?: DracoParseOptions & {\n    decoderType?: 'wasm' | 'js';\n    libraryPath?: string;\n    extraAttributes?;\n    attributeNameEntry?: string;\n  };\n};\n\nconst DEFAULT_DRACO_OPTIONS: DracoLoaderOptions = {\n  draco: {\n    decoderType: typeof WebAssembly === 'object' ? 'wasm' : 'js', // 'js' for IE11\n    libraryPath: 'libs/',\n    extraAttributes: {},\n    attributeNameEntry: undefined\n  }\n};\n\n/**\n * Worker loader for Draco3D compressed geometries\n */\nexport const DracoLoader = {\n  name: 'Draco',\n  id: 'draco',\n  module: 'draco',\n  version: VERSION,\n  worker: true,\n  extensions: ['drc'],\n  mimeTypes: ['application/octet-stream'],\n  binary: true,\n  tests: ['DRACO'],\n  options: DEFAULT_DRACO_OPTIONS\n};\n\nexport const _TypecheckDracoLoader: Loader = DracoLoader;\n","/* eslint-disable camelcase */\n\n// Draco types (input)\nimport type {\n  Draco3D,\n  Decoder,\n  Mesh,\n  PointCloud,\n  PointAttribute,\n  Metadata,\n  MetadataQuerier,\n  DracoInt32Array,\n  draco_DataType\n} from '../draco3d/draco3d-types';\n\n// Parsed data types (output)\nimport type {\n  TypedArray,\n  // standard mesh output data\n  MeshData,\n  MeshAttribute,\n  // standard mesh with draco metadata\n  DracoMeshData,\n  DracoLoaderData,\n  DracoAttribute,\n  DracoMetadataEntry,\n  DracoQuantizationTransform,\n  DracoOctahedronTransform\n} from './draco-types';\n\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\nimport {makeSchemaFromAttributes} from './utils/schema-attribute-utils';\n\n/**\n * @param topology - How triangle indices should be generated (mesh only)\n * @param attributeNameEntry\n * @param extraAttributes\n * @param quantizedAttributes\n * @param octahedronAttributes\n */\nexport type DracoParseOptions = {\n  topology?: 'triangle-list' | 'triangle-strip';\n  attributeNameEntry?: string;\n  extraAttributes?: {[uniqueId: string]: number};\n  quantizedAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n  octahedronAttributes?: ('POSITION' | 'NORMAL' | 'COLOR' | 'TEX_COORD' | 'GENERIC')[];\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst GEOMETRY_TYPE = {\n  TRIANGULAR_MESH: 0,\n  POINT_CLOUD: 1\n};\n\n// Native Draco attribute names to GLTF attribute names.\nconst DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP = {\n  POSITION: 'POSITION',\n  NORMAL: 'NORMAL',\n  COLOR: 'COLOR_0',\n  TEX_COORD: 'TEXCOORD_0'\n};\n\nconst DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP = {\n  1: Int8Array,\n  2: Uint8Array,\n  3: Int16Array,\n  4: Uint16Array,\n  5: Int32Array,\n  6: Uint32Array,\n  9: Float32Array\n};\n\nconst INDEX_ITEM_SIZE = 4;\n\nexport default class DracoParser {\n  draco: Draco3D;\n  decoder: Decoder;\n  metadataQuerier: MetadataQuerier;\n\n  // draco - the draco decoder, either import `draco3d` or load dynamically\n  constructor(draco: Draco3D) {\n    this.draco = draco;\n    this.decoder = new this.draco.Decoder();\n    this.metadataQuerier = new this.draco.MetadataQuerier();\n  }\n\n  /**\n   * Destroy draco resources\n   */\n  destroy(): void {\n    this.draco.destroy(this.decoder);\n    this.draco.destroy(this.metadataQuerier);\n  }\n\n  /**\n   * NOTE: caller must call `destroyGeometry` on the return value after using it\n   * @param arrayBuffer\n   * @param options\n   */\n  parseSync(arrayBuffer: ArrayBuffer, options: DracoParseOptions = {}): DracoMeshData {\n    const buffer = new this.draco.DecoderBuffer();\n    buffer.Init(new Int8Array(arrayBuffer), arrayBuffer.byteLength);\n\n    this._disableAttributeTransforms(options);\n\n    const geometry_type = this.decoder.GetEncodedGeometryType(buffer);\n    const dracoGeometry =\n      geometry_type === this.draco.TRIANGULAR_MESH\n        ? new this.draco.Mesh()\n        : new this.draco.PointCloud();\n\n    try {\n      let dracoStatus;\n      switch (geometry_type) {\n        case this.draco.TRIANGULAR_MESH:\n          dracoStatus = this.decoder.DecodeBufferToMesh(buffer, dracoGeometry as Mesh);\n          break;\n\n        case this.draco.POINT_CLOUD:\n          dracoStatus = this.decoder.DecodeBufferToPointCloud(buffer, dracoGeometry);\n          break;\n\n        default:\n          throw new Error('DRACO: Unknown geometry type.');\n      }\n\n      if (!dracoStatus.ok() || !dracoGeometry.ptr) {\n        const message = `DRACO decompression failed: ${dracoStatus.error_msg()}`;\n        // console.error(message);\n        throw new Error(message);\n      }\n\n      const loaderData = this._getDracoLoaderData(dracoGeometry, geometry_type, options);\n\n      const geometry = this._getMeshData(dracoGeometry, loaderData, options);\n\n      const boundingBox = getMeshBoundingBox(geometry.attributes);\n\n      const schema = makeSchemaFromAttributes(geometry.attributes, loaderData, geometry.indices);\n\n      const data: DracoMeshData = {\n        loader: 'draco',\n        loaderData,\n        header: {\n          vertexCount: dracoGeometry.num_points(),\n          boundingBox\n        },\n        ...geometry,\n        schema\n      };\n      return data;\n    } finally {\n      this.draco.destroy(buffer);\n      if (dracoGeometry) {\n        this.draco.destroy(dracoGeometry);\n      }\n    }\n  }\n\n  // Draco specific \"loader data\"\n\n  /**\n   * Extract\n   * @param dracoGeometry\n   * @param geometry_type\n   * @param options\n   * @returns\n   */\n  _getDracoLoaderData(\n    dracoGeometry: Mesh | PointCloud,\n    geometry_type,\n    options: DracoParseOptions\n  ): DracoLoaderData {\n    const metadata = this._getTopLevelMetadata(dracoGeometry);\n    const attributes = this._getDracoAttributes(dracoGeometry, options);\n\n    return {\n      geometry_type,\n      num_attributes: dracoGeometry.num_attributes(),\n      num_points: dracoGeometry.num_points(),\n      num_faces: dracoGeometry instanceof this.draco.Mesh ? dracoGeometry.num_faces() : 0,\n      metadata,\n      attributes\n    };\n  }\n\n  /**\n   * Extract all draco provided information and metadata for each attribute\n   * @param dracoGeometry\n   * @param options\n   * @returns\n   */\n  _getDracoAttributes(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: DracoAttribute} {\n    const dracoAttributes: {[unique_id: number]: DracoAttribute} = {};\n\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      // Note: Draco docs do not seem clear on `GetAttribute` ids just being a zero-based index,\n      // but it does seems to work this way\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n\n      const metadata = this._getAttributeMetadata(dracoGeometry, attributeId);\n\n      dracoAttributes[dracoAttribute.unique_id()] = {\n        unique_id: dracoAttribute.unique_id(),\n        attribute_type: dracoAttribute.attribute_type(),\n        data_type: dracoAttribute.data_type(),\n        num_components: dracoAttribute.num_components(),\n\n        byte_offset: dracoAttribute.byte_offset(),\n        byte_stride: dracoAttribute.byte_stride(),\n        normalized: dracoAttribute.normalized(),\n        attribute_index: attributeId,\n\n        metadata\n      };\n\n      // Add transformation parameters for any attributes app wants untransformed\n      const quantization = this._getQuantizationTransform(dracoAttribute, options);\n      if (quantization) {\n        dracoAttributes[dracoAttribute.unique_id()].quantization_transform = quantization;\n      }\n\n      const octahedron = this._getOctahedronTransform(dracoAttribute, options);\n      if (octahedron) {\n        dracoAttributes[dracoAttribute.unique_id()].octahedron_transform = octahedron;\n      }\n    }\n\n    return dracoAttributes;\n  }\n\n  /**\n   * Get standard loaders.gl mesh category data\n   * Extracts the geometry from draco\n   * @param dracoGeometry\n   * @param options\n   */\n  _getMeshData(\n    dracoGeometry: Mesh | PointCloud,\n    loaderData: DracoLoaderData,\n    options: DracoParseOptions\n  ): MeshData {\n    const attributes = this._getMeshAttributes(loaderData, dracoGeometry, options);\n\n    const positionAttribute = attributes.POSITION;\n    if (!positionAttribute) {\n      throw new Error('DRACO: No position attribute found.');\n    }\n\n    // For meshes, we need indices to define the faces.\n    if (dracoGeometry instanceof this.draco.Mesh) {\n      switch (options.topology) {\n        case 'triangle-strip':\n          return {\n            topology: 'triangle-strip',\n            mode: 4, // GL.TRIANGLES\n            attributes,\n            indices: {\n              value: this._getTriangleStripIndices(dracoGeometry),\n              size: 1\n            }\n          };\n        case 'triangle-list':\n        default:\n          return {\n            topology: 'triangle-list',\n            mode: 5, // GL.TRIANGLE_STRIP\n            attributes,\n            indices: {\n              value: this._getTriangleListIndices(dracoGeometry),\n              size: 1\n            }\n          };\n      }\n    }\n\n    // PointCloud - must come last as Mesh inherits from PointCloud\n    return {\n      topology: 'point-list',\n      mode: 0, // GL.POINTS\n      attributes\n    };\n  }\n\n  _getMeshAttributes(\n    loaderData: DracoLoaderData,\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[attributeName: string]: MeshAttribute} {\n    const attributes: {[key: string]: MeshAttribute} = {};\n\n    for (const loaderAttribute of Object.values(loaderData.attributes)) {\n      const attributeName = this._deduceAttributeName(loaderAttribute, options);\n      loaderAttribute.name = attributeName;\n      const {value, size} = this._getAttributeValues(dracoGeometry, loaderAttribute);\n      attributes[attributeName] = {\n        value,\n        size,\n        byteOffset: loaderAttribute.byte_offset,\n        byteStride: loaderAttribute.byte_stride,\n        normalized: loaderAttribute.normalized\n      };\n    }\n\n    return attributes;\n  }\n\n  // MESH INDICES EXTRACTION\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleListIndices(dracoGeometry: Mesh) {\n    // Example on how to retrieve mesh and attributes.\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * INDEX_ITEM_SIZE;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      this.decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n      return new Uint32Array(this.draco.HEAPF32.buffer, ptr, numIndices).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n  }\n\n  /**\n   * For meshes, we need indices to define the faces.\n   * @param dracoGeometry\n   */\n  _getTriangleStripIndices(dracoGeometry: Mesh) {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      /* const numStrips = */ this.decoder.GetTriangleStripsFromMesh(dracoGeometry, dracoArray);\n      return getUint32Array(dracoArray);\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  /**\n   *\n   * @param dracoGeometry\n   * @param dracoAttribute\n   * @param attributeName\n   */\n  _getAttributeValues(\n    dracoGeometry: Mesh | PointCloud,\n    attribute: DracoAttribute\n  ): {value: TypedArray; size: number} {\n    const TypedArrayCtor = DRACO_DATA_TYPE_TO_TYPED_ARRAY_MAP[attribute.data_type];\n    const numComponents = attribute.num_components;\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n\n    const byteLength = numValues * TypedArrayCtor.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(this.draco, TypedArrayCtor);\n\n    let value: TypedArray;\n\n    const ptr = this.draco._malloc(byteLength);\n    try {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attribute.attribute_index);\n      this.decoder.GetAttributeDataArrayForAllPoints(\n        dracoGeometry,\n        dracoAttribute,\n        dataType,\n        byteLength,\n        ptr\n      );\n      value = new TypedArrayCtor(this.draco.HEAPF32.buffer, ptr, numValues).slice();\n    } finally {\n      this.draco._free(ptr);\n    }\n\n    return {value, size: numComponents};\n  }\n\n  // Attribute names\n\n  /** \n   * DRACO does not store attribute names - We need to deduce an attribute name\n   * for each attribute\n  _getAttributeNames(\n    dracoGeometry: Mesh | PointCloud,\n    options: DracoParseOptions\n  ): {[unique_id: number]: string} {\n    const attributeNames: {[unique_id: number]: string} = {};\n    for (let attributeId = 0; attributeId < dracoGeometry.num_attributes(); attributeId++) {\n      const dracoAttribute = this.decoder.GetAttribute(dracoGeometry, attributeId);\n      const attributeName = this._deduceAttributeName(dracoAttribute, options);\n      attributeNames[attributeName] = attributeName;\n    }\n    return attributeNames;\n  }\n   */\n\n  /**\n   * Deduce an attribute name.\n   * @note DRACO does not save attribute names, just general type (POSITION, COLOR)\n   * to help optimize compression. We generate GLTF compatible names for the Draco-recognized\n   * types\n   * @param attributeData\n   */\n  _deduceAttributeName(attribute: DracoAttribute, options: DracoParseOptions): string {\n    // Deduce name based on application provided map\n    const uniqueId = attribute.unique_id;\n    for (const [attributeName, attributeUniqueId] of Object.entries(\n      options.extraAttributes || {}\n    )) {\n      if (attributeUniqueId === uniqueId) {\n        return attributeName;\n      }\n    }\n\n    // Deduce name based on attribute type\n    const thisAttributeType = attribute.attribute_type;\n    for (const dracoAttributeConstant in DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP) {\n      const attributeType = this.draco[dracoAttributeConstant];\n      if (attributeType === thisAttributeType) {\n        // TODO - Return unique names if there multiple attributes per type\n        // (e.g. multiple TEX_COORDS or COLORS)\n        return DRACO_TO_GLTF_ATTRIBUTE_NAME_MAP[dracoAttributeConstant];\n      }\n    }\n\n    // Look up in metadata\n    // TODO - shouldn't this have priority?\n    const entryName = options.attributeNameEntry || 'name';\n    if (attribute.metadata[entryName]) {\n      return attribute.metadata[entryName].string;\n    }\n\n    // Attribute of \"GENERIC\" type, we need to assign some name\n    return `CUSTOM_ATTRIBUTE_${uniqueId}`;\n  }\n\n  // METADATA EXTRACTION\n\n  /** Get top level metadata */\n  _getTopLevelMetadata(dracoGeometry: Mesh | PointCloud) {\n    const dracoMetadata = this.decoder.GetMetadata(dracoGeometry);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /** Get per attribute metadata */\n  _getAttributeMetadata(dracoGeometry: Mesh | PointCloud, attributeId: number) {\n    const dracoMetadata = this.decoder.GetAttributeMetadata(dracoGeometry, attributeId);\n    return this._getDracoMetadata(dracoMetadata);\n  }\n\n  /**\n   * Extract metadata field values\n   * @param dracoMetadata\n   * @returns\n   */\n  _getDracoMetadata(dracoMetadata: Metadata): {[entry: string]: DracoMetadataEntry} {\n    // The not so wonderful world of undocumented Draco APIs :(\n    if (!dracoMetadata || !dracoMetadata.ptr) {\n      return {};\n    }\n    const result = {};\n    const numEntries = this.metadataQuerier.NumEntries(dracoMetadata);\n    for (let entryIndex = 0; entryIndex < numEntries; entryIndex++) {\n      const entryName = this.metadataQuerier.GetEntryName(dracoMetadata, entryIndex);\n      result[entryName] = this._getDracoMetadataField(dracoMetadata, entryName);\n    }\n    return result;\n  }\n\n  /**\n   * Extracts possible values for one metadata entry by name\n   * @param dracoMetadata\n   * @param entryName\n   */\n  _getDracoMetadataField(dracoMetadata: Metadata, entryName: string): DracoMetadataEntry {\n    const dracoArray = new this.draco.DracoInt32Array();\n    try {\n      // Draco metadata fields can hold int32 arrays\n      this.metadataQuerier.GetIntEntryArray(dracoMetadata, entryName, dracoArray);\n      const intArray = getInt32Array(dracoArray);\n      return {\n        int: this.metadataQuerier.GetIntEntry(dracoMetadata, entryName),\n        string: this.metadataQuerier.GetStringEntry(dracoMetadata, entryName),\n        double: this.metadataQuerier.GetDoubleEntry(dracoMetadata, entryName),\n        intArray\n      };\n    } finally {\n      this.draco.destroy(dracoArray);\n    }\n  }\n\n  // QUANTIZED ATTRIBUTE SUPPORT (NO DECOMPRESSION)\n\n  /** Skip transforms for specific attribute types */\n  _disableAttributeTransforms(options: DracoParseOptions) {\n    const {quantizedAttributes = [], octahedronAttributes = []} = options;\n    const skipAttributes = [...quantizedAttributes, ...octahedronAttributes];\n    for (const dracoAttributeName of skipAttributes) {\n      this.decoder.SkipAttributeTransform(this.draco[dracoAttributeName]);\n    }\n  }\n\n  /**\n   * Extract (and apply?) Position Transform\n   * @todo not used\n   */\n  _getQuantizationTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoQuantizationTransform | null {\n    const {quantizedAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const skip = quantizedAttributes.map((type) => this.decoder[type]).includes(attribute_type);\n    if (skip) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits(),\n            range: transform.range(),\n            min_values: new Float32Array([1, 2, 3]).map((i) => transform.min_value(i))\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  _getOctahedronTransform(\n    dracoAttribute: PointAttribute,\n    options: DracoParseOptions\n  ): DracoOctahedronTransform | null {\n    const {octahedronAttributes = []} = options;\n    const attribute_type = dracoAttribute.attribute_type();\n    const octahedron = octahedronAttributes\n      .map((type) => this.decoder[type])\n      .includes(attribute_type);\n    if (octahedron) {\n      const transform = new this.draco.AttributeQuantizationTransform();\n      try {\n        if (transform.InitFromAttribute(dracoAttribute)) {\n          return {\n            quantization_bits: transform.quantization_bits()\n          };\n        }\n      } finally {\n        this.draco.destroy(transform);\n      }\n    }\n    return null;\n  }\n\n  // HELPERS\n}\n\n/**\n * Get draco specific data type by TypedArray constructor type\n * @param attributeType\n * @returns draco specific data type\n */\nfunction getDracoDataType(draco: Draco3D, attributeType: any): draco_DataType {\n  switch (attributeType) {\n    case Float32Array:\n      return draco.DT_FLOAT32;\n    case Int8Array:\n      return draco.DT_INT8;\n    case Int16Array:\n      return draco.DT_INT16;\n    case Int32Array:\n      return draco.DT_INT32;\n    case Uint8Array:\n      return draco.DT_UINT8;\n    case Uint16Array:\n      return draco.DT_UINT16;\n    case Uint32Array:\n      return draco.DT_UINT32;\n    default:\n      return draco.DT_INVALID;\n  }\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getInt32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n\n/**\n * Copy a Draco int32 array into a JS typed array\n */\nfunction getUint32Array(dracoArray: DracoInt32Array): Int32Array {\n  const numValues = dracoArray.size();\n  const intArray = new Int32Array(numValues);\n  for (let i = 0; i < numValues; i++) {\n    intArray[i] = dracoArray.GetValue(i);\n  }\n  return intArray;\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport type {TableBatchAggregator, TableBatchConstructor} from './table-batch-aggregator';\nimport BaseTableBatchAggregator from './base-table-batch-aggregator';\nimport RowTableBatchAggregator from './row-table-batch-aggregator';\nimport ColumnarTableBatchAggregator from './columnar-table-batch-aggregator';\n\n// TODO define interface instead\ntype TableBatchBuilderOptions = {\n  shape: 'row-table' | 'array-row-table' | 'object-row-table' | 'columnar-table' | 'arrow-table';\n  batchSize?: number | 'auto';\n  batchDebounceMs?: number;\n  limit: number;\n  _limitMB: number;\n};\n\ntype GetBatchOptions = {\n  bytesUsed?: number;\n  [key: string]: any;\n};\n\nconst DEFAULT_OPTIONS: Required<TableBatchBuilderOptions> = {\n  shape: 'array-row-table',\n  batchSize: 'auto',\n  batchDebounceMs: 0,\n  limit: 0,\n  _limitMB: 0\n};\n\nconst ERR_MESSAGE = 'TableBatchBuilder';\n\n/** Incrementally builds batches from a stream of rows */\nexport default class TableBatchBuilder {\n  schema: Schema;\n  options: Required<TableBatchBuilderOptions>;\n\n  private aggregator: TableBatchAggregator | null = null;\n  private batchCount: number = 0;\n  private bytesUsed: number = 0;\n  private isChunkComplete: boolean = false;\n  private lastBatchEmittedMs: number = Date.now();\n  private totalLength: number = 0;\n  private totalBytes: number = 0;\n  private rowBytes: number = 0;\n\n  static ArrowBatch?: TableBatchConstructor;\n\n  constructor(schema: Schema, options?: TableBatchBuilderOptions) {\n    this.schema = schema;\n    this.options = {...DEFAULT_OPTIONS, ...options};\n  }\n\n  limitReached(): boolean {\n    if (Boolean(this.options?.limit) && this.totalLength >= this.options.limit) {\n      return true;\n    }\n    if (Boolean(this.options?._limitMB) && this.totalBytes / 1e6 >= this.options._limitMB) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated Use addArrayRow or addObjectRow */\n  addRow(row: any[] | {[columnName: string]: any}): void {\n    if (this.limitReached()) {\n      return;\n    }\n    this.totalLength++;\n    this.rowBytes = this.rowBytes || this._estimateRowMB(row);\n    this.totalBytes += this.rowBytes;\n    if (Array.isArray(row)) {\n      this.addArrayRow(row);\n    } else {\n      this.addObjectRow(row);\n    }\n  }\n\n  /** Add one row to the batch */\n  protected addArrayRow(row: any[]) {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addArrayRow(row);\n  }\n\n  /** Add one row to the batch */\n  protected addObjectRow(row: {[columnName: string]: any}): void {\n    if (!this.aggregator) {\n      const TableBatchType = this._getTableBatchType();\n      this.aggregator = new TableBatchType(this.schema, this.options);\n    }\n    this.aggregator.addObjectRow(row);\n  }\n\n  /** Mark an incoming raw memory chunk has completed */\n  chunkComplete(chunk: ArrayBuffer | string): void {\n    if (chunk instanceof ArrayBuffer) {\n      this.bytesUsed += chunk.byteLength;\n    }\n    if (typeof chunk === 'string') {\n      this.bytesUsed += chunk.length;\n    }\n    this.isChunkComplete = true;\n  }\n\n  getFullBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._isFull() ? this._getBatch(options) : null;\n  }\n\n  getFinalBatch(options?: GetBatchOptions): TableBatch | null {\n    return this._getBatch(options);\n  }\n\n  // INTERNAL\n\n  _estimateRowMB(row) {\n    return Array.isArray(row) ? row.length * 8 : Object.keys(row).length * 8;\n  }\n\n  private _isFull(): boolean {\n    // No batch, not ready\n    if (!this.aggregator || this.aggregator.rowCount() === 0) {\n      return false;\n    }\n\n    // if batchSize === 'auto' we wait for chunk to complete\n    // if batchSize === number, ensure we have enough rows\n    if (this.options.batchSize === 'auto') {\n      if (!this.isChunkComplete) {\n        return false;\n      }\n    } else if (this.options.batchSize > this.aggregator.rowCount()) {\n      return false;\n    }\n\n    // Debounce batches\n    if (this.options.batchDebounceMs > Date.now() - this.lastBatchEmittedMs) {\n      return false;\n    }\n\n    // Emit batch\n    this.isChunkComplete = false;\n    this.lastBatchEmittedMs = Date.now();\n    return true;\n  }\n\n  /**\n   * bytesUsed can be set via chunkComplete or via getBatch*\n   */\n  private _getBatch(options?: GetBatchOptions): TableBatch | null {\n    if (!this.aggregator) {\n      return null;\n    }\n\n    // TODO - this can overly increment bytes used?\n    if (options?.bytesUsed) {\n      this.bytesUsed = options.bytesUsed;\n    }\n    const normalizedBatch = this.aggregator.getBatch() as TableBatch;\n    normalizedBatch.count = this.batchCount;\n    normalizedBatch.bytesUsed = this.bytesUsed;\n    Object.assign(normalizedBatch, options);\n\n    this.batchCount++;\n    this.aggregator = null;\n    return normalizedBatch;\n  }\n\n  private _getTableBatchType(): TableBatchConstructor {\n    switch (this.options.shape) {\n      case 'row-table':\n        return BaseTableBatchAggregator;\n      case 'array-row-table':\n      case 'object-row-table':\n        return RowTableBatchAggregator;\n      case 'columnar-table':\n        return ColumnarTableBatchAggregator;\n      case 'arrow-table':\n        if (!TableBatchBuilder.ArrowBatch) {\n          throw new Error(ERR_MESSAGE);\n        }\n        return TableBatchBuilder.ArrowBatch;\n      default:\n        throw new Error(ERR_MESSAGE);\n    }\n  }\n}\n","import type {Schema} from '../schema';\nimport type {TableBatch} from '../../category/table';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport default class RowTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.options.shape,\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n","// Mesh category utilities\n// TODO - move to mesh category module, or to math.gl/geometry module\nimport {TypedArray} from '../../types';\n\ntype Attribute = {\n  size?: number;\n  type?: number;\n  normalized?: boolean;\n  value: TypedArray;\n};\n\ntype TypedArrays = {[key: string]: TypedArray};\nexport type Attributes = {[key: string]: Attribute};\n\n/**\n * Holds an axis aligned bounding box\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\n */\ntype BoundingBox = [[number, number, number], [number, number, number]];\n\n/**\n * Get number of vertices in mesh\n * @param attributes\n */\nexport function getMeshSize(attributes: TypedArrays): number {\n  let size = 0;\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    if (ArrayBuffer.isView(attribute)) {\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\n    }\n  }\n  return size;\n}\n\n/**\n * Get the (axis aligned) bounding box of a mesh\n * @param attributes\n * @returns array of two vectors representing the axis aligned bounding box\n */\n// eslint-disable-next-line complexity\nexport function getMeshBoundingBox(attributes: Attributes): BoundingBox {\n  let minX = Infinity;\n  let minY = Infinity;\n  let minZ = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\n  const len = positions && positions.length;\n\n  for (let i = 0; i < len; i += 3) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const z = positions[i + 2];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    minZ = z < minZ ? z : minZ;\n\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n    maxZ = z > maxZ ? z : maxZ;\n  }\n  return [\n    [minX, minY, minZ],\n    [maxX, maxY, maxZ]\n  ];\n}\n","import {assert} from '../../utils/assert';\nimport Field from './field';\n\nexport type SchemaMetadata = Map<string, any>;\n\n/**\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\n * https://loaders.gl/arrowjs/docs/api-reference/schema\n */\nexport default class Schema {\n  fields: Field[];\n  // TODO - Arrow just allows Map<string, string>\n  metadata: SchemaMetadata;\n\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\n    assert(Array.isArray(fields));\n    checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields;\n    this.metadata = metadata || new Map();\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: Schema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): Schema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): Schema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new Schema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: Schema | Field[]): Schema {\n    let fields: Field[];\n    let metadata: SchemaMetadata = this.metadata;\n\n    if (schemaOrFields instanceof Schema) {\n      const otherSchema = schemaOrFields;\n      fields = otherSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: Field} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new Schema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\nfunction checkNames(fields) {\n  const usedNames = {};\n  for (const field of fields) {\n    if (usedNames[field.name]) {\n      // eslint-disable-next-line\n      console.warn('Schema: duplicated field name', field.name, field);\n    }\n    usedNames[field.name] = true;\n  }\n}\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport function assert(condition: boolean, message?: string) {\n  if (!condition) {\n    throw new Error(message || 'loader assertion failed.');\n  }\n}\n","import {DataType} from './type';\n\n/**\n * ArrowJS `Field` API-compatible class for row-based tables\n * https://loaders.gl/arrowjs/docs/api-reference/field\n * A field holds name, nullable, and metadata information about a table \"column\"\n * A Schema is essentially a list of fields\n */\nexport default class Field {\n  name: string;\n  type: DataType;\n  nullable: boolean;\n  metadata: Map<string, string>;\n\n  constructor(\n    name: string,\n    type: DataType,\n    nullable = false,\n    metadata: Map<string, string> = new Map()\n  ) {\n    this.name = name;\n    this.type = type;\n    this.nullable = nullable;\n    this.metadata = metadata;\n  }\n\n  get typeId(): number {\n    return this.type && this.type.typeId;\n  }\n\n  clone(): Field {\n    return new Field(this.name, this.type, this.nullable, this.metadata);\n  }\n\n  compareTo(other: this): boolean {\n    return (\n      this.name === other.name &&\n      this.type === other.type &&\n      this.nullable === other.nullable &&\n      this.metadata === other.metadata\n    );\n  }\n\n  toString(): string {\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\n      this.metadata ? `, metadata: ${this.metadata}` : ''\n    }`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: number;\n  readonly bitWidth: number;\n\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n  /** The default placeholder type */\n  NONE = 0,\n  /** A NULL type having no physical storage */\n  Null = 1,\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n  Int = 2,\n  /** 2, 4, or 8-byte floating point value */\n  Float = 3,\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\n  Binary = 4,\n  /** UTF8 variable-length string as List<Char> */\n  Utf8 = 5,\n  /** Boolean as 1 bit, LSB bit-packed ordering */\n  Bool = 6,\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n  Decimal = 7,\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\n  Date = 8,\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n  Time = 9,\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n  Timestamp = 10,\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\n  Interval = 11,\n  /** A list of some logical data type */\n  List = 12,\n  /** Struct of logical types */\n  Struct = 13,\n  /** Union of logical types */\n  Union = 14,\n  /** Fixed-size binary. Each value occupies the same number of bytes */\n  FixedSizeBinary = 15,\n  /** Fixed-size list. Each value occupies the same number of bytes */\n  FixedSizeList = 16,\n  /** Map of named logical types */\n  Map = 17,\n\n  /** Dictionary aka Category type */\n  Dictionary = -1,\n  Int8 = -2,\n  Int16 = -3,\n  Int32 = -4,\n  Int64 = -5,\n  Uint8 = -6,\n  Uint16 = -7,\n  Uint32 = -8,\n  Uint64 = -9,\n  Float16 = -10,\n  Float32 = -11,\n  Float64 = -12,\n  DateDay = -13,\n  DateMillisecond = -14,\n  TimestampSecond = -15,\n  TimestampMillisecond = -16,\n  TimestampMicrosecond = -17,\n  TimestampNanosecond = -18,\n  TimeSecond = -19,\n  TimeMillisecond = -20,\n  TimeMicrosecond = -21,\n  TimeNanosecond = -22,\n  DenseUnion = -23,\n  SparseUnion = -24,\n  IntervalDayTime = -25,\n  IntervalYearMonth = -26\n}\n","// Type deduction\nimport {\n  Schema\n  // Int,\n  // Int8,\n  // Int16,\n  // Int32,\n  // Uint8,\n  // Uint16,\n  // Uint32,\n  // Float32,\n  // Float64\n  // Bool,\n  // Utf8,\n  // TimestampMillisecond,\n  // Null\n} from '../schema';\n\n// const TYPED_ARRAY_TO_TYPE = {\n//   Int8Array: new Int8(),\n//   Int16Array: new Int16(),\n//   Int32Array: new Int32(),\n//   Uint8Array: new Uint8(),\n//   Uint8ClampedArray: new Uint8(),\n//   Uint16Array: new Uint16(),\n//   Uint32Array: new Uint32(),\n//   Float32Array: new Float32(),\n//   Float64Array: new Float64()\n// };\n\n// if (typeof BigInt64Array !== 'undefined') {\n//   TYPED_ARRAY_TO_TYPE.BigInt64Array = new Int64();\n//   TYPED_ARRAY_TO_TYPE.BigUint64Array = new Uint64();\n// }\n\n/**\n * SCHEMA SUPPORT - AUTODEDUCTION\n * @param {*} table\n * @param {*} schema\n * @returns\n */\nexport function deduceTableSchema(table, schema?: Schema) {\n  const deducedSchema = Array.isArray(table)\n    ? deduceSchemaForRowTable(table)\n    : deduceSchemaForColumnarTable(table);\n  // Deduced schema will fill in missing info from partial options.schema, if provided\n  return Object.assign(deducedSchema, schema);\n}\n\nfunction deduceSchemaForColumnarTable(columnarTable) {\n  const schema = {};\n  for (const field in columnarTable) {\n    const column = columnarTable[field];\n    // Check if column is typed, if so we are done\n    if (ArrayBuffer.isView(column)) {\n      schema[field] = column.constructor;\n      // else we need data\n    } else if (column.length) {\n      const value = column[0];\n      schema[field] = deduceTypeFromValue(value);\n      // TODO - support nested schemas?\n    }\n    // else we mark as present but unknow\n    schema[field] = schema[field] || null;\n  }\n  return schema;\n}\n\nfunction deduceSchemaForRowTable(rowTable) {\n  const schema = {};\n  if (rowTable.length) {\n    const row = rowTable[0];\n    // TODO - Could look at additional rows if nulls in first row\n    for (const field in row) {\n      const value = row[field];\n      schema[field] = deduceTypeFromValue(value);\n    }\n  }\n  return schema;\n}\n\nfunction deduceTypeFromValue(value) {\n  if (value instanceof Date) {\n    return Date;\n  } else if (value instanceof Number) {\n    return Float32Array;\n  } else if (typeof value === 'string') {\n    return String;\n  }\n  return null;\n}\n\n/*\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction deduceSchema(rows) {\n  const row = rows[0];\n\n  const schema = {};\n  let i = 0;\n  for (const columnName in row) {\n    const value = row[columnName];\n    switch (typeof value) {\n      case 'number':\n      case 'boolean':\n        // TODO - booleans could be handled differently...\n        schema[columnName] = {name: String(columnName), index: i, type: Float32Array};\n        break;\n\n      case 'object':\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n        break;\n\n      case 'string':\n      default:\n        schema[columnName] = {name: String(columnName), index: i, type: Array};\n      // We currently only handle numeric rows\n      // TODO we could offer a function to map strings to numbers?\n    }\n    i++;\n  }\n  return schema;\n}\n*/\n","import {Type} from '../schema';\nimport {AnyArray} from '../../types';\n\n/**\n * Gets type information from an Arrow type object or \"mock\" Arrow type object\n * @param arrowTypeLike Arrow Type or type object of similar shape\n */\nexport function getTypeInfo(arrowTypeLike: any): {\n  typeId: Type;\n  ArrayType: AnyArray;\n  typeName: string;\n  typeEnumName?: string;\n  precision?: number;\n} {\n  return {\n    typeId: arrowTypeLike.typeId,\n    ArrayType: arrowTypeLike.ArrayType,\n    typeName: arrowTypeLike.toString(),\n    typeEnumName: getTypeKey(arrowTypeLike.typeId),\n    precision: arrowTypeLike.precision\n  };\n}\n\nlet ReverseType: {[key: string]: string} | null = null;\n\nfunction getTypeKey(typeKey) {\n  if (!ReverseType) {\n    ReverseType = {};\n    for (const key in Type) {\n      ReverseType[Type[key]] = key;\n    }\n  }\n\n  return ReverseType[typeKey];\n}\n","import type {TypedArray} from '../../types';\nimport {DataType, Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8} from '../schema';\n\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\n  switch (array.constructor) {\n    case Int8Array:\n      return new Int8();\n    case Uint8Array:\n      return new Uint8();\n    case Int16Array:\n      return new Int16();\n    case Uint16Array:\n      return new Uint16();\n    case Int32Array:\n      return new Int32();\n    case Uint32Array:\n      return new Uint32();\n    case Float32Array:\n      return new Float32();\n    case Float64Array:\n      return new Float64();\n    default:\n      throw new Error('array type not supported');\n  }\n}\n","// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T>;\n  private _settlers: ArrayQueue<{resolve; reject}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{resolve; reject}>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n","import {Schema, Field, FixedSizeList, getArrowTypeFromTypedArray} from '@loaders.gl/schema';\n\nimport {MeshAttribute, DracoAttribute, DracoLoaderData, DracoMetadataEntry} from '../draco-types';\n\nexport function makeSchemaFromAttributes(\n  attributes: {[attributeName: string]: MeshAttribute},\n  loaderData: DracoLoaderData,\n  indices?: MeshAttribute\n): Schema {\n  const metadataMap = makeMetadata(loaderData.metadata);\n  const fields: Field[] = [];\n  const namedLoaderDataAttributes = transformAttributesLoaderData(loaderData.attributes);\n  for (const attributeName in attributes) {\n    const attribute = attributes[attributeName];\n    const field = getArrowFieldFromAttribute(\n      attributeName,\n      attribute,\n      namedLoaderDataAttributes[attributeName]\n    );\n    fields.push(field);\n  }\n  if (indices) {\n    const indicesField = getArrowFieldFromAttribute('indices', indices);\n    fields.push(indicesField);\n  }\n  return new Schema(fields, metadataMap);\n}\n\nfunction transformAttributesLoaderData(loaderData: {[key: number]: DracoAttribute}): {\n  [attributeName: string]: DracoAttribute;\n} {\n  const result: {[attributeName: string]: DracoAttribute} = {};\n  for (const key in loaderData) {\n    const dracoAttribute = loaderData[key];\n    result[dracoAttribute.name || 'undefined'] = dracoAttribute;\n  }\n  return result;\n}\n\nfunction getArrowFieldFromAttribute(\n  attributeName: string,\n  attribute: MeshAttribute,\n  loaderData?: DracoAttribute\n): Field {\n  const metadataMap = loaderData ? makeMetadata(loaderData.metadata) : undefined;\n  const type = getArrowTypeFromTypedArray(attribute.value);\n  return new Field(\n    attributeName,\n    new FixedSizeList(attribute.size, new Field('value', type)),\n    false,\n    metadataMap\n  );\n}\n\nfunction makeMetadata(metadata: {[key: string]: DracoMetadataEntry}): Map<string, string> {\n  const metadataMap = new Map();\n  for (const key in metadata) {\n    metadataMap.set(`${key}.string`, JSON.stringify(metadata[key]));\n  }\n\n  return metadataMap;\n}\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport type {DracoMeshData} from './lib/draco-types';\nimport type {DracoBuildOptions} from './lib/draco-builder';\nimport DRACOBuilder from './lib/draco-builder';\nimport {loadDracoEncoderModule} from './lib/draco-module-loader';\nimport {VERSION} from './lib/utils/version';\n\nexport type DracoWriterOptions = DracoBuildOptions & {};\n\nconst DEFAULT_DRACO_OPTIONS = {\n  pointcloud: false, // Set to true if pointcloud (mode: 0, no indices)\n  attributeNameEntry: 'name'\n  // Draco Compression Parameters\n  // method: 'MESH_EDGEBREAKER_ENCODING',\n  // speed: [5, 5],\n  // quantization: {\n  //   POSITION: 10\n  // }\n};\n\n/**\n * Exporter for Draco3D compressed geometries\n */\nexport const DracoWriter: Writer = {\n  name: 'DRACO',\n  id: 'draco',\n  module: 'draco',\n  version: VERSION,\n  extensions: ['drc'],\n  encode,\n  options: {\n    draco: DEFAULT_DRACO_OPTIONS\n  }\n};\n\nasync function encode(\n  data: DracoMeshData,\n  options: {draco?: DracoWriterOptions} = {}\n): Promise<ArrayBuffer> {\n  // Dynamically load draco\n  const {draco} = await loadDracoEncoderModule(options);\n  const dracoBuilder = new DRACOBuilder(draco);\n\n  try {\n    return dracoBuilder.encodeSync(data, options.draco);\n  } finally {\n    dracoBuilder.destroy();\n  }\n}\n","/* eslint-disable camelcase */\n// This code is inspired by example code in the DRACO repository\nimport type {\n  Draco3D,\n  DracoInt8Array,\n  Encoder,\n  Mesh,\n  MeshBuilder,\n  PointCloud,\n  Metadata,\n  MetadataBuilder,\n  draco_GeometryAttribute_Type\n} from '../draco3d/draco3d-types';\n\nimport type {TypedArray, DracoMeshData} from './draco-types';\n\nexport type DracoBuildOptions = {\n  pointcloud?: boolean;\n  metadata?: {[key: string]: string};\n  attributesMetadata?: {};\n  log?: any;\n\n  // draco encoding options\n  speed?: [number, number];\n  method?: string;\n  quantization?: {[attributeName: string]: number};\n};\n\n// Native Draco attribute names to GLTF attribute names.\nconst GLTF_TO_DRACO_ATTRIBUTE_NAME_MAP = {\n  POSITION: 'POSITION',\n  NORMAL: 'NORMAL',\n  COLOR_0: 'COLOR',\n  TEXCOORD_0: 'TEX_COORD'\n};\n\nconst noop = () => {};\n\nexport default class DracoBuilder {\n  draco: Draco3D;\n  dracoEncoder: Encoder;\n  dracoMeshBuilder: MeshBuilder;\n  dracoMetadataBuilder: MetadataBuilder;\n  log: any;\n\n  // draco - the draco decoder, either import `draco3d` or load dynamically\n  constructor(draco: Draco3D) {\n    this.draco = draco;\n    this.dracoEncoder = new this.draco.Encoder();\n    this.dracoMeshBuilder = new this.draco.MeshBuilder();\n    this.dracoMetadataBuilder = new this.draco.MetadataBuilder();\n  }\n\n  destroy(): void {\n    this.destroyEncodedObject(this.dracoMeshBuilder);\n    this.destroyEncodedObject(this.dracoEncoder);\n    this.destroyEncodedObject(this.dracoMetadataBuilder);\n    // @ts-ignore\n    this.dracoMeshBuilder = null;\n    // @ts-ignore\n    this.dracoEncoder = null;\n    // @ts-ignore\n    this.draco = null;\n  }\n\n  // TBD - when does this need to be called?\n  destroyEncodedObject(object): void {\n    if (object) {\n      this.draco.destroy(object);\n    }\n  }\n\n  /**\n   * Encode mesh or point cloud\n   * @param mesh =({})\n   * @param options\n   */\n  encodeSync(mesh: DracoMeshData, options: DracoBuildOptions = {}): ArrayBuffer {\n    this.log = noop; // TODO\n    this._setOptions(options);\n\n    return options.pointcloud\n      ? this._encodePointCloud(mesh, options)\n      : this._encodeMesh(mesh, options);\n  }\n\n  // PRIVATE\n\n  _getAttributesFromMesh(mesh: DracoMeshData) {\n    // TODO - Change the encodePointCloud interface instead?\n    const attributes = {...mesh, ...mesh.attributes};\n    // Fold indices into the attributes\n    if (mesh.indices) {\n      attributes.indices = mesh.indices;\n    }\n    return attributes;\n  }\n\n  _encodePointCloud(pointcloud: DracoMeshData, options: DracoBuildOptions): ArrayBuffer {\n    const dracoPointCloud = new this.draco.PointCloud();\n\n    if (options.metadata) {\n      this._addGeometryMetadata(dracoPointCloud, options.metadata);\n    }\n\n    const attributes = this._getAttributesFromMesh(pointcloud);\n\n    // Build a `DracoPointCloud` from the input data\n    this._createDracoPointCloud(dracoPointCloud, attributes, options);\n\n    const dracoData = new this.draco.DracoInt8Array();\n\n    try {\n      const encodedLen = this.dracoEncoder.EncodePointCloudToDracoBuffer(\n        dracoPointCloud,\n        false,\n        dracoData\n      );\n\n      if (!(encodedLen > 0)) {\n        throw new Error('Draco encoding failed.');\n      }\n\n      this.log(`DRACO encoded ${dracoPointCloud.num_points()} points\n        with ${dracoPointCloud.num_attributes()} attributes into ${encodedLen} bytes`);\n\n      return dracoInt8ArrayToArrayBuffer(dracoData);\n    } finally {\n      this.destroyEncodedObject(dracoData);\n      this.destroyEncodedObject(dracoPointCloud);\n    }\n  }\n\n  _encodeMesh(mesh: DracoMeshData, options: DracoBuildOptions): ArrayBuffer {\n    const dracoMesh = new this.draco.Mesh();\n\n    if (options.metadata) {\n      this._addGeometryMetadata(dracoMesh, options.metadata);\n    }\n\n    const attributes = this._getAttributesFromMesh(mesh);\n\n    // Build a `DracoMeshData` from the input data\n    this._createDracoMesh(dracoMesh, attributes, options);\n\n    const dracoData = new this.draco.DracoInt8Array();\n\n    try {\n      const encodedLen = this.dracoEncoder.EncodeMeshToDracoBuffer(dracoMesh, dracoData);\n      if (encodedLen <= 0) {\n        throw new Error('Draco encoding failed.');\n      }\n\n      this.log(`DRACO encoded ${dracoMesh.num_points()} points\n        with ${dracoMesh.num_attributes()} attributes into ${encodedLen} bytes`);\n\n      return dracoInt8ArrayToArrayBuffer(dracoData);\n    } finally {\n      this.destroyEncodedObject(dracoData);\n      this.destroyEncodedObject(dracoMesh);\n    }\n  }\n\n  /**\n   * Set encoding options.\n   * @param {{speed?: any; method?: any; quantization?: any;}} options\n   */\n  _setOptions(options: DracoBuildOptions): void {\n    if ('speed' in options) {\n      // @ts-ignore\n      this.dracoEncoder.SetSpeedOptions(...options.speed);\n    }\n    if ('method' in options) {\n      const dracoMethod = this.draco[options.method || 'MESH_SEQUENTIAL_ENCODING'];\n      // assert(dracoMethod)\n      this.dracoEncoder.SetEncodingMethod(dracoMethod);\n    }\n    if ('quantization' in options) {\n      for (const attribute in options.quantization) {\n        const bits = options.quantization[attribute];\n        const dracoPosition = this.draco[attribute];\n        this.dracoEncoder.SetAttributeQuantization(dracoPosition, bits);\n      }\n    }\n  }\n\n  /**\n   * @param {Mesh} dracoMesh\n   * @param {object} attributes\n   * @returns {Mesh}\n   */\n  _createDracoMesh(dracoMesh: Mesh, attributes, options: DracoBuildOptions): Mesh {\n    const optionalMetadata = options.attributesMetadata || {};\n\n    try {\n      const positions = this._getPositionAttribute(attributes);\n      if (!positions) {\n        throw new Error('positions');\n      }\n      const vertexCount = positions.length / 3;\n\n      for (let attributeName in attributes) {\n        const attribute = attributes[attributeName];\n        attributeName = GLTF_TO_DRACO_ATTRIBUTE_NAME_MAP[attributeName] || attributeName;\n        const uniqueId = this._addAttributeToMesh(dracoMesh, attributeName, attribute, vertexCount);\n\n        if (uniqueId !== -1) {\n          this._addAttributeMetadata(dracoMesh, uniqueId, {\n            name: attributeName,\n            ...(optionalMetadata[attributeName] || {})\n          });\n        }\n      }\n    } catch (error) {\n      this.destroyEncodedObject(dracoMesh);\n      throw error;\n    }\n\n    return dracoMesh;\n  }\n\n  /**\n   * @param {} dracoPointCloud\n   * @param {object} attributes\n   */\n  _createDracoPointCloud(\n    dracoPointCloud: PointCloud,\n    attributes: object,\n    options: DracoBuildOptions\n  ): PointCloud {\n    const optionalMetadata = options.attributesMetadata || {};\n\n    try {\n      const positions = this._getPositionAttribute(attributes);\n      if (!positions) {\n        throw new Error('positions');\n      }\n      const vertexCount = positions.length / 3;\n\n      for (let attributeName in attributes) {\n        const attribute = attributes[attributeName];\n        attributeName = GLTF_TO_DRACO_ATTRIBUTE_NAME_MAP[attributeName] || attributeName;\n        const uniqueId = this._addAttributeToMesh(\n          dracoPointCloud,\n          attributeName,\n          attribute,\n          vertexCount\n        );\n        if (uniqueId !== -1) {\n          this._addAttributeMetadata(dracoPointCloud, uniqueId, {\n            name: attributeName,\n            ...(optionalMetadata[attributeName] || {})\n          });\n        }\n      }\n    } catch (error) {\n      this.destroyEncodedObject(dracoPointCloud);\n      throw error;\n    }\n\n    return dracoPointCloud;\n  }\n\n  /**\n   * @param mesh\n   * @param attributeName\n   * @param attribute\n   * @param vertexCount\n   */\n  _addAttributeToMesh(\n    mesh: PointCloud,\n    attributeName: string,\n    attribute: TypedArray,\n    vertexCount: number\n  ) {\n    if (!ArrayBuffer.isView(attribute)) {\n      return -1;\n    }\n\n    const type = this._getDracoAttributeType(attributeName);\n    // @ts-ignore TODO/fix types\n    const size = attribute.length / vertexCount;\n\n    if (type === 'indices') {\n      // @ts-ignore TODO/fix types\n      const numFaces = attribute.length / 3;\n      this.log(`Adding attribute ${attributeName}, size ${numFaces}`);\n\n      // @ts-ignore assumes mesh is a Mesh, not a point cloud\n      this.dracoMeshBuilder.AddFacesToMesh(mesh, numFaces, attribute);\n      return -1;\n    }\n\n    this.log(`Adding attribute ${attributeName}, size ${size}`);\n\n    const builder = this.dracoMeshBuilder;\n    const {buffer} = attribute;\n\n    switch (attribute.constructor) {\n      case Int8Array:\n        return builder.AddInt8Attribute(mesh, type, vertexCount, size, new Int8Array(buffer));\n\n      case Int16Array:\n        return builder.AddInt16Attribute(mesh, type, vertexCount, size, new Int16Array(buffer));\n\n      case Int32Array:\n        return builder.AddInt32Attribute(mesh, type, vertexCount, size, new Int32Array(buffer));\n      case Uint8Array:\n      case Uint8ClampedArray:\n        return builder.AddUInt8Attribute(mesh, type, vertexCount, size, new Uint8Array(buffer));\n\n      case Uint16Array:\n        return builder.AddUInt16Attribute(mesh, type, vertexCount, size, new Uint16Array(buffer));\n\n      case Uint32Array:\n        return builder.AddUInt32Attribute(mesh, type, vertexCount, size, new Uint32Array(buffer));\n\n      case Float32Array:\n      default:\n        return builder.AddFloatAttribute(mesh, type, vertexCount, size, new Float32Array(buffer));\n    }\n  }\n\n  /**\n   * DRACO can compress attributes of know type better\n   * TODO - expose an attribute type map?\n   * @param attributeName\n   */\n  _getDracoAttributeType(attributeName: string): draco_GeometryAttribute_Type | 'indices' {\n    switch (attributeName.toLowerCase()) {\n      case 'indices':\n        return 'indices';\n      case 'position':\n      case 'positions':\n      case 'vertices':\n        return this.draco.POSITION;\n      case 'normal':\n      case 'normals':\n        return this.draco.NORMAL;\n      case 'color':\n      case 'colors':\n        return this.draco.COLOR;\n      case 'texcoord':\n      case 'texcoords':\n        return this.draco.TEX_COORD;\n      default:\n        return this.draco.GENERIC;\n    }\n  }\n\n  _getPositionAttribute(attributes) {\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const dracoType = this._getDracoAttributeType(attributeName);\n      if (dracoType === this.draco.POSITION) {\n        return attribute;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Add metadata for the geometry.\n   * @param dracoGeometry - WASM Draco Object\n   * @param metadata\n   */\n  _addGeometryMetadata(dracoGeometry: PointCloud, metadata: {[key: string]: string}) {\n    const dracoMetadata = new this.draco.Metadata();\n    this._populateDracoMetadata(dracoMetadata, metadata);\n    this.dracoMeshBuilder.AddMetadata(dracoGeometry, dracoMetadata);\n  }\n\n  /**\n   * Add metadata for an attribute to geometry.\n   * @param dracoGeometry - WASM Draco Object\n   * @param uniqueAttributeId\n   * @param metadata\n   */\n  _addAttributeMetadata(\n    dracoGeometry: PointCloud,\n    uniqueAttributeId: number,\n    metadata: Map<string, string> | {[key: string]: string}\n  ) {\n    // Note: Draco JS IDL doesn't seem to expose draco.AttributeMetadata, however it seems to\n    // create such objects automatically from draco.Metadata object.\n    const dracoAttributeMetadata = new this.draco.Metadata();\n    this._populateDracoMetadata(dracoAttributeMetadata, metadata);\n    // Draco3d doc note: Directly add attribute metadata to geometry.\n    // You can do this without explicitly adding |GeometryMetadata| to mesh.\n    this.dracoMeshBuilder.SetMetadataForAttribute(\n      dracoGeometry,\n      uniqueAttributeId,\n      dracoAttributeMetadata\n    );\n  }\n\n  /**\n   * Add contents of object or map to a WASM Draco Metadata Object\n   * @param dracoMetadata - WASM Draco Object\n   * @param metadata\n   */\n  _populateDracoMetadata(\n    dracoMetadata: Metadata,\n    metadata: Map<string, string> | {[key: string]: string}\n  ) {\n    for (const [key, value] of getEntries(metadata)) {\n      switch (typeof value) {\n        case 'number':\n          if (Math.trunc(value) === value) {\n            this.dracoMetadataBuilder.AddIntEntry(dracoMetadata, key, value);\n          } else {\n            this.dracoMetadataBuilder.AddDoubleEntry(dracoMetadata, key, value);\n          }\n          break;\n        case 'object':\n          if (value instanceof Int32Array) {\n            this.dracoMetadataBuilder.AddIntEntryArray(dracoMetadata, key, value, value.length);\n          }\n          break;\n        case 'string':\n        default:\n          this.dracoMetadataBuilder.AddStringEntry(dracoMetadata, key, value);\n      }\n    }\n  }\n}\n\n// HELPER FUNCTIONS\n\n/**\n * Copy encoded data to buffer\n * @param dracoData\n */\nfunction dracoInt8ArrayToArrayBuffer(dracoData: DracoInt8Array) {\n  const byteLength = dracoData.size();\n  const outputBuffer = new ArrayBuffer(byteLength);\n  const outputData = new Int8Array(outputBuffer);\n  for (let i = 0; i < byteLength; ++i) {\n    outputData[i] = dracoData.GetValue(i);\n  }\n  return outputBuffer;\n}\n\n/** Enable iteration over either an object or a map */\nfunction getEntries(container) {\n  const hasEntriesFunc = container.entries && !container.hasOwnProperty('entries');\n  return hasEntriesFunc ? container.entries() : Object.entries(container);\n}\n","import {TypedArray} from '../types';\nimport {GL_TYPE as GL} from '../constants';\n\nconst GL_TYPE_TO_ARRAY_TYPE = {\n  [GL.DOUBLE]: Float64Array,\n  [GL.FLOAT]: Float32Array,\n  [GL.UNSIGNED_SHORT]: Uint16Array,\n  [GL.UNSIGNED_INT]: Uint32Array,\n  [GL.UNSIGNED_BYTE]: Uint8Array,\n  [GL.BYTE]: Int8Array,\n  [GL.SHORT]: Int16Array,\n  [GL.INT]: Int32Array\n};\ntype GlTypeMap = {\n  [index: string]: number;\n};\nconst NAME_TO_GL_TYPE: GlTypeMap = {\n  DOUBLE: GL.DOUBLE,\n  FLOAT: GL.FLOAT,\n  UNSIGNED_SHORT: GL.UNSIGNED_SHORT,\n  UNSIGNED_INT: GL.UNSIGNED_INT,\n  UNSIGNED_BYTE: GL.UNSIGNED_BYTE,\n  BYTE: GL.BYTE,\n  SHORT: GL.SHORT,\n  INT: GL.INT\n};\nconst ERR_TYPE_CONVERSION = 'Failed to convert GL type';\n// Converts TYPED ARRAYS to corresponding GL constant\n// Used to auto deduce gl parameter types\nexport default class GLType {\n  // Signature: fromTypedArray(new Uint8Array())\n  // Signature: fromTypedArray(Uint8Array)\n  /**\n   * Returns the size, in bytes, of the corresponding datatype\n   * @param arrayOrType\n   * @returns glType a a string\n   */\n  static fromTypedArray(arrayOrType: TypedArray | Function): string {\n    // If typed array, look up constructor\n    arrayOrType = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n    for (const glType in GL_TYPE_TO_ARRAY_TYPE) {\n      const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n      if (ArrayType === arrayOrType) {\n        return glType;\n      }\n    }\n    throw new Error(ERR_TYPE_CONVERSION);\n  }\n  /**\n   * Extracts name for glType from array NAME_TO_GL_TYPE\n   * @param name\n   * @returns glType as a number\n   */\n  static fromName(name: string): number {\n    const glType = NAME_TO_GL_TYPE[name];\n    if (!glType) {\n      throw new Error(ERR_TYPE_CONVERSION);\n    }\n    return glType;\n  }\n  // Converts GL constant to corresponding typed array type\n  // eslint-disable-next-line complexity\n  static getArrayType(glType: number) {\n    switch (glType) {\n      /*eslint-disable*/\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_5_6_5:\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_4_4_4_4:\n      // @ts-ignore\n      case GL.UNSIGNED_SHORT_5_5_5_1:\n        /* eslint-enable*/\n        return Uint16Array;\n      default:\n        const ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n        if (!ArrayType) {\n          throw new Error(ERR_TYPE_CONVERSION);\n        }\n        return ArrayType;\n    }\n  }\n  /**\n   * Returns the size in bytes of one element of the provided WebGL type\n   * @param glType\n   * @returns size of glType\n   */\n  static getByteSize(glType: number): number {\n    const ArrayType = GLType.getArrayType(glType);\n    return ArrayType.BYTES_PER_ELEMENT;\n  }\n  /**\n   * Returns `true` if `glType` is a valid WebGL data type.\n   * @param glType\n   * @returns boolean\n   */\n  static validate(glType: number): boolean {\n    return Boolean(GLType.getArrayType(glType));\n  }\n  /**\n   * Creates a typed view of an array of bytes\n   * @param glType The type of typed array (ArrayBuffer view) to create\n   * @param buffer The buffer storage to use for the view.\n   * @param byteOffset The offset, in bytes, to the first element in the view\n   * @param length The number of elements in the view. Defaults to buffer length\n   * @returns A typed array view of the buffer\n   */\n  static createTypedArray(\n    glType: number,\n    buffer: TypedArray,\n    byteOffset: number = 0,\n    length?: number\n  ): TypedArray {\n    if (length === undefined) {\n      length = (buffer.byteLength - byteOffset) / GLType.getByteSize(glType);\n    }\n    const ArrayType = GLType.getArrayType(glType);\n    return new ArrayType(buffer, byteOffset, length);\n  }\n}\n","/**\n * Iterates over a single attribute\n * NOTE: For performance, re-yields the same modified element\n * @param param0\n */\nexport function* makeAttributeIterator(values: any, size: number): Iterable<any> {\n  const ArrayType = values.constructor;\n  const element = new ArrayType(size);\n  for (let i = 0; i < values.length; i += size) {\n    for (let j = 0; j < size; j++) {\n      element[j] = element[i + j];\n    }\n    yield element;\n  }\n}\n","import type {TypedArray} from '../types';\nimport {Vector3} from '@math.gl/core';\nimport {GL} from '../constants';\nimport {assert} from '../utils/assert';\nimport {makePrimitiveIterator} from '../iterators/primitive-iterator';\nimport {getPrimitiveModeType} from '../primitives/modes';\nimport {getPositions} from './get-attribute-from-geometry';\n\ntype Geometry = {\n  mode: any;\n  indices?: {size: number; values: TypedArray};\n  attributes?: {};\n};\n/**\n * Computes vertex normals for a geometry\n * @param param0\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport function computeVertexNormals(geometry: Geometry): Float32Array {\n  // Only support GL.TRIANGLES, GL.TRIANGLE_STRIP, GL.TRIANGLE_FAN\n  assert(getPrimitiveModeType(geometry.mode) === GL.TRIANGLES, 'TRIANGLES required');\n\n  const {values: positions} = getPositions(geometry);\n\n  const normals = new Float32Array(positions.length);\n\n  const vectorA = new Vector3();\n  const vectorB = new Vector3();\n  const vectorC = new Vector3();\n\n  const vectorCB = new Vector3();\n  const vectorAB = new Vector3();\n\n  for (const primitive of makePrimitiveIterator(geometry)) {\n    vectorA.fromArray(positions, primitive.i1 * 3);\n    vectorB.fromArray(positions, primitive.i2 * 3 + 3);\n    vectorC.fromArray(positions, primitive.i3 * 3 + 6);\n\n    vectorCB.subVectors(vectorC, vectorB);\n    vectorAB.subVectors(vectorA, vectorB);\n    const normal = vectorCB.cross(vectorAB);\n    normal.normalize();\n    // @ts-ignore\n    const {primitiveIndex} = primitive;\n\n    normals[primitiveIndex * 9 + 0] = normal.x;\n    normals[primitiveIndex * 9 + 1] = normal.y;\n    normals[primitiveIndex * 9 + 2] = normal.z;\n\n    normals[primitiveIndex * 9 + 3] = normal.x;\n    normals[primitiveIndex * 9 + 4] = normal.y;\n    normals[primitiveIndex * 9 + 5] = normal.z;\n\n    normals[primitiveIndex * 9 + 6] = normal.x;\n    normals[primitiveIndex * 9 + 7] = normal.y;\n    normals[primitiveIndex * 9 + 8] = normal.z;\n  }\n\n  return normals;\n}\n","import isGeometry from '../is-geometry';\nimport {assert} from '../utils/assert';\n\n/**\n * analyze positions of geometry\n *\n * @param geometry\n * @returns Position| New geometry |assert\n */\n\nexport function getPositions(geometry: any) {\n  // If geometry, extract positions\n  if (isGeometry(geometry)) {\n    const {attributes} = geometry;\n    const position = attributes.POSITION || attributes.positions;\n    assert(position);\n    return position;\n  }\n\n  // If arraybuffer, assume 3 components\n  if (ArrayBuffer.isView(geometry)) {\n    return {values: geometry, size: 3};\n  }\n\n  // Else assume accessor object\n  if (geometry) {\n    assert(geometry.values);\n    return geometry;\n  }\n\n  return assert(false);\n}\n","/**\n * Decode color values\n * @param rgb565\n * @param target\n * @returns target\n */\nexport function decodeRGB565(rgb565: number, target: number[] = [0, 0, 0]): number[] {\n  const r5 = (rgb565 >> 11) & 31;\n  const g6 = (rgb565 >> 5) & 63;\n  const b5 = rgb565 & 31;\n\n  target[0] = r5 << 3;\n  target[1] = g6 << 2;\n  target[2] = b5 << 3;\n\n  return target;\n}\n\n/**\n * Encode color values\n * @param rgb\n * @returns color\n */\nexport function encodeRGB565(rgb: number[]): number {\n  const r5 = Math.floor(rgb[0] / 8) + 4;\n  const g6 = Math.floor(rgb[1] / 4) + 2;\n  const b5 = Math.floor(rgb[2] / 8) + 4;\n  return r5 + (g6 << 5) + (b5 << 11);\n}\n","/**\n * Concats typed arrays\n * @param arrays\n * @returns new Uint8Array\n */\nexport function concatTypedArrays(arrays: any = []): Uint8Array {\n  let byteLength = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n  const buffer = new Uint8Array(byteLength);\n\n  let byteOffset = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n  return buffer;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Attribute compression and decompression functions.\n\nimport {Vector2, Vector3, clamp, _MathUtils} from '@math.gl/core';\nimport {Vector4} from '../types';\nimport {assert} from '../utils/assert';\n\nconst RIGHT_SHIFT = 1.0 / 256.0;\nconst LEFT_SHIFT = 256.0;\n\nconst scratchVector2 = new Vector2();\nconst scratchVector3 = new Vector3();\nconst scratchEncodeVector2 = new Vector2();\nconst octEncodeScratch = new Vector2();\n\nconst uint8ForceArray = new Uint8Array(1);\n\n/**\n * Force a value to Uint8\n *\n * @param value\n * @returns\n */\nfunction forceUint8(value: number): number {\n  uint8ForceArray[0] = value;\n  return uint8ForceArray[0];\n}\n\n/**\n * Converts a SNORM value in the range [0, rangeMaximum] to a scalar in the range [-1.0, 1.0].\n *\n * @param value SNORM value in the range [0, rangeMaximum]\n * @param [rangeMaximum=255] The maximum value in the SNORM range, 255 by default.\n * @returns Scalar in the range [-1.0, 1.0].\n *\n * @see CesiumMath.toSNorm\n */\nfunction fromSNorm(value: number, rangeMaximum = 255): number {\n  return (clamp(value, 0.0, rangeMaximum) / rangeMaximum) * 2.0 - 1.0;\n}\n\n/**\n * Converts a scalar value in the range [-1.0, 1.0] to a SNORM in the range [0, rangeMaximum].\n *\n * @param value The scalar value in the range [-1.0, 1.0]\n * @param [rangeMaximum=255] The maximum value in the mapped range, 255 by default.\n * @returns A SNORM value, where 0 maps to -1.0 and rangeMaximum maps to 1.0.\n *\n * @see CesiumMath.fromSNorm\n */\nfunction toSNorm(value: number, rangeMaximum = 255): number {\n  return Math.round((clamp(value, -1.0, 1.0) * 0.5 + 0.5) * rangeMaximum);\n}\n\n/**\n * Returns 1.0 if the given value is positive or zero, and -1.0 if it is negative.\n * This is similar to `Math.sign` except that returns 1.0 instead of\n * 0.0 when the input value is 0.0.\n *\n * @param value The value to return the sign of.\n * @returns The sign of value.\n */\nfunction signNotZero(value: number): number {\n  return value < 0.0 ? -1.0 : 1.0;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-rangeMax] following the 'oct' encoding.\n *\n * Oct encoding is a compact representation of unit length vectors.\n * The 'oct' encoding is described in \"A Survey of Efficient Representations of Independent Unit Vectors\",\n * Cigolle et al 2014: {@link http://jcgt.org/published/0003/02/01/}\n *\n * @param vector The normalized vector to be compressed into 2 component 'oct' encoding.\n * @param result The 2 component oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @returns The 2 component oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octDecodeInRange\n */\nexport function octEncodeInRange(vector: Vector3, rangeMax: number, result: Vector2): Vector2 {\n  assert(vector);\n  assert(result);\n\n  const vector3 = scratchVector3.from(vector);\n\n  assert(Math.abs(vector3.magnitudeSquared() - 1.0) <= _MathUtils.EPSILON6);\n\n  result.x = vector.x / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n  result.y = vector.y / (Math.abs(vector.x) + Math.abs(vector.y) + Math.abs(vector.z));\n\n  if (vector.z < 0) {\n    const x = result.x;\n    const y = result.y;\n    result.x = (1.0 - Math.abs(y)) * signNotZero(x);\n    result.y = (1.0 - Math.abs(x)) * signNotZero(y);\n  }\n\n  result.x = toSNorm(result.x, rangeMax);\n  result.y = toSNorm(result.y, rangeMax);\n\n  return result;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @param result The 2 byte oct-encoded unit length vector.\n * @returns he 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecode\n */\nexport function octEncode(vector: Vector3, result: Vector2): Vector2 {\n  return octEncodeInRange(vector, 255, result);\n}\n\n/**\n * Encodes a normalized vector into 4-byte vector\n * @param vector The normalized vector to be compressed into 4 byte 'oct' encoding.\n * @param result The 4 byte oct-encoded unit length vector.\n * @returns The 4 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n *\n * @see octEncodeInRange\n * @see octDecodeFromVector4\n */\nexport function octEncodeToVector4(vector: Vector3, result: Vector4): Vector4 {\n  octEncodeInRange(vector, 65535, octEncodeScratch);\n  result.x = forceUint8(octEncodeScratch.x * RIGHT_SHIFT);\n  result.y = forceUint8(octEncodeScratch.x);\n  result.z = forceUint8(octEncodeScratch.y * RIGHT_SHIFT);\n  result.w = forceUint8(octEncodeScratch.y);\n  return result;\n}\n\n/**\n * Decodes a unit-length vector in 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param rangeMax The maximum value of the SNORM range. The encoded vector is stored in log2(rangeMax+1) bits.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n * @exception x and y must be unsigned normalized integers between 0 and rangeMax.\n *\n * @see octEncodeInRange\n */\nexport function octDecodeInRange(x: number, y: number, rangeMax: number, result: Vector3): Vector3 {\n  assert(result);\n  if (x < 0 || x > rangeMax || y < 0 || y > rangeMax) {\n    throw new Error(`x and y must be unsigned normalized integers between 0 and ${rangeMax}`);\n  }\n\n  result.x = fromSNorm(x, rangeMax);\n  result.y = fromSNorm(y, rangeMax);\n  result.z = 1.0 - (Math.abs(result.x) + Math.abs(result.y));\n\n  if (result.z < 0.0) {\n    const oldVX = result.x;\n    result.x = (1.0 - Math.abs(result.y)) * signNotZero(oldVX);\n    result.y = (1.0 - Math.abs(oldVX)) * signNotZero(result.y);\n  }\n\n  return result.normalize();\n}\n\n/**\n * Decodes a unit-length vector in 2 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param x The x component of the oct-encoded unit length vector.\n * @param y The y component of the oct-encoded unit length vector.\n * @param result The decoded and normalized vector.\n * @returns he decoded and normalized vector.\n *\n * @exception x and y must be an unsigned normalized integer between 0 and 255.\n *\n * @see octDecodeInRange\n */\nexport function octDecode(x: number, y: number, result: Vector3): Vector3 {\n  return octDecodeInRange(x, y, 255, result);\n}\n\n/**\n * Decodes a unit-length vector in 4 byte 'oct' encoding to a normalized 3-component vector.\n *\n * @param encoded The oct-encoded unit length vector.\n * @param esult The decoded and normalized vector.\n * @returns The decoded and normalized vector.\n *\n * @exception x, y, z, and w must be unsigned normalized integers between 0 and 255.\n *\n * @see octDecodeInRange\n * @see octEncodeToVector4\n */\nexport function octDecodeFromVector4(encoded: Vector4, result: Vector3): Vector3 {\n  assert(encoded);\n  assert(result);\n  const x = encoded.x;\n  const y = encoded.y;\n  const z = encoded.z;\n  const w = encoded.w;\n\n  if (x < 0 || x > 255 || y < 0 || y > 255 || z < 0 || z > 255 || w < 0 || w > 255) {\n    throw new Error('x, y, z, and w must be unsigned normalized integers between 0 and 255');\n  }\n\n  const xOct16 = x * LEFT_SHIFT + y;\n  const yOct16 = z * LEFT_SHIFT + w;\n  return octDecodeInRange(xOct16, yOct16, 65535, result);\n}\n\n/**\n * Packs an oct encoded vector into a single floating-point number.\n *\n * @param encoded The oct encoded vector.\n * @returns The oct encoded vector packed into a single float.\n *\n */\nexport function octPackFloat(encoded: Vector2): number {\n  const vector2 = scratchVector2.from(encoded);\n  return 256.0 * vector2.x + vector2.y;\n}\n\n/**\n * Encodes a normalized vector into 2 SNORM values in the range of [0-255] following the 'oct' encoding and\n * stores those values in a single float-point number.\n *\n * @param vector The normalized vector to be compressed into 2 byte 'oct' encoding.\n * @returns The 2 byte oct-encoded unit length vector.\n *\n * @exception vector must be normalized.\n */\nexport function octEncodeFloat(vector: Vector3): number {\n  octEncode(vector, scratchEncodeVector2);\n  return octPackFloat(scratchEncodeVector2);\n}\n\n/**\n * Decodes a unit-length vector in 'oct' encoding packed in a floating-point number to a normalized 3-component vector.\n *\n * @param value The oct-encoded unit length vector stored as a single floating-point number.\n * @param result The decoded and normalized vector\n * @returns The decoded and normalized vector.\n *\n */\nexport function octDecodeFloat(value: number, result: Vector3): Vector3 {\n  assert(Number.isFinite(value));\n\n  const temp = value / 256.0;\n  const x = Math.floor(temp);\n  const y = (temp - x) * 256.0;\n\n  return octDecode(x, y, result);\n}\n\n/**\n * Encodes three normalized vectors into 6 SNORM values in the range of [0-255] following the 'oct' encoding and\n * packs those into two floating-point numbers.\n *\n * @param v1 A normalized vector to be compressed.\n * @param v2 A normalized vector to be compressed.\n * @param v3 A normalized vector to be compressed.\n * @param result The 'oct' encoded vectors packed into two floating-point numbers.\n * @returns The 'oct' encoded vectors packed into two floating-point numbers.\n *\n */\nexport function octPack(v1: Vector3, v2: Vector3, v3: Vector3, result: Vector2): Vector2 {\n  assert(v1);\n  assert(v2);\n  assert(v3);\n  assert(result);\n\n  const encoded1 = octEncodeFloat(v1);\n  const encoded2 = octEncodeFloat(v2);\n\n  const encoded3 = octEncode(v3, scratchEncodeVector2);\n  result.x = 65536.0 * encoded3.x + encoded1;\n  result.y = 65536.0 * encoded3.y + encoded2;\n  return result;\n}\n\n/**\n * Decodes three unit-length vectors in 'oct' encoding packed into a floating-point number to a normalized 3-component vector.\n *\n * @param packed The three oct-encoded unit length vectors stored as two floating-point number.\n * @param v1 One decoded and normalized vector.\n * @param v2 One decoded and normalized vector.\n * @param v3 One decoded and normalized vector.\n */\nexport function octUnpack(packed: Vector2, v1: Vector3, v2: Vector3, v3: Vector3): void {\n  let temp = packed.x / 65536.0;\n  const x = Math.floor(temp);\n  const encodedFloat1 = (temp - x) * 65536.0;\n\n  temp = packed.y / 65536.0;\n  const y = Math.floor(temp);\n  const encodedFloat2 = (temp - y) * 65536.0;\n\n  octDecodeFloat(encodedFloat1, v1);\n  octDecodeFloat(encodedFloat2, v2);\n  octDecode(x, y, v3);\n}\n\n/**\n * Pack texture coordinates into a single float. The texture coordinates will only preserve 12 bits of precision.\n *\n * @param textureCoordinates The texture coordinates to compress.  Both coordinates must be in the range 0.0-1.0.\n * @returns The packed texture coordinates.\n *\n */\nexport function compressTextureCoordinates(textureCoordinates: Vector2): number {\n  // Move x and y to the range 0-4095;\n  const x = (textureCoordinates.x * 4095.0) | 0;\n  const y = (textureCoordinates.y * 4095.0) | 0;\n  return 4096.0 * x + y;\n}\n\n/**\n * Decompresses texture coordinates that were packed into a single float.\n *\n * @param compressed The compressed texture coordinates.\n * @param result The decompressed texture coordinates.\n * @returns The modified result parameter.\n *\n */\nexport function decompressTextureCoordinates(compressed: number, result: Vector2): Vector2 {\n  const temp = compressed / 4096.0;\n  const xZeroTo4095 = Math.floor(temp);\n  result.x = xZeroTo4095 / 4095.0;\n  result.y = (compressed - xZeroTo4095 * 4096) / 4095;\n  return result;\n}\n\n/**\n * Decodes delta and ZigZag encoded vertices. This modifies the buffers in place.\n *\n * @param uBuffer The buffer view of u values.\n * @param vBuffer The buffer view of v values.\n * @param [heightBuffer] The buffer view of height values.\n *\n * @link https://github.com/AnalyticalGraphicsInc/quantized-mesh|quantized-mesh-1.0 terrain format\n */\nexport function zigZagDeltaDecode(\n  uBuffer: Uint16Array,\n  vBuffer: Uint16Array,\n  heightBuffer?: Uint16Array | number[]\n) {\n  assert(uBuffer);\n  assert(vBuffer);\n  assert(uBuffer.length === vBuffer.length);\n  if (heightBuffer) {\n    assert(uBuffer.length === heightBuffer.length);\n  }\n\n  function zigZagDecode(value: number) {\n    return (value >> 1) ^ -(value & 1);\n  }\n\n  let u = 0;\n  let v = 0;\n  let height = 0;\n\n  for (let i = 0; i < uBuffer.length; ++i) {\n    u += zigZagDecode(uBuffer[i]);\n    v += zigZagDecode(vBuffer[i]);\n\n    uBuffer[i] = u;\n    vBuffer[i] = v;\n\n    if (heightBuffer) {\n      height += zigZagDecode(heightBuffer[i]);\n      heightBuffer[i] = height;\n    }\n  }\n}\n","import {GLType} from '@loaders.gl/math'; // '@math.gl/geometry';\nimport {assert} from '@loaders.gl/loader-utils';\n\nconst COMPONENTS_PER_ATTRIBUTE = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\n// TODO - could just return typed array views...\n// prettier-ignore\nconst UNPACKER = {\n  SCALAR: (values, i) => values[i],\n  VEC2: (values, i) => [values[2 * i + 0], values[2 * i + 1]],\n  VEC3: (values, i) => [values[3 * i + 0], values[3 * i + 1], values[3 * i + 2]],\n  VEC4: (values, i) => [values[4 * i + 0], values[4 * i + 1], values[4 * i + 2], values[4 * i + 3]],\n  // TODO: check column major\n  MAT2: (values, i) => [\n    values[4 * i + 0], values[4 * i + 1],\n    values[4 * i + 2], values[4 * i + 3]\n  ],\n  MAT3: (values, i) => [\n    values[9 * i + 0], values[9 * i + 1], values[9 * i + 2],\n    values[9 * i + 3], values[9 * i + 4], values[9 * i + 5],\n    values[9 * i + 6], values[9 * i + 7], values[9 * i + 8]\n  ],\n  MAT4: (values, i) => [\n    values[16 * i + 0], values[16 * i + 1], values[16 * i + 2], values[16 * i + 3],\n    values[16 * i + 4], values[16 * i + 5], values[16 * i + 6], values[16 * i + 7],\n    values[16 * i + 8], values[16 * i + 9], values[16 * i + 10], values[16 * i + 11],\n    values[16 * i + 12], values[16 * i + 13], values[16 * i + 14], values[16 * i + 15]\n  ]\n};\n\nconst PACKER = {\n  SCALAR: (x, values, i) => {\n    values[i] = x;\n  },\n  VEC2: (x, values, i) => {\n    values[2 * i + 0] = x[0];\n    values[2 * i + 1] = x[1];\n  },\n  VEC3: (x, values, i) => {\n    values[3 * i + 0] = x[0];\n    values[3 * i + 1] = x[1];\n    values[3 * i + 2] = x[2];\n  },\n  VEC4: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  // TODO: check column major correctness\n  MAT2: (x, values, i) => {\n    values[4 * i + 0] = x[0];\n    values[4 * i + 1] = x[1];\n    values[4 * i + 2] = x[2];\n    values[4 * i + 3] = x[3];\n  },\n  MAT3: (x, values, i) => {\n    values[9 * i + 0] = x[0];\n    values[9 * i + 1] = x[1];\n    values[9 * i + 2] = x[2];\n    values[9 * i + 3] = x[3];\n    values[9 * i + 4] = x[4];\n    values[9 * i + 5] = x[5];\n    values[9 * i + 6] = x[6];\n    values[9 * i + 7] = x[7];\n    values[9 * i + 8] = x[8];\n    values[9 * i + 9] = x[9];\n  },\n  MAT4: (x, values, i) => {\n    values[16 * i + 0] = x[0];\n    values[16 * i + 1] = x[1];\n    values[16 * i + 2] = x[2];\n    values[16 * i + 3] = x[3];\n    values[16 * i + 4] = x[4];\n    values[16 * i + 5] = x[5];\n    values[16 * i + 6] = x[6];\n    values[16 * i + 7] = x[7];\n    values[16 * i + 8] = x[8];\n    values[16 * i + 9] = x[9];\n    values[16 * i + 10] = x[10];\n    values[16 * i + 11] = x[11];\n    values[16 * i + 12] = x[12];\n    values[16 * i + 13] = x[13];\n    values[16 * i + 14] = x[14];\n    values[16 * i + 15] = x[15];\n  }\n};\n\nexport function createTypedArrayFromAccessor(tile3DAccessor, buffer, byteOffset, length) {\n  const {componentType} = tile3DAccessor;\n  assert(tile3DAccessor.componentType);\n  const type = typeof componentType === 'string' ? GLType.fromName(componentType) : componentType;\n  const size = COMPONENTS_PER_ATTRIBUTE[tile3DAccessor.type];\n  const unpacker = UNPACKER[tile3DAccessor.type];\n  const packer = PACKER[tile3DAccessor.type];\n\n  byteOffset += tile3DAccessor.byteOffset;\n  const values = GLType.createTypedArray(type, buffer, byteOffset, size * length);\n\n  return {\n    values,\n    type,\n    size,\n    unpacker,\n    packer\n  };\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - Finish hierarchy suypport: this file is only half ported\n/* eslint-disable */\n// @ts-nocheck\nconst defined = (x) => x !== undefined;\n\nexport function initializeHierarchy(batchTable, jsonHeader, binaryBody) {\n  if (!jsonHeader) {\n    return null;\n  }\n\n  let hierarchy = batchTable.getExtension('3DTILES_batch_table_hierarchy');\n\n  const legacyHierarchy = jsonHeader.HIERARCHY;\n  if (legacyHierarchy) {\n    // eslint-disable-next-line\n    console.warn('3D Tile Parser: HIERARCHY is deprecated. Use 3DTILES_batch_table_hierarchy.');\n    jsonHeader.extensions = jsonHeader.extensions || {};\n    jsonHeader.extensions['3DTILES_batch_table_hierarchy'] = legacyHierarchy;\n    hierarchy = legacyHierarchy;\n  }\n\n  if (!hierarchy) {\n    return null;\n  }\n\n  return initializeHierarchyValues(hierarchy, binaryBody);\n}\n\n// eslint-disable-next-line max-statements\nfunction initializeHierarchyValues(hierarchyJson, binaryBody) {\n  let i;\n  let classId;\n  let binaryAccessor;\n\n  const instancesLength = hierarchyJson.instancesLength;\n  const classes = hierarchyJson.classes;\n  let classIds = hierarchyJson.classIds;\n  let parentCounts = hierarchyJson.parentCounts;\n  let parentIds = hierarchyJson.parentIds;\n  let parentIdsLength = instancesLength;\n\n  if (defined(classIds.byteOffset)) {\n    classIds.componentType = defaultValue(classIds.componentType, GL.UNSIGNED_SHORT);\n    classIds.type = AttributeType.SCALAR;\n    binaryAccessor = getBinaryAccessor(classIds);\n    classIds = binaryAccessor.createArrayBufferView(\n      binaryBody.buffer,\n      binaryBody.byteOffset + classIds.byteOffset,\n      instancesLength\n    );\n  }\n\n  let parentIndexes;\n  if (defined(parentCounts)) {\n    if (defined(parentCounts.byteOffset)) {\n      parentCounts.componentType = defaultValue(parentCounts.componentType, GL.UNSIGNED_SHORT);\n      parentCounts.type = AttributeType.SCALAR;\n      binaryAccessor = getBinaryAccessor(parentCounts);\n      parentCounts = binaryAccessor.createArrayBufferView(\n        binaryBody.buffer,\n        binaryBody.byteOffset + parentCounts.byteOffset,\n        instancesLength\n      );\n    }\n    parentIndexes = new Uint16Array(instancesLength);\n    parentIdsLength = 0;\n    for (i = 0; i < instancesLength; ++i) {\n      parentIndexes[i] = parentIdsLength;\n      parentIdsLength += parentCounts[i];\n    }\n  }\n\n  if (defined(parentIds) && defined(parentIds.byteOffset)) {\n    parentIds.componentType = defaultValue(parentIds.componentType, GL.UNSIGNED_SHORT);\n    parentIds.type = AttributeType.SCALAR;\n    binaryAccessor = getBinaryAccessor(parentIds);\n    parentIds = binaryAccessor.createArrayBufferView(\n      binaryBody.buffer,\n      binaryBody.byteOffset + parentIds.byteOffset,\n      parentIdsLength\n    );\n  }\n\n  const classesLength = classes.length;\n  for (i = 0; i < classesLength; ++i) {\n    const classInstancesLength = classes[i].length;\n    const properties = classes[i].instances;\n    const binaryProperties = getBinaryProperties(classInstancesLength, properties, binaryBody);\n    classes[i].instances = combine(binaryProperties, properties);\n  }\n\n  const classCounts = new Array(classesLength).fill(0);\n  const classIndexes = new Uint16Array(instancesLength);\n  for (i = 0; i < instancesLength; ++i) {\n    classId = classIds[i];\n    classIndexes[i] = classCounts[classId];\n    ++classCounts[classId];\n  }\n\n  const hierarchy = {\n    classes,\n    classIds,\n    classIndexes,\n    parentCounts,\n    parentIndexes,\n    parentIds\n  };\n\n  validateHierarchy(hierarchy);\n\n  return hierarchy;\n}\n\n// HELPER CODE\n\n// Traverse over the hierarchy and process each instance with the endConditionCallback.\n// When the endConditionCallback returns a value, the traversal stops and that value is returned.\nexport function traverseHierarchy(hierarchy, instanceIndex, endConditionCallback) {\n  if (!hierarchy) {\n    return;\n  }\n\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  if (parentIds) {\n    return endConditionCallback(hierarchy, instanceIndex);\n  }\n  if (parentCounts > 0) {\n    return traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback);\n  }\n  return traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback);\n}\n\n// eslint-disable-next-line max-statements\nfunction traverseHierarchyMultipleParents(hierarchy, instanceIndex, endConditionCallback) {\n  const classIds = hierarchy.classIds;\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  const parentIndexes = hierarchy.parentIndexes;\n  const instancesLength = classIds.length;\n\n  // Ignore instances that have already been visited. This occurs in diamond inheritance situations.\n  // Use a marker value to indicate that an instance has been visited, which increments with each run.\n  // This is more efficient than clearing the visited array every time.\n  const visited = scratchVisited;\n  visited.length = Math.max(visited.length, instancesLength);\n  const visitedMarker = ++marker;\n\n  const stack = scratchStack;\n  stack.length = 0;\n  stack.push(instanceIndex);\n\n  while (stack.length > 0) {\n    instanceIndex = stack.pop();\n    if (visited[instanceIndex] === visitedMarker) {\n      // This instance has already been visited, stop traversal\n      continue;\n    }\n    visited[instanceIndex] = visitedMarker;\n    const result = endConditionCallback(hierarchy, instanceIndex);\n    if (defined(result)) {\n      // The end condition was met, stop the traversal and return the result\n      return result;\n    }\n    const parentCount = parentCounts[instanceIndex];\n    const parentIndex = parentIndexes[instanceIndex];\n    for (let i = 0; i < parentCount; ++i) {\n      const parentId = parentIds[parentIndex + i];\n      // Stop the traversal when the instance has no parent (its parentId equals itself)\n      // else add the parent to the stack to continue the traversal.\n      if (parentId !== instanceIndex) {\n        stack.push(parentId);\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction traverseHierarchySingleParent(hierarchy, instanceIndex, endConditionCallback) {\n  let hasParent = true;\n  while (hasParent) {\n    const result = endConditionCallback(hierarchy, instanceIndex);\n    if (defined(result)) {\n      // The end condition was met, stop the traversal and return the result\n      return result;\n    }\n    const parentId = hierarchy.parentIds[instanceIndex];\n    hasParent = parentId !== instanceIndex;\n    instanceIndex = parentId;\n  }\n  throw new Error('traverseHierarchySingleParent');\n}\n\n// DEBUG CODE\n\nfunction validateHierarchy(hierarchy) {\n  const scratchValidateStack = [];\n\n  const classIds = hierarchy.classIds;\n  const instancesLength = classIds.length;\n\n  for (let i = 0; i < instancesLength; ++i) {\n    validateInstance(hierarchy, i, stack);\n  }\n}\n\nfunction validateInstance(hierarchy, instanceIndex, stack) {\n  const parentCounts = hierarchy.parentCounts;\n  const parentIds = hierarchy.parentIds;\n  const parentIndexes = hierarchy.parentIndexes;\n  const classIds = hierarchy.classIds;\n  const instancesLength = classIds.length;\n\n  if (!defined(parentIds)) {\n    // No need to validate if there are no parents\n    return;\n  }\n\n  assert(\n    instanceIndex < instancesLength,\n    `Parent index ${instanceIndex} exceeds the total number of instances: ${instancesLength}`\n  );\n  assert(\n    stack.indexOf(instanceIndex) === -1,\n    'Circular dependency detected in the batch table hierarchy.'\n  );\n\n  stack.push(instanceIndex);\n  const parentCount = defined(parentCounts) ? parentCounts[instanceIndex] : 1;\n  const parentIndex = defined(parentCounts) ? parentIndexes[instanceIndex] : instanceIndex;\n  for (let i = 0; i < parentCount; ++i) {\n    const parentId = parentIds[parentIndex + i];\n    // Stop the traversal when the instance has no parent (its parentId equals itself), else continue the traversal.\n    if (parentId !== instanceIndex) {\n      validateInstance(hierarchy, parentId, stack);\n    }\n  }\n  stack.pop(instanceIndex);\n}\n","import {decodeRGB565, GL} from '@loaders.gl/math';\n\n/* eslint-disable complexity*/\nexport function normalize3DTileColorAttribute(tile, colors, batchTable) {\n  // no colors defined\n  if (!colors && (!tile || !tile.batchIds || !batchTable)) {\n    return null;\n  }\n\n  const {batchIds, isRGB565, pointCount} = tile;\n  // Batch table, look up colors in table\n  if (batchIds && batchTable) {\n    const colorArray = new Uint8ClampedArray(pointCount * 3);\n    for (let i = 0; i < pointCount; i++) {\n      const batchId = batchIds[i];\n      // TODO figure out what is `dimensions` used for\n      const dimensions = batchTable.getProperty(batchId, 'dimensions');\n      const color = dimensions.map((d) => d * 255);\n      colorArray[i * 3] = color[0];\n      colorArray[i * 3 + 1] = color[1];\n      colorArray[i * 3 + 2] = color[2];\n    }\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colorArray,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // RGB565 case, convert to RGB\n  if (isRGB565) {\n    const colorArray = new Uint8ClampedArray(pointCount * 3);\n    for (let i = 0; i < pointCount; i++) {\n      const color = decodeRGB565(colors[i]);\n      colorArray[i * 3] = color[0];\n      colorArray[i * 3 + 1] = color[1];\n      colorArray[i * 3 + 2] = color[2];\n    }\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colorArray,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // RGB case (tile.isTranslucent)\n  if (colors && colors.length === pointCount * 3) {\n    return {\n      type: GL.UNSIGNED_BYTE,\n      value: colors,\n      size: 3,\n      normalized: true\n    };\n  }\n\n  // DEFAULT: RGBA case\n  return {\n    type: GL.UNSIGNED_BYTE,\n    value: colors,\n    size: 4,\n    normalized: true\n  };\n}\n/* eslint-enable complexity*/\n","import {Vector3} from '@math.gl/core';\nimport {GL, octDecode} from '@loaders.gl/math';\n\nconst scratchNormal = new Vector3();\n\nexport function normalize3DTileNormalAttribute(tile, normals) {\n  if (!normals) {\n    return null;\n  }\n\n  if (tile.isOctEncoded16P) {\n    const decodedArray = new Float32Array(tile.pointsLength * 3);\n    for (let i = 0; i < tile.pointsLength; i++) {\n      octDecode(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n      // @ts-ignore\n      scratchNormal.toArray(decodedArray, i * 3);\n    }\n\n    return {\n      type: GL.FLOAT,\n      size: 2,\n      value: decodedArray\n    };\n  }\n\n  return {\n    type: GL.FLOAT,\n    size: 2,\n    value: normals\n  };\n}\n","import {Vector3} from '@math.gl/core';\nimport {GL} from '@loaders.gl/math';\n\n// Prepare attribute for positions\nexport function normalize3DTilePositionAttribute(tile, positions, options) {\n  if (!tile.isQuantized) {\n    return positions;\n  }\n\n  // For quantized posititions, either expand to Float32Array or return custom accessor\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/TileFormats/Instanced3DModel/README.md#quantized-positions\n\n  // Optionally decodes quantized positions on GPU, for simpler renderers that don't accept normalized attributes\n  if (options['3d-tiles'] && options['3d-tiles'].decodeQuantizedPositions) {\n    tile.isQuantized = false;\n    return decodeQuantizedPositions(tile, positions);\n  }\n\n  // Default: Use normalized shorts directly, no copying/processing.\n  // NOTE: The \"missing\" offset/scaling operations are automatically added to modelMatrix if `tile.isQuantized === true`\n  return {\n    type: GL.UNSIGNED_SHORT,\n    value: positions,\n    size: 3,\n    normalized: true\n  };\n}\n\n// Pre-scale quantized positions on CPU\nfunction decodeQuantizedPositions(tile, positions) {\n  const scratchPosition = new Vector3();\n  const decodedArray = new Float32Array(tile.pointCount * 3);\n\n  for (let i = 0; i < tile.pointCount; i++) {\n    // POSITION = POSITION_QUANTIZED / 65535.0 * QUANTIZED_VOLUME_SCALE + QUANTIZED_VOLUME_OFFSET\n    scratchPosition\n      .set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2])\n      .scale(1 / tile.quantizedRange)\n      .multiply(tile.quantizedVolumeScale)\n      .add(tile.quantizedVolumeOffset)\n      .toArray(decodedArray, i * 3);\n  }\n\n  return decodedArray;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  const extensions = tile?.gltf?.extensions;\n  if (extensions && extensions.CESIUM_RTC) {\n    tile.rtcCenter = extensions.CESIUM_RTC.center;\n  }\n\n  return byteOffset;\n}\n\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  return byteOffset;\n}\n","export type {GLB} from './lib/types/glb-types';\nexport type {\n  GLTF,\n  GLTFAccessor,\n  GLTFBuffer,\n  GLTFBufferView,\n  GLTFMeshPrimitive,\n  GLTFMesh,\n  GLTFNode,\n  GLTFMaterial,\n  GLTFSampler,\n  GLTFScene,\n  GLTFSkin,\n  GLTFTexture,\n  GLTFImage\n} from './lib/types/gltf-types';\n\n// Constants\nexport {KHR_DRACO_MESH_COMPRESSION} from './lib/gltf-utils/gltf-constants';\n\n// glTF loader/writer definition objects\nexport {GLTFLoader} from './gltf-loader';\nexport {GLTFWriter} from './gltf-writer';\n\n// GLB Loader & Writer (for custom formats that want to leverage the GLB binary \"envelope\")\nexport {GLBLoader} from './glb-loader';\nexport {GLBWriter} from './glb-writer';\n\n// glTF Data Access Helper Class\nexport {default as GLTFScenegraph} from './lib/api/gltf-scenegraph';\nexport {postProcessGLTF} from './lib/api/post-process-gltf';\nexport type {Mesh} from './lib/types/gltf-json-schema';\nexport type {GLTFObject} from './lib/types/gltf-types';\n","import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {DracoLoaderOptions} from '@loaders.gl/draco';\n// import type {ImageLoaderOptions} from '@loaders.gl/images';\n// import type {TextureLoaderOptions} from '@loaders.gl/textures';\nimport type {GLTFParseOptions} from './lib/parsers/parse-gltf';\nimport {VERSION} from './lib/utils/version';\nimport {parseGLTF} from './lib/parsers/parse-gltf';\nimport {GLBLoaderOptions} from './glb-loader';\n\n/**\n * GLTF loader options\n */\nexport type GLTFLoaderOptions = LoaderOptions &\n  GLBLoaderOptions &\n  DracoLoaderOptions & {\n    gltf?: GLTFParseOptions;\n  };\n\n/**\n * GLTF loader\n */\nexport const GLTFLoader: LoaderWithParser = {\n  name: 'glTF',\n  id: 'gltf',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['gltf', 'glb'],\n  mimeTypes: ['model/gltf+json', 'model/gltf-binary'],\n\n  text: true,\n  binary: true,\n  tests: ['glTF'],\n  parse,\n\n  options: {\n    gltf: {\n      normalize: true, // Normalize glTF v1 to glTF v2 format (not yet stable)\n      loadBuffers: true, // Fetch any linked .BIN buffers, decode base64\n      loadImages: true, // Create image objects\n      decompressMeshes: true, // Decompress Draco encoded meshes\n      postProcess: true // Postprocess glTF and return json structure directly\n    },\n\n    // common?\n    log: console // eslint-disable-line\n  },\n  deprecatedOptions: {\n    fetchImages: 'gltf.loadImages',\n    createImages: 'gltf.loadImages',\n    decompress: 'gltf.decompressMeshes',\n    postProcess: 'gltf.postProcess',\n    gltf: {\n      decompress: 'gltf.decompressMeshes'\n    }\n  }\n};\n\nexport async function parse(arrayBuffer, options: GLTFLoaderOptions = {}, context) {\n  // Apps can call the parse method directly, we so apply default options here\n  options = {...GLTFLoader.options, ...options};\n  // @ts-ignore\n  options.gltf = {...GLTFLoader.options.gltf, ...options.gltf};\n\n  const {byteOffset = 0} = options;\n  const gltf = {};\n  return await parseGLTF(gltf, arrayBuffer, byteOffset, options, context);\n}\n","/* eslint-disable camelcase, max-statements, no-restricted-globals */\nimport type {LoaderContext} from '@loaders.gl/loader-utils';\nimport type {GLB} from '../types/glb-types';\nimport type {GLBParseOptions} from './parse-glb';\n\nimport {ImageLoader} from '@loaders.gl/images';\nimport {parseJSON, sliceArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\nimport {resolveUrl} from '../gltf-utils/resolve-url';\nimport {getTypedArrayForBufferView} from '../gltf-utils/get-typed-array';\nimport {decodeExtensions} from '../extensions/gltf-extensions';\nimport {normalizeGLTFV1} from '../api/normalize-gltf-v1';\nimport {postProcessGLTF} from '../api/post-process-gltf';\nimport parseGLBSync, {isGLB} from './parse-glb';\n\nexport type GLTFParseOptions = {\n  excludeExtensions?: string[];\n  decompressMeshes?: boolean;\n  normalize?: boolean;\n  loadBuffers?: boolean;\n  loadImages?: boolean;\n  postProcess?: boolean;\n};\n\n// export type GLTFOptions = {\n//   gltf?: GLTFParseOptions;\n// };\n\nexport function isGLTF(arrayBuffer, options?): boolean {\n  const byteOffset = 0;\n  return isGLB(arrayBuffer, byteOffset, options);\n}\n\nexport async function parseGLTF(\n  gltf,\n  arrayBufferOrString,\n  byteOffset = 0,\n  options: {\n    gltf?: GLTFParseOptions;\n    glb?: GLBParseOptions;\n  },\n  context: LoaderContext\n) {\n  parseGLTFContainerSync(gltf, arrayBufferOrString, byteOffset, options);\n\n  normalizeGLTFV1(gltf, {normalize: options?.gltf?.normalize});\n\n  const promises: Promise<any>[] = [];\n\n  // Load linked buffers asynchronously and decodes base64 buffers in parallel\n  if (options?.gltf?.loadBuffers && gltf.json.buffers) {\n    await loadBuffers(gltf, options, context);\n  }\n\n  if (options?.gltf?.loadImages) {\n    const promise = loadImages(gltf, options, context);\n    promises.push(promise);\n  }\n\n  const promise = decodeExtensions(gltf, options, context);\n  promises.push(promise);\n\n  // Parallelize image loading and buffer loading/extension decoding\n  await Promise.all(promises);\n\n  // Post processing resolves indices to objects, buffers\n  return options?.gltf?.postProcess ? postProcessGLTF(gltf, options) : gltf;\n}\n\n// `data` - can be ArrayBuffer (GLB), ArrayBuffer (Binary JSON), String (JSON), or Object (parsed JSON)\nfunction parseGLTFContainerSync(gltf, data, byteOffset, options) {\n  // Initialize gltf container\n  if (options.uri) {\n    gltf.baseUri = options.uri;\n  }\n\n  // If data is binary and starting with magic bytes, assume binary JSON text, convert to string\n  if (data instanceof ArrayBuffer && !isGLB(data, byteOffset, options)) {\n    const textDecoder = new TextDecoder();\n    data = textDecoder.decode(data);\n  }\n\n  if (typeof data === 'string') {\n    // If string, try to parse as JSON\n    gltf.json = parseJSON(data);\n  } else if (data instanceof ArrayBuffer) {\n    // If still ArrayBuffer, parse as GLB container\n    const glb: GLB = {} as GLB;\n    byteOffset = parseGLBSync(glb, data, byteOffset, options.glb);\n\n    assert(glb.type === 'glTF', `Invalid GLB magic string ${glb.type}`);\n\n    gltf._glb = glb;\n    gltf.json = glb.json;\n  } else {\n    assert(false, 'GLTF: must be ArrayBuffer or string');\n  }\n\n  // Populate buffers\n  // Create an external buffers array to hold binary data\n  const buffers = gltf.json.buffers || [];\n  gltf.buffers = new Array(buffers.length).fill(null);\n\n  // Populates JSON and some bin chunk info\n  if (gltf._glb && gltf._glb.header.hasBinChunk) {\n    const {binChunks} = gltf._glb;\n    gltf.buffers[0] = {\n      arrayBuffer: binChunks[0].arrayBuffer,\n      byteOffset: binChunks[0].byteOffset,\n      byteLength: binChunks[0].byteLength\n    };\n\n    // TODO - this modifies JSON and is a post processing thing\n    // gltf.json.buffers[0].data = gltf.buffers[0].arrayBuffer;\n    // gltf.json.buffers[0].byteOffset = gltf.buffers[0].byteOffset;\n  }\n\n  // Populate images\n  const images = gltf.json.images || [];\n  gltf.images = new Array(images.length).fill({});\n}\n\n// Asynchronously fetch and parse buffers, store in buffers array outside of json\nasync function loadBuffers(gltf, options, context: LoaderContext) {\n  for (let i = 0; i < gltf.json.buffers.length; ++i) {\n    const buffer = gltf.json.buffers[i];\n    if (buffer.uri) {\n      const {fetch} = context;\n      assert(fetch);\n\n      const uri = resolveUrl(buffer.uri, options);\n      const response = await context?.fetch?.(uri);\n      const arrayBuffer = await response?.arrayBuffer?.();\n\n      gltf.buffers[i] = {\n        arrayBuffer,\n        byteOffset: 0,\n        byteLength: arrayBuffer.byteLength\n      };\n\n      delete buffer.uri;\n    }\n  }\n}\n\nasync function loadImages(gltf, options, context: LoaderContext) {\n  const images = gltf.json.images || [];\n\n  const promises: Promise<any>[] = [];\n  for (let i = 0; i < images.length; ++i) {\n    promises.push(loadImage(gltf, images[i], i, options, context));\n  }\n\n  return await Promise.all(promises);\n}\n\n// Asynchronously fetches and parses one image, store in images array outside of json\nasync function loadImage(gltf, image, index: number, options, context: LoaderContext) {\n  const {fetch, parse} = context;\n\n  let arrayBuffer;\n\n  if (image.uri) {\n    const uri = resolveUrl(image.uri, options);\n    const response = await fetch(uri);\n    arrayBuffer = await response.arrayBuffer();\n  }\n\n  if (Number.isFinite(image.bufferView)) {\n    const array = getTypedArrayForBufferView(gltf.json, gltf.buffers, image.bufferView);\n    arrayBuffer = sliceArrayBuffer(array.buffer, array.byteOffset, array.byteLength);\n  }\n\n  assert(arrayBuffer, 'glTF image has no data');\n\n  // Call `parse`\n  const parsedImage = await parse(arrayBuffer, ImageLoader, {}, context);\n  // TODO making sure ImageLoader is overridable by using array of loaders\n  // const parsedImage = await parse(arrayBuffer, [ImageLoader]);\n\n  gltf.images[index] = parsedImage;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseImage from './lib/parsers/parse-image';\nimport {getBinaryImageMetadata} from './lib/category-api/binary-image-api';\n\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg'];\nconst MIME_TYPES = [\n  'image/png',\n  'image/jpeg',\n  'image/gif',\n  'image/webp',\n  'image/bmp',\n  'image/vnd.microsoft.icon',\n  'image/svg+xml'\n];\n\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n  id: 'image',\n  module: 'images',\n  name: 'Images',\n  version: VERSION,\n  mimeTypes: MIME_TYPES,\n  extensions: EXTENSIONS,\n  parse: parseImage,\n  // TODO: byteOffset, byteLength;\n  tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n  options: {\n    image: {\n      type: 'auto',\n      decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n  }\n};\n\nexport const _typecheckImageLoader: LoaderWithParser = ImageLoader;\n","import {isSVG, getBlob} from './svg-utils';\nimport parseToImage from './parse-to-image';\n\nconst EMPTY_OBJECT = {};\n\nlet imagebitmapOptionsSupported = true;\n\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport default async function parseToImageBitmap(arrayBuffer, options, url) {\n  let blob;\n\n  // Cannot parse SVG directly to ImageBitmap, parse to Image first\n  if (isSVG(url)) {\n    // Note: this only works on main thread\n    const image = await parseToImage(arrayBuffer, options, url);\n    blob = image;\n  } else {\n    // Create blob from the array buffer\n    blob = getBlob(arrayBuffer, url);\n  }\n\n  const imagebitmapOptions = options && options.imagebitmap;\n\n  return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n  if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n    imagebitmapOptions = null;\n  }\n\n  if (imagebitmapOptions) {\n    try {\n      // @ts-ignore Options\n      return await createImageBitmap(blob, imagebitmapOptions);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n      imagebitmapOptionsSupported = false;\n    }\n  }\n\n  return await createImageBitmap(blob);\n}\n\nfunction isEmptyObject(object) {\n  for (const key in object || EMPTY_OBJECT) {\n    return false;\n  }\n  return true;\n}\n","import {global} from '../utils/globals';\nimport {assert} from '../utils/assert';\nimport {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Use polyfills if installed to p[arsed image using get-pixels\nexport default function parseToNodeImage(arrayBuffer, options) {\n  const {mimeType} = getBinaryImageMetadata(arrayBuffer) || {};\n\n  // @ts-ignore\n  const {_parseImageNode} = global;\n  assert(_parseImageNode); // '@loaders.gl/polyfills not installed'\n\n  return _parseImageNode(arrayBuffer, mimeType, options);\n}\n","// import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {encodeImage} from './lib/encoders/encode-image';\n\nexport const ImageWriter = {\n  name: 'Images',\n  id: 'image',\n  module: 'images',\n  version: VERSION,\n  extensions: ['jpeg'],\n  options: {\n    image: {\n      mimeType: 'image/png',\n      jpegQuality: null\n    }\n  },\n  encode: encodeImage\n};\n","// Image loading/saving for browser and Node.js\nimport {global} from '../utils/globals';\nimport {getImageSize} from '../category-api/parsed-image-api';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_encodeImageNode} = global;\n\n/**\n * Returns data bytes representing a compressed image in PNG or JPG format,\n * This data can be saved using file system (f) methods or used in a request.\n * @param image - ImageBitmap Image or Canvas\n * @param options\n * param opt.type='png' - png, jpg or image/png, image/jpg are valid\n * param mimeType= - Whether to include a data URI header\n */\nexport async function encodeImage(\n  image: any,\n  options?: {[key: string]: any}\n): Promise<ArrayBuffer> {\n  options = options || {};\n  options.image = options.image || ({} as {[key: string]: any});\n\n  return _encodeImageNode\n    ? _encodeImageNode(image, {type: options.image.mimeType})\n    : encodeImageInBrowser(image, options);\n}\n\n// In case we get exceptions from canvas.toBlob(resolve, type, quality)\nlet qualityParamSupported = true;\n\n/**\n *\n * @param image\n * @param options\n * @note Based on canvas.toBlob\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob\n */\nasync function encodeImageInBrowser(image, options) {\n  const {mimeType, jpegQuality} = options.image;\n\n  const {width, height} = getImageSize(image);\n\n  // create a canvas and resize it to the size of our image\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n\n  drawImageToCanvas(image, canvas);\n\n  // The actual encoding is done asynchronously with `canvas.toBlob()`\n  const blob = await new Promise<Blob | null>((resolve) => {\n    // get it back as a Blob\n    if (jpegQuality && qualityParamSupported) {\n      try {\n        canvas.toBlob(resolve, mimeType, jpegQuality);\n        return;\n      } catch (error) {\n        qualityParamSupported = false;\n      }\n    }\n    canvas.toBlob(resolve, mimeType);\n  });\n\n  if (!blob) {\n    throw new Error('image encoding failed');\n  }\n\n  return await blob.arrayBuffer();\n}\n\nfunction drawImageToCanvas(image, canvas, x = 0, y = 0) {\n  // Try optimized path for ImageBitmaps via bitmaprenderer context\n  if (x === 0 && y === 0 && typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    const context = canvas.getContext('bitmaprenderer');\n    if (context) {\n      // transfer the ImageBitmap to it\n      context.transferFromImageBitmap(image);\n      return canvas;\n    }\n  }\n\n  // Available on most platforms, except IE11 and Andriod WebViews...\n  const context = canvas.getContext('2d');\n  if (image.data) {\n    // ImageData constructor expects clamped array even though getImageData does not return a clamped array...\n    const clampedArray = new Uint8ClampedArray(image.data);\n    const imageData = new ImageData(clampedArray, image.width, image.height);\n    context.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n\n  // Fall back to generic image/image bitmap rendering path\n  context.drawImage(image, 0, 0);\n  return canvas;\n}\n","import {assert} from '../utils/assert';\nimport parseImage from '../parsers/parse-image';\nimport {getImageSize} from '../category-api/parsed-image-api';\nimport {generateUrl} from './generate-url';\nimport {deepLoad, shallowLoad} from './deep-load';\n\nexport async function loadImage(getUrl, options = {}) {\n  const imageUrls = await getImageUrls(getUrl, options);\n  return await deepLoad(imageUrls, parseImage, options);\n}\n\nexport async function getImageUrls(getUrl, options, urlOptions = {}) {\n  const mipLevels = (options && options.image && options.image.mipLevels) || 0;\n  return mipLevels !== 0\n    ? await getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions)\n    : generateUrl(getUrl, options, urlOptions);\n}\n\nasync function getMipmappedImageUrls(getUrl, mipLevels, options, urlOptions) {\n  const urls: string[] = [];\n\n  // If no mip levels supplied, we need to load the level 0 image and calculate based on size\n  if (mipLevels === 'auto') {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: 0});\n    const image = await shallowLoad(url, parseImage, options);\n\n    const {width, height} = getImageSize(image);\n    mipLevels = getMipLevels({width, height});\n\n    // TODO - push image and make `deepLoad` pass through non-url values, avoid loading twice?\n    urls.push(url);\n  }\n\n  // We now know how many mipLevels we need, remaining image urls can now be constructed\n  assert(mipLevels > 0);\n\n  for (let mipLevel = urls.length; mipLevel < mipLevels; ++mipLevel) {\n    const url = generateUrl(getUrl, options, {...urlOptions, lod: mipLevel});\n    urls.push(url);\n  }\n\n  return urls;\n}\n\n// Calculates number of mipmaps based on texture size (log2)\nexport function getMipLevels({width, height}) {\n  return 1 + Math.floor(Math.log2(Math.max(width, height)));\n}\n","import {resolvePath} from '@loaders.gl/loader-utils';\nimport {assert} from '../utils/assert';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n","import {asyncDeepMap} from './async-deep-map';\n\nexport async function deepLoad(urlTree, load, options) {\n  return await asyncDeepMap(urlTree, (url) => shallowLoad(url, load, options));\n}\n\nexport async function shallowLoad(url, load, options) {\n  // console.error('loading', url);\n  const response = await fetch(url, options.fetch);\n  const arrayBuffer = await response.arrayBuffer();\n  return await load(arrayBuffer, options);\n}\n","/*\nAsynchronously maps a deep structure of values (e.g. objects and arrays of urls).\n\nE.g. a mipmapped cubemap\n{\n  [CUBE_FACE_FRONT]: [\n    \"image-front-0.jpg\",\n    \"image-front-1.jpg\",\n    \"image-front-2.jpg\",\n  ],\n  [CUBE_MAP_BACK]: [\n    ...\n  ]\n}\n*/\n\nconst isObject = (value) => value && typeof value === 'object';\n\n// Loads a deep structure of urls (objects and arrays of urls)\n// Returns an object with six key-value pairs containing the images (or image mip arrays)\n// for each cube face\nexport async function asyncDeepMap(tree, func, options = {}) {\n  return await mapSubtree(tree, func, options);\n}\n\nexport async function mapSubtree(object, func, options) {\n  if (Array.isArray(object)) {\n    return await mapArray(object, func, options);\n  }\n\n  if (isObject(object)) {\n    return await mapObject(object, func, options);\n  }\n\n  // TODO - ignore non-urls, non-arraybuffers?\n  const url = object;\n  return await func(url, options);\n}\n\n// HELPERS\n\nasync function mapObject(object, func, options) {\n  const promises: Promise<any>[] = [];\n  const values = {};\n\n  for (const key in object) {\n    const url = object[key];\n    const promise = mapSubtree(url, func, options).then((value) => {\n      values[key] = value;\n    });\n    promises.push(promise);\n  }\n\n  await Promise.all(promises);\n\n  return values;\n}\n\nasync function mapArray(urlArray, func, options = {}) {\n  const promises = urlArray.map((url) => mapSubtree(url, func, options));\n  return await Promise.all(promises);\n}\n","// Resolves a relative url against a baseUrl\n// If url is absolute, return it unchanged\nexport function resolveUrl(url, options) {\n  // TODO: Use better logic to handle all protocols plus not delay on data\n  const absolute = url.startsWith('data:') || url.startsWith('http:') || url.startsWith('https:');\n  if (absolute) {\n    return url;\n  }\n  const baseUrl = options.baseUri || options.uri;\n  if (!baseUrl) {\n    throw new Error(`'baseUri' must be provided to resolve relative url ${url}`);\n  }\n  return baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1) + url;\n}\n","// TODO - GLTFScenegraph should use these\nimport {assert} from '../utils/assert';\n\n// accepts buffer view index or buffer view object\n// returns a `Uint8Array`\nexport function getTypedArrayForBufferView(json, buffers, bufferViewIndex) {\n  const bufferView = json.bufferViews[bufferViewIndex];\n  assert(bufferView);\n\n  // Get hold of the arrayBuffer\n  const bufferIndex = bufferView.buffer;\n  const binChunk = buffers[bufferIndex];\n  assert(binChunk);\n\n  const byteOffset = (bufferView.byteOffset || 0) + binChunk.byteOffset;\n  return new Uint8Array(binChunk.arrayBuffer, byteOffset, bufferView.byteLength);\n}\n\n// accepts accessor index or accessor object\n// returns a `Uint8Array`\nexport function getTypedArrayForImageData(json, buffers, imageIndex) {\n  const image = json.images[imageIndex];\n  const bufferViewIndex = json.bufferViews[image.bufferView];\n  return getTypedArrayForBufferView(json, buffers, bufferViewIndex);\n}\n\n/*\n// accepts accessor index or accessor object\n// returns a typed array with type that matches the types\nexport function getTypedArrayForAccessor(accessor) {\n  accessor = this.getAccessor(accessor);\n  const bufferView = this.getBufferView(accessor.bufferView);\n  const buffer = this.getBuffer(bufferView.buffer);\n  const arrayBuffer = buffer.data;\n\n  // Create a new typed array as a view into the combined buffer\n  const {ArrayType, length} = getAccessorArrayTypeAndLength(accessor, bufferView);\n  const byteOffset = bufferView.byteOffset + accessor.byteOffset;\n  return new ArrayType(arrayBuffer, byteOffset, length);\n}\n*/\n","/* eslint-disable camelcase */\nimport {GLTF} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\n// GLTF 1.0 extensions (read only)\n// import * as KHR_binary_gltf from './KHR_draco_mesh_compression';\n\n// GLTF 2.0 extensions (read/write)\nimport * as KHR_draco_mesh_compression from './KHR_draco_mesh_compression';\nimport * as KHR_materials_unlit from './KHR_materials_unlit';\nimport * as KHR_lights_punctual from './KHR_lights_punctual';\nimport * as KHR_techniques_webgl from './KHR_techniques_webgl';\n\ntype GLTFExtensionPlugin = {\n  decode: (gltfData: {json: GLTF}, options: GLTFLoaderOptions, context) => Promise<void>;\n\n  encode: (gltfData: {json: GLTF}, options: GLTFLoaderOptions) => void;\n};\n\n/**\n * List of extensions processed by the GLTFLoader\n * Note that may extensions can only be handled on the rendering stage and are left out here\n * These are just extensions that can be handled fully or partially during loading.\n */\nexport const EXTENSIONS: {[extensionName: string]: GLTFExtensionPlugin} = {\n  // 1.0\n  // KHR_binary_gltf is handled separately - must be processed before other parsing starts\n  // KHR_binary_gltf,\n\n  // 2.0\n  KHR_draco_mesh_compression,\n  KHR_materials_unlit,\n  KHR_lights_punctual,\n  KHR_techniques_webgl\n};\n\nexport async function decodeExtensions(gltf, options: GLTFLoaderOptions = {}, context?) {\n  for (const extensionName in EXTENSIONS) {\n    const excludes = options?.gltf?.excludeExtensions || {};\n    const exclude = extensionName in excludes && !excludes[extensionName];\n    if (!exclude) {\n      const extension = EXTENSIONS[extensionName];\n      // Note: We decode async extensions sequentially, this might not be necessary\n      // Currently we only have Draco, but when we add Basis we may revisit\n      await extension.decode(gltf, options, context);\n    }\n  }\n}\n","// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\n\n/* eslint-disable camelcase */\nimport type {GLTF, GLTFAccessor, GLTFMeshPrimitive} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport type {LoaderContext} from '@loaders.gl/loader-utils';\nimport {DracoLoader} from '@loaders.gl/draco';\nimport {DracoLoaderOptions, DracoMeshData} from '@loaders.gl/draco';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\nimport {default as Scenegraph} from '../api/gltf-scenegraph';\nimport {KHR_DRACO_MESH_COMPRESSION} from '../gltf-utils/gltf-constants';\nimport {getGLTFAccessors, getGLTFAccessor} from '../gltf-utils/gltf-attribute-utils';\n\n// Note: We have a \"soft dependency\" on DracoWriter to avoid bundling it when not needed\nexport async function decode(\n  gltfData: {json: GLTF},\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n): Promise<void> {\n  if (!options?.gltf?.decompressMeshes) {\n    return;\n  }\n\n  const scenegraph = new Scenegraph(gltfData);\n  const promises: Promise<void>[] = [];\n  for (const primitive of makeMeshPrimitiveIterator(scenegraph)) {\n    if (scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION)) {\n      promises.push(decompressPrimitive(scenegraph, primitive, options, context));\n    }\n  }\n\n  // Decompress meshes in parallel\n  await Promise.all(promises);\n\n  // We have now decompressed all primitives, so remove the top-level extensions\n  scenegraph.removeExtension(KHR_DRACO_MESH_COMPRESSION);\n}\n\nexport function encode(gltfData, options: GLTFLoaderOptions = {}): void {\n  const scenegraph = new Scenegraph(gltfData);\n\n  for (const mesh of scenegraph.json.meshes || []) {\n    // eslint-disable-next-line camelcase\n    // @ts-ignore\n    compressMesh(mesh, options);\n    // NOTE: Only add the extension if something was actually compressed\n    scenegraph.addRequiredExtension(KHR_DRACO_MESH_COMPRESSION);\n  }\n}\n\n// DECODE\n\n// Unpacks one mesh primitive and removes the extension from the primitive\n// DracoDecoder needs to be imported and registered by app\n// Returns: Promise that resolves when all pending draco decoder jobs for this mesh complete\n\n// TODO - Implement fallback behavior per KHR_DRACO_MESH_COMPRESSION spec\n\nasync function decompressPrimitive(\n  scenegraph: Scenegraph,\n  primitive: GLTFMeshPrimitive,\n  options: GLTFLoaderOptions,\n  context: LoaderContext\n): Promise<void> {\n  const dracoExtension = scenegraph.getObjectExtension(primitive, KHR_DRACO_MESH_COMPRESSION);\n  if (!dracoExtension) {\n    return;\n  }\n\n  const buffer = scenegraph.getTypedArrayForBufferView(dracoExtension.bufferView);\n  // TODO - parse does not yet deal well with byte offsets embedded in typed arrays. Copy buffer\n  // TODO - remove when `parse` is fixed to handle `byteOffset`s\n  const bufferCopy = sliceArrayBuffer(buffer.buffer, buffer.byteOffset); // , buffer.byteLength);\n\n  const {parse} = context;\n  const dracoOptions: DracoLoaderOptions = {...options};\n\n  // TODO - remove hack: The entire tileset might be included, too expensive to serialize\n  delete dracoOptions['3d-tiles'];\n  const decodedData = (await parse(\n    bufferCopy,\n    DracoLoader,\n    dracoOptions,\n    context\n  )) as DracoMeshData;\n\n  const decodedAttributes: {[key: string]: GLTFAccessor} = getGLTFAccessors(decodedData.attributes);\n\n  // Restore min/max values\n  for (const [attributeName, decodedAttribute] of Object.entries(decodedAttributes)) {\n    if (attributeName in primitive.attributes) {\n      const accessorIndex: number = primitive.attributes[attributeName];\n      const accessor = scenegraph.getAccessor(accessorIndex);\n      if (accessor?.min && accessor?.max) {\n        decodedAttribute.min = accessor.min;\n        decodedAttribute.max = accessor.max;\n      }\n    }\n  }\n\n  // @ts-ignore\n  primitive.attributes = decodedAttributes;\n  if (decodedData.indices) {\n    // @ts-ignore\n    primitive.indices = getGLTFAccessor(decodedData.indices);\n  }\n\n  // Extension has been processed, delete it\n  // delete primitive.extensions[KHR_DRACO_MESH_COMPRESSION];\n\n  checkPrimitive(primitive);\n}\n\n// ENCODE\n\n// eslint-disable-next-line max-len\n// Only TRIANGLES: 0x0004 and TRIANGLE_STRIP: 0x0005 are supported\nfunction compressMesh(attributes, indices, mode: number = 4, options, context: LoaderContext) {\n  if (!options.DracoWriter) {\n    throw new Error('options.gltf.DracoWriter not provided');\n  }\n\n  // TODO - use DracoWriter using encode w/ registered DracoWriter...\n  const compressedData = options.DracoWriter.encodeSync({attributes});\n\n  // Draco compression may change the order and number of vertices in a mesh.\n  // To satisfy the requirement that accessors properties be correct for both\n  // compressed and uncompressed data, generators should create uncompressed\n  // attributes and indices using data that has been decompressed from the Draco buffer,\n  // rather than the original source data.\n  // @ts-ignore TODO this needs to be fixed\n  const decodedData = context?.parseSync?.({attributes});\n  const fauxAccessors = options._addFauxAttributes(decodedData.attributes);\n\n  const bufferViewIndex = options.addBufferView(compressedData);\n\n  const glTFMesh = {\n    primitives: [\n      {\n        attributes: fauxAccessors, // TODO - verify with spec\n        mode, // GL.POINTS\n        extensions: {\n          [KHR_DRACO_MESH_COMPRESSION]: {\n            bufferView: bufferViewIndex,\n            attributes: fauxAccessors // TODO - verify with spec\n          }\n        }\n      }\n    ]\n  };\n\n  return glTFMesh;\n}\n\n// UTILS\n\nfunction checkPrimitive(primitive: GLTFMeshPrimitive) {\n  if (!primitive.attributes && Object.keys(primitive.attributes).length > 0) {\n    throw new Error('glTF: Empty primitive detected: Draco decompression failure?');\n  }\n}\n\nfunction* makeMeshPrimitiveIterator(scenegraph) {\n  for (const mesh of scenegraph.json.meshes || []) {\n    for (const primitive of mesh.primitives) {\n      yield primitive;\n    }\n  }\n}\n","// import type {TypedArray} from '../types/loader-utils';\nimport type {GLTFAccessor} from '../types/gltf-types';\n// TODO - remove\nimport {getAccessorTypeFromSize, getComponentTypeFromArray} from './gltf-utils';\n\n// Returns a fresh attributes object with glTF-standardized attributes names\n// Attributes that cannot be identified will not be included\n// Removes `indices` if present, as it should be stored separately from the attributes\nexport function getGLTFAccessors(attributes): {[key: string]: GLTFAccessor} {\n  const accessors = {};\n  for (const name in attributes) {\n    const attribute = attributes[name];\n    if (name !== 'indices') {\n      const glTFAccessor = getGLTFAccessor(attribute);\n      accessors[name] = glTFAccessor;\n    }\n  }\n  return accessors;\n}\n\n// Fix up a single accessor.\n// Input: typed array or a partial accessor object\n// Return: accessor object\nexport function getGLTFAccessor(attribute) {\n  const {buffer, size, count} = getAccessorData(attribute);\n\n  const glTFAccessor: GLTFAccessor = {\n    // glTF Accessor values\n    // TODO: Instead of a bufferView index we could have an actual buffer (typed array)\n    // bufferView: null,\n    // TODO: Deprecate `value` in favor of bufferView?\n    // @ts-ignore\n    value: buffer,\n    size, // Decoded `type` (e.g. SCALAR)\n\n    byteOffset: 0,\n    count,\n    type: getAccessorTypeFromSize(size),\n    componentType: getComponentTypeFromArray(buffer)\n  };\n\n  return glTFAccessor;\n}\n\n// export function getGLTFAttribute(data, gltfAttributeName): GLTFAccessor {\n//   return data.attributes[data.glTFAttributeMap[gltfAttributeName]];\n// }\n\nfunction getAccessorData(attribute) {\n  let buffer = attribute;\n  let size = 1;\n  let count = 0;\n\n  if (attribute && attribute.value) {\n    buffer = attribute.value;\n    size = attribute.size || 1;\n  }\n\n  if (buffer) {\n    if (!ArrayBuffer.isView(buffer)) {\n      buffer = toTypedArray(buffer, Float32Array);\n    }\n    count = buffer.length / size;\n  }\n\n  return {buffer, size, count};\n}\n\n// Convert non-typed arrays to arrays of specified format\nfunction toTypedArray(array, ArrayType, convertTypedArrays = false) {\n  if (!array) {\n    return null;\n  }\n  if (Array.isArray(array)) {\n    return new ArrayType(array);\n  }\n  if (convertTypedArrays && !(array instanceof ArrayType)) {\n    return new ArrayType(array);\n  }\n  return array;\n}\n","// GLTF EXTENSION: KHR_materials_unlit\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_MATERIALS_UNLIT} from '../gltf-utils/gltf-constants';\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Remove the top-level extension\n  gltfScenegraph.removeExtension(KHR_MATERIALS_UNLIT);\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const material of json.materials || []) {\n    const extension = material.extensions && material.extensions.KHR_materials_unlit;\n    if (extension) {\n      // @ts-ignore TODO\n      material.unlit = true;\n    }\n    gltfScenegraph.removeObjectExtension(material, KHR_MATERIALS_UNLIT);\n  }\n}\n\nexport function encode(gltfData) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.materials) {\n    for (const material of json.materials || []) {\n      // @ts-ignore\n      if (material.unlit) {\n        // @ts-ignore\n        delete material.unlit;\n        gltfScenegraph.addObjectExtension(material, KHR_MATERIALS_UNLIT, {});\n        gltfScenegraph.addExtension(KHR_MATERIALS_UNLIT);\n      }\n    }\n  }\n}\n","// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport {assert} from '../utils/assert';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_LIGHTS_PUNCTUAL} from '../gltf-utils/gltf-constants';\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n","// GLTF EXTENSION: KHR_techniques_webgl\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_techniques_webgl\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_TECHNIQUES_WEBGL} from '../gltf-utils/gltf-constants';\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  const extension = gltfScenegraph.getExtension(KHR_TECHNIQUES_WEBGL);\n  if (extension) {\n    const techniques = resolveTechniques(extension, gltfScenegraph);\n\n    for (const material of json.materials || []) {\n      const materialExtension = gltfScenegraph.getObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n      if (materialExtension) {\n        // @ts-ignore TODO\n        material.technique = Object.assign(\n          {},\n          materialExtension,\n          // @ts-ignore\n          techniques[materialExtension.technique]\n        );\n        // @ts-ignore TODO\n        material.technique.values = resolveValues(material.technique, gltfScenegraph);\n      }\n      gltfScenegraph.removeObjectExtension(material, KHR_TECHNIQUES_WEBGL);\n    }\n\n    gltfScenegraph.removeExtension(KHR_TECHNIQUES_WEBGL);\n  }\n}\n// eslint-disable-next-line\nexport async function encode(gltfData, options): Promise<void> {\n  // TODO\n}\n\nfunction resolveTechniques(\n  techniquesExtension: {[key: string]: any},\n  // programs: {[key: string]: any}[],\n  // shaders: {[key: string]: any}[],\n  // techniques: {[key: string]: any}[]\n  gltfScenegraph\n) {\n  const {programs = [], shaders = [], techniques = []} = techniquesExtension;\n  const textDecoder = new TextDecoder();\n\n  shaders.forEach((shader) => {\n    if (Number.isFinite(shader.bufferView)) {\n      shader.code = textDecoder.decode(\n        gltfScenegraph.getTypedArrayForBufferView(shader.bufferView)\n      );\n    } else {\n      // TODO: handle URI shader\n      throw new Error('KHR_techniques_webgl: no shader code');\n    }\n  });\n\n  programs.forEach((program) => {\n    program.fragmentShader = shaders[program.fragmentShader];\n    program.vertexShader = shaders[program.vertexShader];\n  });\n\n  techniques.forEach((technique) => {\n    technique.program = programs[technique.program];\n  });\n\n  return techniques;\n}\n\nfunction resolveValues(technique, gltfScenegraph) {\n  const values = Object.assign({}, technique.values);\n\n  // merge values from uniforms\n  Object.keys(technique.uniforms || {}).forEach((uniform) => {\n    if (technique.uniforms[uniform].value && !(uniform in values)) {\n      values[uniform] = technique.uniforms[uniform].value;\n    }\n  });\n\n  // resolve textures\n  Object.keys(values).forEach((uniform) => {\n    if (typeof values[uniform] === 'object' && values[uniform].index !== undefined) {\n      // Assume this is a texture\n      // TODO: find if there are any other types that can be referenced\n      values[uniform].texture = gltfScenegraph.getTexture(values[uniform].index);\n    }\n  });\n\n  return values;\n}\n","/* eslint-disable camelcase */\nimport * as KHR_binary_glTF from '../extensions/KHR_binary_gltf';\n\n// Binary format changes (mainly implemented by GLBLoader)\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n\n// JSON format changes:\n// https://github.com/khronosgroup/gltf/issues/605\n\n// - [x] Top-level JSON objects are arrays now\n// - [ ] Removed indirection from animation: sampler now refers directly to accessors, #712\n// - [ ] material.parameter.value and technique.parameter.value must be an array, #690\n// - [ ] Node can have only one mesh #821\n// - [ ] Added reqs on JSON encoding\n// - [ ] Added reqs on binary data alignment #802 (comment)\n\n// Additions:\n// - [ ] Added accessor.normalized, #691, #706\n// - [ ] Added glExtensionsUsed property and 5125 (UNSIGNED_INT) accessor.componentType value, #619\n// - [ ] Added extensionsRequired property, #720, #721\n// - [ ] Added \"STEP\" as valid animation.sampler.interpolation value, #712\n\n// Removals:\n// - [x] Removed buffer.type, #786, #629\n// - [ ] Removed revision number from profile.version, #709\n// - [ ] Removed technique.functions.scissor and removed 3089 (SCISSOR_TEST) as a valid value for technique.states.enable, #681\n// - [ ] Techniques, programs, and shaders were moved out to KHR_technique_webgl extension.\n\n// Other edits:\n// - [x] asset is now required, #642\n// - [ ] buffer.byteLength and bufferView.byteLength are now required, #560.\n// - [ ] accessor.min and accessor.max are now required, #593, and clarified that the JSON value and binary data must be the same, #628.\n// - [ ] Clarified animation.sampler and animation.channel restrictions, #712\n// - [ ] skin.inverseBindMatrices is now optional, #461.\n// - [ ] Attribute parameters can't have a value defined in the technique or parameter, #563 (comment).\n// - [ ] Only TEXCOORD and COLOR attribute semantics can be written in the form [semantic]_[set_index], #563 (comment).\n// - [ ] TEXCOORD and COLOR attribute semantics must be written in the form [semantic]_[set_index], e.g., just TEXCOORD should be TEXCOORD_0, and just COLOR should be COLOR_0, #649\n// - [ ] camera.perspective.aspectRatio and camera.perspective.yfov must now be > 0, not >= 0, #563 (comment).\n// - [ ] Application-specific parameter semantics must start with an underscore, e.g., _TEMPERATURE and _SIMULATION_TIME, #563 (comment).\n// - [ ] Properties in technique.parameters must be defined in technique.uniforms or technique.attributes,\n\n// #563 (comment).\n// - [ ] technique.parameter.count can only be defined when the semantic is JOINTMATRIX or an application-specific semantic is used. It can never be defined for attribute parameters; only uniforms, d2f6945\n// - [ ] technique.parameter.semantic is required when the parameter is an attribute, 28e113d\n// - [ ] Mesh-only models are allowed, e.g., without materials, #642\n// - [ ] Skeleton hierarchies (nodes containing jointName) must be separated from non-skeleton hierarchies., #647\n// - [ ] technique.states.functions.blendColor and technique.states.functions.depthRange parameters now must match WebGL function min/max, #707\n\nconst GLTF_ARRAYS = {\n  accessors: 'accessor',\n  animations: 'animation',\n  buffers: 'buffer',\n  bufferViews: 'bufferView',\n  images: 'image',\n  materials: 'material',\n  meshes: 'mesh',\n  nodes: 'node',\n  samplers: 'sampler',\n  scenes: 'scene',\n  skins: 'skin',\n  textures: 'texture'\n};\n\nconst GLTF_KEYS = {\n  accessor: 'accessors',\n  animations: 'animation',\n  buffer: 'buffers',\n  bufferView: 'bufferViews',\n  image: 'images',\n  material: 'materials',\n  mesh: 'meshes',\n  node: 'nodes',\n  sampler: 'samplers',\n  scene: 'scenes',\n  skin: 'skins',\n  texture: 'textures'\n};\n\n/**\n * Converts (normalizes) glTF v1 to v2\n */\nclass GLTFV1Normalizer {\n  constructor(gltf) {\n    this.idToIndexMap = {\n      animations: {},\n      accessors: {},\n      buffers: {},\n      bufferViews: {},\n      images: {},\n      materials: {},\n      meshes: {},\n      nodes: {},\n      samplers: {},\n      scenes: {},\n      skins: {},\n      textures: {}\n    };\n  }\n\n  /**\n   * Convert (normalize) glTF < 2.0 to glTF 2.0\n   * @param gltf - object with json and binChunks\n   * @param options\n   * @param options normalize Whether to actually normalize\n   */\n  normalize(gltf, options) {\n    this.json = gltf.json;\n    const json = gltf.json;\n\n    // Check version\n    switch (json.asset && json.asset.version) {\n      // We are converting to v2 format. Return if there is nothing to do\n      case '2.0':\n        return;\n\n      // This class is written to convert 1.0\n      case undefined:\n      case '1.0':\n        break;\n\n      default:\n        // eslint-disable-next-line no-undef, no-console\n        console.warn(`glTF: Unknown version ${json.asset.version}`);\n        return;\n    }\n\n    if (!options.normalize) {\n      // We are still missing a few conversion tricks, remove once addressed\n      throw new Error('glTF v1 is not supported.');\n    }\n\n    // eslint-disable-next-line no-undef, no-console\n    console.warn('Converting glTF v1 to glTF v2 format. This is experimental and may fail.');\n\n    this._addAsset(json);\n\n    // In glTF2 top-level fields are Arrays not Object maps\n    this._convertTopLevelObjectsToArrays(json);\n\n    // Extract bufferView indices for images\n    // (this extension needs to be invoked early in the normalization process)\n    KHR_binary_glTF.decode(gltf);\n\n    // Convert object references from ids to indices\n    this._convertObjectIdsToArrayIndices(json);\n\n    this._updateObjects(json);\n\n    this._updateMaterial(json);\n  }\n\n  // asset is now required, #642 https://github.com/KhronosGroup/glTF/issues/639\n  _addAsset(json) {\n    json.asset = json.asset || {};\n    // We are normalizing to glTF v2, so change version to \"2.0\"\n    json.asset.version = '2.0';\n    json.asset.generator = json.asset.generator || 'Normalized to glTF 2.0 by loaders.gl';\n  }\n\n  _convertTopLevelObjectsToArrays(json) {\n    // TODO check that all arrays are covered\n    for (const arrayName in GLTF_ARRAYS) {\n      this._convertTopLevelObjectToArray(json, arrayName);\n    }\n  }\n\n  /** Convert one top level object to array */\n  _convertTopLevelObjectToArray(json, mapName) {\n    const objectMap = json[mapName];\n    if (!objectMap || Array.isArray(objectMap)) {\n      return;\n    }\n\n    // Rewrite the top-level field as an array\n    json[mapName] = [];\n    // Copy the map key into object.id\n    for (const id in objectMap) {\n      const object = objectMap[id];\n      object.id = object.id || id; // Mutates the loaded object\n      const index = json[mapName].length;\n      json[mapName].push(object);\n      this.idToIndexMap[mapName][id] = index;\n    }\n  }\n\n  /** Go through all objects in all top-level arrays and replace ids with indices */\n  _convertObjectIdsToArrayIndices(json) {\n    for (const arrayName in GLTF_ARRAYS) {\n      this._convertIdsToIndices(json, arrayName);\n    }\n    if ('scene' in json) {\n      json.scene = this._convertIdToIndex(json.scene, 'scene');\n    }\n\n    // Convert any index references that are not using array names\n\n    // texture.source (image)\n    for (const texture of json.textures) {\n      this._convertTextureIds(texture);\n    }\n    for (const mesh of json.meshes) {\n      this._convertMeshIds(mesh);\n    }\n    for (const node of json.nodes) {\n      this._convertNodeIds(node);\n    }\n    for (const node of json.scenes) {\n      this._convertSceneIds(node);\n    }\n  }\n\n  _convertTextureIds(texture) {\n    if (texture.source) {\n      texture.source = this._convertIdToIndex(texture.source, 'image');\n    }\n  }\n\n  _convertMeshIds(mesh) {\n    for (const primitive of mesh.primitives) {\n      const {attributes, indices, material} = primitive;\n      for (const attributeName in attributes) {\n        attributes[attributeName] = this._convertIdToIndex(attributes[attributeName], 'accessor');\n      }\n      if (indices) {\n        primitive.indices = this._convertIdToIndex(indices, 'accessor');\n      }\n      if (material) {\n        primitive.material = this._convertIdToIndex(material, 'material');\n      }\n    }\n  }\n\n  _convertNodeIds(node) {\n    if (node.children) {\n      node.children = node.children.map((child) => this._convertIdToIndex(child, 'node'));\n    }\n    if (node.meshes) {\n      node.meshes = node.meshes.map((mesh) => this._convertIdToIndex(mesh, 'mesh'));\n    }\n  }\n\n  _convertSceneIds(scene) {\n    if (scene.nodes) {\n      scene.nodes = scene.nodes.map((node) => this._convertIdToIndex(node, 'node'));\n    }\n  }\n\n  /** Go through all objects in a top-level array and replace ids with indices */\n  _convertIdsToIndices(json, topLevelArrayName) {\n    if (!json[topLevelArrayName]) {\n      console.warn(`gltf v1: json doesn't contain attribute ${topLevelArrayName}`); // eslint-disable-line no-console, no-undef\n      json[topLevelArrayName] = [];\n    }\n    for (const object of json[topLevelArrayName]) {\n      for (const key in object) {\n        const id = object[key];\n        const index = this._convertIdToIndex(id, key);\n        object[key] = index;\n      }\n    }\n  }\n\n  _convertIdToIndex(id, key) {\n    const arrayName = GLTF_KEYS[key];\n    if (arrayName in this.idToIndexMap) {\n      const index = this.idToIndexMap[arrayName][id];\n      if (!Number.isFinite(index)) {\n        throw new Error(`gltf v1: failed to resolve ${key} with id ${id}`);\n      }\n      return index;\n    }\n    return id;\n  }\n\n  /**\n   *\n   * @param {*} json\n   */\n  _updateObjects(json) {\n    for (const buffer of this.json.buffers) {\n      // - [x] Removed buffer.type, #786, #629\n      delete buffer.type;\n    }\n  }\n\n  /**\n   * Update material (set pbrMetallicRoughness)\n   * @param {*} json\n   */\n  _updateMaterial(json) {\n    for (const material of json.materials) {\n      material.pbrMetallicRoughness = {\n        baseColorFactor: [1, 1, 1, 1],\n        metallicFactor: 1,\n        roughnessFactor: 1\n      };\n\n      const textureId = material.values && material.values.tex;\n      const textureIndex = json.textures.findIndex((texture) => texture.id === textureId);\n      if (textureIndex !== -1) {\n        material.pbrMetallicRoughness.baseColorTexture = {index: textureIndex};\n      }\n    }\n  }\n}\n\nexport function normalizeGLTFV1(gltf, options = {}) {\n  return new GLTFV1Normalizer().normalize(gltf, options);\n}\n","// GLTF 1.0 EXTENSION: KHR_binary_glTF\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_BINARY_GLTF} from '../gltf-utils/gltf-constants';\n\nexport function decode(gltfData: {json: GLTF}): void {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Note: json.buffers.binary_glTF also needs to be replaced\n  // This is currently done during gltf normalization\n\n  // Image and shader nodes can have the extension\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/image.KHR_binary_glTF.schema.json\n  for (const node of json.images || []) {\n    const extension = gltfScenegraph.removeObjectExtension(node, KHR_BINARY_GLTF);\n    // The data in the extension is valid as glTF 2.0 data inside the object, so just copy it in\n    if (extension) {\n      Object.assign(node, extension);\n    }\n  }\n\n  // TODO shaders\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/shader.KHR_binary_glTF.schema.json\n\n  // glTF v1 one files have a partially formed URI field that is not expected in (and causes problems in) 2.0\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n\n  // Remove the top-level extension as it has now been removed from all nodes\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\n\n// KHR_binary_gltf is a 1.0 extension that is supported natively by 2.0\nexport function encode() {\n  throw new Error(KHR_BINARY_GLTF);\n}\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {encodeGLTFSync} from './lib/encoders/encode-gltf';\n\nexport type GLTFWriterOptions = {\n  gltf?: {};\n  byteOffset?: number;\n};\n\n/**\n * GLTF exporter\n */\nexport const GLTFWriter = {\n  name: 'glTF',\n  id: 'gltf',\n  module: 'gltf',\n  version: VERSION,\n\n  extensions: ['glb'], // We only support encoding to binary GLB, not to JSON GLTF\n  mimeTypes: ['model/gltf-binary'], // 'model/gltf+json',\n  binary: true,\n\n  encodeSync,\n\n  options: {\n    gltf: {}\n  }\n};\n\nfunction encodeSync(gltf, options: GLTFWriterOptions = {}) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length, then create arraybuffer and encode\n  const byteLength = encodeGLTFSync(gltf, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encodeGLTFSync(gltf, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckGLBLoader: Writer = GLTFWriter;\n","import encodeGLBSync from './encode-glb';\n\n// Encode the full glTF file as a binary GLB file\n// Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n//\n// TODO - Does not support encoding to non-GLB versions of glTF format\n// - Encode as a textual JSON file with binary data in base64 data URLs.\n// - Encode as a JSON with all images (and buffers?) in separate binary files\n//\n// glb-file-format-specification\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n  convertBuffersToBase64(gltf);\n\n  // TODO: Copy buffers to binary\n\n  return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\n\nfunction convertBuffersToBase64(gltf, {firstBuffer = 0} = {}) {\n  if (gltf.buffers && gltf.buffers.length > firstBuffer) {\n    throw new Error('encodeGLTF: multiple buffers not yet implemented');\n  }\n}\n","import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {GLB} from './lib/types/glb-types';\nimport type {GLBParseOptions} from './lib/parsers/parse-glb';\nimport {VERSION} from './lib/utils/version';\nimport parseGLBSync from './lib/parsers/parse-glb';\n\nexport type GLBLoaderOptions = LoaderOptions & {\n  glb?: GLBParseOptions;\n  byteOffset?: number;\n};\n\n/**\n * GLB Loader -\n * GLB is the binary container format for GLTF\n */\nexport const GLBLoader: LoaderWithParser = {\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n  parse,\n  parseSync,\n  options: {\n    glb: {\n      strict: false // Enables deprecated XVIZ support (illegal CHUNK formats)\n    }\n  }\n};\n\nasync function parse(arrayBuffer: ArrayBuffer, options?: GLBLoaderOptions): Promise<GLB> {\n  return parseSync(arrayBuffer, options);\n}\n\nfunction parseSync(arrayBuffer: ArrayBuffer, options?: GLBLoaderOptions): GLB {\n  const {byteOffset = 0} = options || {};\n  const glb: GLB = {} as GLB;\n  parseGLBSync(glb, arrayBuffer, byteOffset, options?.glb);\n  return glb;\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckGLBLoader: LoaderWithParser = GLBLoader;\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport encodeGLBSync from './lib/encoders/encode-glb';\n\n/**\n * GLB exporter\n * GLB is the binary container format for GLTF\n */\nexport const GLBWriter = {\n  name: 'GLB',\n  id: 'glb',\n  module: 'gltf',\n  version: VERSION,\n\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  binary: true,\n\n  encodeSync,\n\n  options: {\n    glb: {}\n  }\n};\n\nfunction encodeSync(glb, options) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length and allocate buffer\n  const byteLength = encodeGLBSync(glb, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n\n  // Encode into buffer\n  const dataView = new DataView(arrayBuffer);\n  encodeGLBSync(glb, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckGLBLoader: Writer = GLBWriter;\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3, Matrix4, Quaternion} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {GL} from '@loaders.gl/math'; // 'math.gl/geometry';\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\nimport Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseInstancedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, tile.gltfFormat, options, context);\n  return byteOffset;\n}\n\nfunction parseInstancedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  if (tile.version !== 1) {\n    throw new Error(`Instanced 3D Model version ${tile.version} is not supported`);\n  }\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n\n  const view = new DataView(arrayBuffer);\n\n  tile.gltfFormat = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n\n  // PARSE FEATURE TABLE\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  // TODO - Is the feature table sometimes optional or can check be moved into table header parser?\n  if (tile.featureTableJsonByteLength === 0) {\n    throw new Error('i3dm parser: featureTableJsonByteLength is zero.');\n  }\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n\n  const instancesLength = featureTable.getGlobalProperty('INSTANCES_LENGTH');\n  featureTable.featuresLength = instancesLength;\n\n  if (!Number.isFinite(instancesLength)) {\n    throw new Error('i3dm parser: INSTANCES_LENGTH must be defined');\n  }\n\n  tile.eastNorthUp = featureTable.getGlobalProperty('EAST_NORTH_UP');\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  const batchTable = new Tile3DBatchTable(\n    tile.batchTableJson,\n    tile.batchTableBinary,\n    instancesLength\n  );\n\n  extractInstancedAttributes(tile, featureTable, batchTable, instancesLength);\n\n  return byteOffset;\n}\n\n// eslint-disable-next-line max-statements, complexity\nfunction extractInstancedAttributes(tile, featureTable, batchTable, instancesLength) {\n  // Create model instance collection\n  const collectionOptions = {\n    instances: new Array(instancesLength),\n    batchTable: tile._batchTable,\n    cull: false, // Already culled by 3D Tiles\n    url: undefined,\n    // requestType: RequestType.TILES3D,\n    gltf: undefined,\n    basePath: undefined,\n    incrementallyLoadTextures: false,\n    // TODO - tileset is not available at this stage, tile is parsed independently\n    // upAxis: (tileset && tileset._gltfUpAxis) || [0, 1, 0],\n    forwardAxis: [1, 0, 0]\n  };\n\n  const instances = collectionOptions.instances;\n  const instancePosition = new Vector3();\n  const instanceNormalRight = new Vector3();\n  const instanceNormalUp = new Vector3();\n  const instanceNormalForward = new Vector3();\n  const instanceRotation = new Matrix3();\n  const instanceQuaternion = new Quaternion();\n  const instanceScale = new Vector3();\n  const instanceTranslationRotationScale = {};\n  const instanceTransform = new Matrix4();\n  const scratch1 = [];\n  const scratch2 = [];\n  const scratchVector1 = new Vector3();\n  const scratchVector2 = new Vector3();\n\n  for (let i = 0; i < instancesLength; i++) {\n    let position;\n\n    // Get the instance position\n    if (featureTable.hasProperty('POSITION')) {\n      position = featureTable.getProperty('POSITION', GL.FLOAT, 3, i, instancePosition);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      position = featureTable.getProperty(\n        'POSITION_QUANTIZED',\n        GL.UNSIGNED_SHORT,\n        3,\n        i,\n        instancePosition\n      );\n\n      const quantizedVolumeOffset = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_OFFSET',\n        GL.FLOAT,\n        3,\n        scratchVector1\n      );\n      if (!quantizedVolumeOffset) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.'\n        );\n      }\n\n      const quantizedVolumeScale = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_SCALE',\n        GL.FLOAT,\n        3,\n        scratchVector2\n      );\n      if (!quantizedVolumeScale) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.'\n        );\n      }\n\n      const MAX_UNSIGNED_SHORT = 65535.0;\n      for (let j = 0; j < 3; j++) {\n        position[j] =\n          (position[j] / MAX_UNSIGNED_SHORT) * quantizedVolumeScale[j] + quantizedVolumeOffset[j];\n      }\n    }\n\n    if (!position) {\n      throw new Error('i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.');\n    }\n\n    instancePosition.copy(position);\n    instanceTranslationRotationScale.translation = instancePosition;\n\n    // Get the instance rotation\n    tile.normalUp = featureTable.getProperty('NORMAL_UP', GL.FLOAT, 3, i, scratch1);\n    tile.normalRight = featureTable.getProperty('NORMAL_RIGHT', GL.FLOAT, 3, i, scratch2);\n\n    const hasCustomOrientation = false;\n    if (tile.normalUp) {\n      if (!tile.normalRight) {\n        throw new Error('i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.');\n      }\n      // Vector3.unpack(normalUp, 0, instanceNormalUp);\n      // Vector3.unpack(normalRight, 0, instanceNormalRight);\n      tile.hasCustomOrientation = true;\n    } else {\n      tile.octNormalUp = featureTable.getProperty(\n        'NORMAL_UP_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch1\n      );\n      tile.octNormalRight = featureTable.getProperty(\n        'NORMAL_RIGHT_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch2\n      );\n\n      if (tile.octNormalUp) {\n        if (!tile.octNormalRight) {\n          throw new Error(\n            'i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P'\n          );\n        }\n\n        throw new Error('i3dm: oct-encoded orientation not implemented');\n        /*\n        AttributeCompression.octDecodeInRange(octNormalUp[0], octNormalUp[1], 65535, instanceNormalUp);\n        AttributeCompression.octDecodeInRange(octNormalRight[0], octNormalRight[1], 65535, instanceNormalRight);\n        hasCustomOrientation = true;\n        */\n      } else if (tile.eastNorthUp) {\n        Ellipsoid.WGS84.eastNorthUpToFixedFrame(instancePosition, instanceTransform);\n        instanceTransform.getRotationMatrix3(instanceRotation);\n      } else {\n        instanceRotation.identity();\n      }\n    }\n\n    if (hasCustomOrientation) {\n      instanceNormalForward.copy(instanceNormalRight).cross(instanceNormalUp).normalize();\n      instanceRotation.setColumn(0, instanceNormalRight);\n      instanceRotation.setColumn(1, instanceNormalUp);\n      instanceRotation.setColumn(2, instanceNormalForward);\n    }\n\n    instanceQuaternion.fromMatrix3(instanceRotation);\n    instanceTranslationRotationScale.rotation = instanceQuaternion;\n\n    // Get the instance scale\n    instanceScale.set(1.0, 1.0, 1.0);\n    const scale = featureTable.getProperty('SCALE', GL.FLOAT, 1, i);\n    if (Number.isFinite(scale)) {\n      instanceScale.multiplyByScalar(scale);\n    }\n    const nonUniformScale = featureTable.getProperty('SCALE_NON_UNIFORM', GL.FLOAT, 3, i, scratch1);\n    if (nonUniformScale) {\n      instanceScale.scale(nonUniformScale);\n    }\n\n    instanceTranslationRotationScale.scale = instanceScale;\n\n    // Get the batchId\n    let batchId = featureTable.getProperty('BATCH_ID', GL.UNSIGNED_SHORT, 1, i);\n    if (batchId === undefined) {\n      // If BATCH_ID semantic is undefined, batchId is just the instance number\n      batchId = i;\n    }\n\n    const rotationMatrix = new Matrix4().fromQuaternion(instanceTranslationRotationScale.rotation);\n\n    // Create the model matrix and the instance\n    instanceTransform.identity();\n    instanceTransform.translate(instanceTranslationRotationScale.translation);\n    instanceTransform.multiplyRight(rotationMatrix);\n    instanceTransform.scale(instanceTranslationRotationScale.scale);\n\n    const modelMatrix = instanceTransform.clone();\n    instances[i] = {\n      modelMatrix,\n      batchId\n    };\n  }\n\n  tile.instances = instances;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Reference code:\n// https://github.com/AnalyticalGraphicsInc/cesium/blob/master/Source/Scene/Composite3DTileContent.js#L182\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\n\n// eslint-disable-next-line max-params\nexport async function parseComposite3DTile(\n  tile,\n  arrayBuffer,\n  byteOffset,\n  options,\n  context,\n  parse3DTile\n) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  const view = new DataView(arrayBuffer);\n\n  // Extract number of tiles\n  tile.tilesLength = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n\n  // extract each tile from the byte stream\n  tile.tiles = [];\n  while (tile.tiles.length < tile.tilesLength && tile.byteLength - byteOffset > 12) {\n    const subtile = {};\n    tile.tiles.push(subtile);\n    byteOffset = await parse3DTile(arrayBuffer, byteOffset, options, context, subtile);\n    // TODO - do we need to add any padding in between tiles?\n  }\n\n  return byteOffset;\n}\n","import {LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE} from '@loaders.gl/tiles';\n\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n\n  const contentUrl = tile.contentUrl;\n  const fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\n\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\n\nexport function normalizeTileData(tile, options) {\n  if (tile.content) {\n    const contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = `${options.basePath}/${contentUri}`;\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n  return tile;\n}\n\n// normalize tile headers\nexport function normalizeTileHeaders(tileset) {\n  const basePath = tileset.basePath;\n  const root = normalizeTileData(tileset.root, tileset);\n\n  const stack = [];\n  stack.push(root);\n\n  while (stack.length > 0) {\n    const tile = stack.pop();\n    const children = tile.children || [];\n    for (const childHeader of children) {\n      normalizeTileData(childHeader, {basePath});\n      stack.push(childHeader);\n    }\n  }\n\n  return root;\n}\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {Tiles3DLoader} from './tiles-3d-loader';\nimport {getIonTilesetMetadata} from './lib/ion/ion';\n\nasync function preload(url, options = {}) {\n  options = options['cesium-ion'] || {};\n  // @ts-ignore\n  const {accessToken} = options;\n  // @ts-ignore\n  let assetId = options.assetId;\n  if (!Number.isFinite(assetId)) {\n    const matched = url.match(/\\/([0-9]+)\\/tileset.json/);\n    assetId = matched && matched[1];\n  }\n  return getIonTilesetMetadata(accessToken, assetId);\n}\n\n/**\n * Loader for 3D tiles from Cesium ION\n */\nexport const CesiumIonLoader: LoaderWithParser = {\n  ...Tiles3DLoader,\n  id: 'cesium-ion',\n  name: 'Cesium Ion',\n  // @ts-ignore\n  preload,\n  parse: async (data, options?, context?) => {\n    options = {...options};\n    options['3d-tiles'] = options['cesium-ion'];\n    // @ts-ignore\n    options.loader = CesiumIonLoader;\n    return Tiles3DLoader.parse(data, options, context); // , loader);\n  },\n  options: {\n    'cesium-ion': {\n      ...Tiles3DLoader.options['3d-tiles'],\n      accessToken: null\n    }\n  }\n};\n","import type {Writer} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport encode3DTile from './lib/encoders/encode-3d-tile';\n\n/**\n * Exporter for 3D Tiles\n */\nexport const Tile3DWriter: Writer = {\n  name: '3D Tile',\n  id: '3d-tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  encodeSync,\n  binary: true,\n  options: {\n    ['3d-tiles']: {}\n  }\n};\n\nfunction encodeSync(tile, options) {\n  return encode3DTile(tile, options);\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {assert} from '@loaders.gl/loader-utils';\n\nimport {encodeComposite3DTile} from './encode-3d-tile-composite';\nimport {encodeBatchedModel3DTile} from './encode-3d-tile-batched-model';\nimport {encodeInstancedModel3DTile} from './encode-3d-tile-instanced-model';\nimport {encodePointCloud3DTile} from './encode-3d-tile-point-cloud';\n\nexport default function encode3DTile(tile, options) {\n  const byteLength = encode3DTileToDataView(tile, null, 0, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encode3DTileToDataView(tile, dataView, 0, options);\n  return arrayBuffer;\n}\n\nfunction encode3DTileToDataView(tile, dataView, byteOffset, options) {\n  assert(typeof tile.type === 'string');\n\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      return encodeComposite3DTile(tile, dataView, byteOffset, options, encode3DTileToDataView);\n    case TILE3D_TYPE.POINT_CLOUD:\n      return encodePointCloud3DTile(tile, dataView, byteOffset, options);\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return encodeBatchedModel3DTile(tile, dataView, byteOffset, options);\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return encodeInstancedModel3DTile(tile, dataView, byteOffset, options);\n    default:\n      throw new Error('3D Tiles: unknown tile type');\n  }\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {MAGIC_ARRAY} from '../constants';\nimport {encode3DTileHeader, encode3DTileByteLength} from './helpers/encode-3d-tile-header';\n\nexport function encodeComposite3DTile(tile, dataView, byteOffset, options, encode3DTile) {\n  // Add default magic for this tile type\n  tile = {magic: MAGIC_ARRAY.COMPOSITE, tiles: [], ...tile};\n\n  const byteOffsetStart = byteOffset;\n\n  byteOffset += encode3DTileHeader(tile, dataView, byteOffset);\n\n  if (dataView) {\n    dataView.setUint32(byteOffset, tile.tiles.length, true); // tilesLength\n  }\n  byteOffset += 4;\n\n  for (let i = 0; i < tile.tiles.length; ++i) {\n    byteOffset += encode3DTile(tile.tiles[i], dataView, byteOffset, options);\n  }\n\n  // Go \"back\" and rewrite the tile's `byteLength` now that we know the value\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n\n  return byteOffset;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {\n  padToNBytes,\n  copyBinaryToDataView,\n  copyPaddedStringToDataView\n} from '@loaders.gl/loader-utils';\nimport {MAGIC_ARRAY} from '../constants';\nimport {encode3DTileHeader, encode3DTileByteLength} from './helpers/encode-3d-tile-header';\n\n// Procedurally encode the tile array dataView for testing purposes\nexport function encodeBatchedModel3DTile(tile, dataView, byteOffset, options) {\n  const {featuresLength = 0, batchTable} = tile;\n\n  const featureTableJson = {\n    BATCH_LENGTH: featuresLength\n  };\n  const featureTableJsonString = JSON.stringify(featureTableJson);\n  const batchTableJsonString = batchTable ? JSON.stringify(batchTable) : '';\n  const featureTableJsonByteLength = padToNBytes(featureTableJsonString.length, 8);\n  const batchTableJsonByteLength = batchTableJsonString\n    ? padToNBytes(batchTableJsonString.length, 8)\n    : 0;\n\n  // Add default magic for this tile type\n  tile = {magic: MAGIC_ARRAY.BATCHED_MODEL, ...tile};\n\n  const byteOffsetStart = byteOffset;\n\n  byteOffset = encode3DTileHeader(tile, dataView, byteOffset);\n\n  if (dataView) {\n    dataView.setUint32(12, featureTableJsonByteLength, true); // featureTableJsonByteLength\n    dataView.setUint32(16, 0, true); // featureTableBinaryByteLength\n    dataView.setUint32(20, batchTableJsonByteLength, true); // batchTableJsonByteLength\n    dataView.setUint32(24, 0, true); // batchTableBinaryByteLength\n  }\n  byteOffset += 16;\n\n  // TODO feature table binary\n  byteOffset = copyPaddedStringToDataView(dataView, byteOffset, featureTableJsonString, 8);\n\n  if (batchTable) {\n    byteOffset = copyPaddedStringToDataView(dataView, byteOffset, batchTableJsonString, 8);\n  }\n\n  // Add encoded GLTF to the end of data\n  const gltfEncoded = tile.gltfEncoded;\n  if (gltfEncoded) {\n    byteOffset = copyBinaryToDataView(dataView, byteOffset, gltfEncoded, gltfEncoded.byteLength);\n  }\n\n  // Go \"back\" and rewrite the tile's `byteLength` now that we know the value\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n\n  return byteOffset;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {copyStringToDataView} from '@loaders.gl/loader-utils';\nimport {MAGIC_ARRAY} from '../constants';\nimport {encode3DTileHeader, encode3DTileByteLength} from './helpers/encode-3d-tile-header';\n\n// Procedurally encode the tile array buffer for testing purposes\n// eslint-disable-next-line max-statements\nexport function encodeInstancedModel3DTile(tile, dataView, byteOffset, options) {\n  const {featuresLength = 1, gltfFormat = 1, gltfUri = ''} = tile;\n\n  const gltfUriByteLength = gltfUri.length;\n\n  const featureTableJson = {\n    INSTANCES_LENGTH: featuresLength,\n    POSITION: new Array(featuresLength * 3).fill(0)\n  };\n  const featureTableJsonString = JSON.stringify(featureTableJson);\n  const featureTableJsonByteLength = featureTableJsonString.length;\n\n  // Add default magic for this tile type\n  tile = {magic: MAGIC_ARRAY.INSTANCED_MODEL, ...tile};\n\n  const byteOffsetStart = byteOffset;\n\n  byteOffset = encode3DTileHeader(tile, dataView, 0);\n\n  if (dataView) {\n    dataView.setUint32(12, featureTableJsonByteLength, true); // featureTableJsonByteLength\n    dataView.setUint32(16, 0, true); // featureTableBinaryByteLength\n    dataView.setUint32(20, 0, true); // batchTableJsonByteLength\n    dataView.setUint32(24, 0, true); // batchTableBinaryByteLength\n    dataView.setUint32(28, gltfFormat, true); // gltfFormat\n  }\n\n  byteOffset += 20;\n\n  byteOffset += copyStringToDataView(\n    dataView,\n    byteOffset,\n    featureTableJsonString,\n    featureTableJsonByteLength\n  );\n  byteOffset += copyStringToDataView(dataView, byteOffset, gltfUri, gltfUriByteLength);\n\n  // Go \"back\" and rewrite the tile's `byteLength` now that we know the value\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n\n  return byteOffset;\n}\n","// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {MAGIC_ARRAY} from '../constants';\nimport {encode3DTileHeader, encode3DTileByteLength} from './helpers/encode-3d-tile-header';\nimport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from '@loaders.gl/loader-utils';\n\nconst DEFAULT_FEATURE_TABLE_JSON = {\n  POINTS_LENGTH: 1,\n  POSITIONS: {\n    byteOffset: 0\n  }\n};\n\nexport function encodePointCloud3DTile(tile, dataView, byteOffset, options) {\n  const {featureTableJson = DEFAULT_FEATURE_TABLE_JSON} = tile;\n\n  let featureTableJsonString = JSON.stringify(featureTableJson);\n  featureTableJsonString = padStringToByteAlignment(featureTableJsonString, 4);\n\n  const {featureTableJsonByteLength = featureTableJsonString.length} = tile;\n\n  const featureTableBinary = new ArrayBuffer(12); // Enough space to hold 3 floats\n  const featureTableBinaryByteLength = featureTableBinary.byteLength;\n\n  // Add default magic for this tile type\n  tile = {magic: MAGIC_ARRAY.POINT_CLOUD, ...tile};\n\n  const byteOffsetStart = byteOffset;\n\n  byteOffset += encode3DTileHeader(tile, dataView, 0);\n\n  if (dataView) {\n    dataView.setUint32(byteOffset + 0, featureTableJsonByteLength, true); // featureTableJsonByteLength\n    dataView.setUint32(byteOffset + 4, featureTableBinaryByteLength, true); // featureTableBinaryByteLength\n    dataView.setUint32(byteOffset + 8, 0, true); // batchTableJsonByteLength\n    dataView.setUint32(byteOffset + 12, 0, true); // batchTableBinaryByteLength\n  }\n  byteOffset += 16;\n\n  byteOffset += copyStringToDataView(\n    dataView,\n    byteOffset,\n    featureTableJsonString,\n    featureTableJsonByteLength\n  );\n  byteOffset += copyBinaryToDataView(\n    dataView,\n    byteOffset,\n    featureTableBinary,\n    featureTableBinaryByteLength\n  );\n\n  // Go \"back\" and rewrite the tile's `byteLength` now that we know the value\n  encode3DTileByteLength(dataView, byteOffsetStart, byteOffset - byteOffsetStart);\n\n  return byteOffset;\n}\n","import checkIfBrowser from '../env/is-browser';\nexport { self, window, global, document, process, console } from '../env/globals';\nexport const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\nexport const isBrowser = checkIfBrowser();\n//# sourceMappingURL=globals.js.map","function getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default class LocalStorage {\n  constructor(id, defaultSettings, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = {};\n    Object.assign(this.config, defaultSettings);\n\n    this._loadConfiguration();\n  }\n\n  getConfiguration() {\n    return this.config;\n  }\n\n  setConfiguration(configuration) {\n    this.config = {};\n    return this.updateConfiguration(configuration);\n  }\n\n  updateConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n\n    return this;\n  }\n\n  _loadConfiguration() {\n    let configuration = {};\n\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n\n    Object.assign(this.config, configuration);\n    return this;\n  }\n\n}\n//# sourceMappingURL=local-storage.js.map","export function formatTime(ms) {\n  let formatted;\n\n  if (ms < 10) {\n    formatted = \"\".concat(ms.toFixed(2), \"ms\");\n  } else if (ms < 100) {\n    formatted = \"\".concat(ms.toFixed(1), \"ms\");\n  } else if (ms < 1000) {\n    formatted = \"\".concat(ms.toFixed(0), \"ms\");\n  } else {\n    formatted = \"\".concat((ms / 1000).toFixed(2), \"s\");\n  }\n\n  return formatted;\n}\nexport function leftPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(' '.repeat(padLength)).concat(string);\n}\nexport function rightPad(string, length = 8) {\n  const padLength = Math.max(length - string.length, 0);\n  return \"\".concat(string).concat(' '.repeat(padLength));\n}\nexport function formatValue(v, opts = {}) {\n  const EPSILON = 1e-16;\n  const {\n    isInteger = false\n  } = opts;\n\n  if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n    return formatArrayValue(v, opts);\n  }\n\n  if (!Number.isFinite(v)) {\n    return String(v);\n  }\n\n  if (Math.abs(v) < EPSILON) {\n    return isInteger ? '0' : '0.';\n  }\n\n  if (isInteger) {\n    return v.toFixed(0);\n  }\n\n  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n    return v.toFixed(0);\n  }\n\n  const string = v.toPrecision(2);\n  const decimal = string.indexOf('.0');\n  return decimal === string.length - 2 ? string.slice(0, -1) : string;\n}\n\nfunction formatArrayValue(v, opts) {\n  const {\n    maxElts = 16,\n    size = 1\n  } = opts;\n  let string = '[';\n\n  for (let i = 0; i < v.length && i < maxElts; ++i) {\n    if (i > 0) {\n      string += \",\".concat(i % size === 0 ? ' ' : '');\n    }\n\n    string += formatValue(v[i], opts);\n  }\n\n  const terminator = v.length > maxElts ? '...' : ']';\n  return \"\".concat(string).concat(terminator);\n}\n\nexport function formatImage(image, message, scale, maxWidth = 600) {\n  const imageUrl = image.src.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n\n  if (image.width > maxWidth) {\n    scale = Math.min(scale, maxWidth / image.width);\n  }\n\n  const width = image.width * scale;\n  const height = image.height * scale;\n  const style = ['font-size:1px;', \"padding:\".concat(Math.floor(height / 2), \"px \").concat(Math.floor(width / 2), \"px;\"), \"line-height:\".concat(height, \"px;\"), \"background:url(\".concat(imageUrl, \");\"), \"background-size:\".concat(width, \"px \").concat(height, \"px;\"), 'color:transparent;'].join('');\n  return [\"\".concat(message, \" %c+\"), style];\n}\n//# sourceMappingURL=formatters.js.map","import { isBrowser } from './globals';\nexport const COLOR = {\n  BLACK: 30,\n  RED: 31,\n  GREEN: 32,\n  YELLOW: 33,\n  BLUE: 34,\n  MAGENTA: 35,\n  CYAN: 36,\n  WHITE: 37,\n  BRIGHT_BLACK: 90,\n  BRIGHT_RED: 91,\n  BRIGHT_GREEN: 92,\n  BRIGHT_YELLOW: 93,\n  BRIGHT_BLUE: 94,\n  BRIGHT_MAGENTA: 95,\n  BRIGHT_CYAN: 96,\n  BRIGHT_WHITE: 97\n};\n\nfunction getColor(color) {\n  return typeof color === 'string' ? COLOR[color.toUpperCase()] || COLOR.WHITE : color;\n}\n\nexport function addColor(string, color, background) {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      color = getColor(color);\n      string = \"\\x1B[\".concat(color, \"m\").concat(string, \"\\x1B[39m\");\n    }\n\n    if (background) {\n      color = getColor(background);\n      string = \"\\x1B[\".concat(background + 10, \"m\").concat(string, \"\\x1B[49m\");\n    }\n  }\n\n  return string;\n}\n//# sourceMappingURL=color.js.map","export function autobind(obj, predefined = ['constructor']) {\n  const proto = Object.getPrototypeOf(obj);\n  const propNames = Object.getOwnPropertyNames(proto);\n\n  for (const key of propNames) {\n    if (typeof obj[key] === 'function') {\n      if (!predefined.find(name => key === name)) {\n        obj[key] = obj[key].bind(obj);\n      }\n    }\n  }\n}\n//# sourceMappingURL=autobind.js.map","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n//# sourceMappingURL=assert.js.map","import { window, process, isBrowser } from './globals';\nexport default function getHiResTimestamp() {\n  let timestamp;\n\n  if (isBrowser && window.performance) {\n    timestamp = window.performance.now();\n  } else if (process.hrtime) {\n    const timeParts = process.hrtime();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n//# sourceMappingURL=hi-res-timestamp.js.map","import { VERSION, isBrowser } from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport { formatImage, formatTime, leftPad } from '../utils/formatters';\nimport { addColor } from '../utils/color';\nimport { autobind } from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {\n  once: true\n};\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n\n  return 'empty';\n}\n\nexport default class Log {\n  constructor({\n    id\n  } = {\n    id: ''\n  }) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    this.LOG_THROTTLE_TIMEOUT = 0;\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.userData = {};\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({\n      enabled\n    });\n\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({\n      level\n    });\n\n    return this;\n  }\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  warn(message) {\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  error(message) {\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n  }\n\n  probe(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  log(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  info(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  once(logLevel, message) {\n    return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n  }\n\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n\n    return noop;\n  }\n\n  image({\n    logLevel,\n    priority,\n    image,\n    message = '',\n    scale = 1\n  }) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n\n    return isBrowser ? logImageInBrowser({\n      image,\n      message,\n      scale\n    }) : logImageInNode({\n      image,\n      message,\n      scale\n    });\n  }\n\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  set(setting, value) {\n    this._storage.updateConfiguration({\n      [setting]: value\n    });\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {\n    collapsed: false\n  }) {\n    opts = normalizeArguments({\n      logLevel,\n      message,\n      opts\n    });\n    const {\n      collapsed\n    } = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {\n      collapsed: true\n    }));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      opts = normalizeArguments({\n        logLevel,\n        message,\n        args,\n        opts\n      });\n      method = method || opts.method;\n      assert(method);\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      this._deltaTs = getHiResTimestamp();\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      message = decorateMessage(this.id, opts.message, opts);\n      return method.bind(console, message, ...opts.args);\n    }\n\n    return noop;\n  }\n\n}\nLog.VERSION = VERSION;\n\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n  return resolvedLevel;\n}\n\nexport function normalizeArguments(opts) {\n  const {\n    logLevel,\n    message\n  } = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  const args = opts.args ? Array.from(opts.args) : [];\n\n  while (args.length && args.shift() !== message) {}\n\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n\n  const messageType = typeof opts.message;\n  assert(messageType === 'string' || messageType === 'object');\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n\n  return message;\n}\n\nfunction logImageInNode({\n  image,\n  message = '',\n  scale = 1\n}) {\n  let asciify = null;\n\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {}\n\n  if (asciify) {\n    return () => asciify(image, {\n      fit: 'box',\n      width: \"\".concat(Math.round(80 * scale), \"%\")\n    }).then(data => console.log(data));\n  }\n\n  return noop;\n}\n\nfunction logImageInBrowser({\n  image,\n  message = '',\n  scale = 1\n}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n\n    img.src = image;\n    return noop;\n  }\n\n  const element = image.nodeName || '';\n\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n\n    img.onload = () => console.log(...formatImage(img, message, scale));\n\n    img.src = image.toDataURL();\n    return noop;\n  }\n\n  return noop;\n}\n//# sourceMappingURL=log.js.map","import { window } from './globals';\nimport isBrowser from './is-browser';\nimport isElectron from './is-electron';\nexport function isMobile() {\n  return typeof window.orientation !== 'undefined';\n}\nexport default function getBrowser(mockUserAgent) {\n  if (!mockUserAgent && !isBrowser()) {\n    return 'Node';\n  }\n\n  if (isElectron(mockUserAgent)) {\n    return 'Electron';\n  }\n\n  const navigator_ = typeof navigator !== 'undefined' ? navigator : {};\n  const userAgent = mockUserAgent || navigator_.userAgent || '';\n\n  if (userAgent.indexOf('Edge') > -1) {\n    return 'Edge';\n  }\n\n  const isMSIE = userAgent.indexOf('MSIE ') !== -1;\n  const isTrident = userAgent.indexOf('Trident/') !== -1;\n\n  if (isMSIE || isTrident) {\n    return 'IE';\n  }\n\n  if (window.chrome) {\n    return 'Chrome';\n  }\n\n  if (window.safari) {\n    return 'Safari';\n  }\n\n  if (window.mozInnerScreenX) {\n    return 'Firefox';\n  }\n\n  return 'Unknown';\n}\n//# sourceMappingURL=get-browser.js.map","import './init';\nimport { default as Log } from './lib/log';\nexport { VERSION } from './utils/globals';\nexport { self, window, global, document, process, console } from './env/globals';\nexport { default as isBrowser, isBrowserMainThread } from './env/is-browser';\nexport { default as getBrowser, isMobile } from './env/get-browser';\nexport { default as isElectron } from './env/is-electron';\nexport { default as assert } from './utils/assert';\nexport { default as Log } from './lib/log';\nexport { COLOR } from './utils/color';\nexport default new Log({\n  id: 'probe.gl'\n});\nexport { addColor } from './utils/color';\nexport { leftPad, rightPad } from './utils/formatters';\nexport { autobind } from './utils/autobind';\nexport { default as LocalStorage } from './utils/local-storage';\nexport { default as getHiResTimestamp } from './utils/hi-res-timestamp';\nexport { Stats, Stat } from '@probe.gl/stats';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}