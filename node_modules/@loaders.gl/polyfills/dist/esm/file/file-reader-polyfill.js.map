{"version":3,"sources":["../../../src/file/file-reader-polyfill.js"],"names":["atob","FileReaderPolyfill","onload","blob","arrayBuffer","target","result","Error","text","dataUrl"],"mappings":";;;;AAAA,SAAQA,IAAR,QAAmB,4BAAnB;AAEA,WAAaC,kBAAb;AACE,gCAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,IAAd;AACD;;AAHH;AAAA;AAAA,4BAKU,CAAE;AALZ;AAAA;AAAA;AAAA,2FAO0BC,IAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQ8BA,IAAI,CAACC,WAAL,EAR9B;;AAAA;AAQUA,gBAAAA,WARV;;AASI,oBAAI,KAAKF,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEF;AAAT;AAAT,mBAAZ;AACD;;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uCAcqBD,IAdrB,EAc2B;AACvB,YAAMI,KAAK,CAAC,iBAAD,CAAX;AACD;AAhBH;AAAA;AAAA;AAAA,wFAkBsBJ,IAlBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBuBA,IAAI,CAACK,IAAL,EAnBvB;;AAAA;AAmBUA,gBAAAA,IAnBV;AAoBUC,gBAAAA,OApBV,4BAoBsCT,IAAI,CAACQ,IAAD,CApB1C;;AAqBI,oBAAI,KAAKN,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEG;AAAT;AAAT,mBAAZ;AACD;;AAvBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFA0BmBN,IA1BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA2BuBA,IAAI,CAACK,IAAL,EA3BvB;;AAAA;AA2BUA,gBAAAA,IA3BV;;AA4BI,oBAAI,KAAKN,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEE;AAAT;AAAT,mBAAZ;AACD;;AA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["import {atob} from '../text-encoding/btoa.node';\n\nexport class FileReaderPolyfill {\n  constructor() {\n    this.onload = null;\n  }\n\n  abort() {}\n\n  async readAsArrayBuffer(blob) {\n    const arrayBuffer = await blob.arrayBuffer();\n    if (this.onload) {\n      this.onload({target: {result: arrayBuffer}});\n    }\n  }\n\n  readAsBinaryString(blob) {\n    throw Error('Not implemented');\n  }\n\n  async readAsDataURL(blob) {\n    const text = await blob.text();\n    const dataUrl = `data://;base64,${atob(text)}`;\n    if (this.onload) {\n      this.onload({target: {result: dataUrl}});\n    }\n  }\n\n  async readAsText(blob) {\n    const text = await blob.text();\n    if (this.onload) {\n      this.onload({target: {result: text}});\n    }\n  }\n}\n"],"file":"file-reader-polyfill.js"}