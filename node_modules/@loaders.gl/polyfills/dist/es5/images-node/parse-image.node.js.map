{"version":3,"sources":["../../../src/images-node/parse-image.node.js"],"names":["parseImageNode","arrayBuffer","mimeType","options","getPixelsAsync","util","promisify","getPixels","buffer","Buffer","from","ndarray","shape","layers","length","shift","data","width","height","components"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;SAEsBA,c;;;;;oFAAf,iBAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,oCAAOD,QAAP,EAAiB,mDAAjB;AAIME,YAAAA,cALD,GAKkBC,iBAAKC,SAAL,CAAeC,qBAAf,CALlB;AAOCC,YAAAA,MAPD,GAOUP,WAAW,YAAYQ,MAAvB,GAAgCR,WAAhC,GAA8CQ,MAAM,CAACC,IAAP,CAAYT,WAAZ,CAPxD;AAAA;AAAA,mBASiBG,cAAc,CAACI,MAAD,EAASN,QAAT,CAT/B;;AAAA;AASCS,YAAAA,OATD;AAWCC,YAAAA,KAXD,uCAWaD,OAAO,CAACC,KAXrB;AAYCC,YAAAA,MAZD,GAYUF,OAAO,CAACC,KAAR,CAAcE,MAAd,KAAyB,CAAzB,GAA6BH,OAAO,CAACC,KAAR,CAAcG,KAAd,EAA7B,GAAqD,CAZ/D;AAAA,6CAeE;AACLH,cAAAA,KAAK,EAALA,KADK;AAELI,cAAAA,IAAI,EAAEL,OAAO,CAACK,IAFT;AAGLC,cAAAA,KAAK,EAAEN,OAAO,CAACC,KAAR,CAAc,CAAd,CAHF;AAILM,cAAAA,MAAM,EAAEP,OAAO,CAACC,KAAR,CAAc,CAAd,CAJH;AAKLO,cAAAA,UAAU,EAAER,OAAO,CAACC,KAAR,CAAc,CAAd,CALP;AAMLC,cAAAA,MAAM,EAANA;AANK,aAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/* global Buffer */\nimport getPixels from 'get-pixels';\nimport util from 'util';\nimport assert from 'assert';\n\nexport async function parseImageNode(arrayBuffer, mimeType, options) {\n  assert(mimeType, 'MIMEType is required to parse image under Node.js');\n\n  // TODO - check if getPixels callback is asynchronous if provided with buffer input\n  // if not, parseImage can be a sync function\n  const getPixelsAsync = util.promisify(getPixels);\n\n  const buffer = arrayBuffer instanceof Buffer ? arrayBuffer : Buffer.from(arrayBuffer);\n\n  const ndarray = await getPixelsAsync(buffer, mimeType);\n\n  const shape = [...ndarray.shape];\n  const layers = ndarray.shape.length === 4 ? ndarray.shape.shift() : 1;\n\n  // extract width/height etc\n  return {\n    shape,\n    data: ndarray.data,\n    width: ndarray.shape[0],\n    height: ndarray.shape[1],\n    components: ndarray.shape[2],\n    layers\n  };\n}\n"],"file":"parse-image.node.js"}