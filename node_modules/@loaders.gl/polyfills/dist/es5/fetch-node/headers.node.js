"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var Headers = function () {
  function Headers(headers) {
    var _this = this;

    (0, _classCallCheck2["default"])(this, Headers);
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        return _this.append(name, value);
      });
    } else if (Array.isArray(headers)) {
      headers.forEach(function (header) {
        return _this.append(header[0], header[1]);
      });
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        return _this.append(name, headers[name]);
      });
    }
  }

  (0, _createClass2["default"])(Headers, [{
    key: "append",
    value: function append(name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? "".concat(oldValue, ", ").concat(value) : value;
    }
  }, {
    key: "delete",
    value: function _delete(name) {
      delete this.map[normalizeName(name)];
    }
  }, {
    key: "get",
    value: function get(name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    }
  }, {
    key: "has",
    value: function has(name) {
      return this.map.hasOwnProperty(normalizeName(name));
    }
  }, {
    key: "set",
    value: function set(name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    }
  }, {
    key: "forEach",
    value: function forEach(visitor) {
      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          if (thisArg) {
            visitor.call(thisArg, this.map[name], name, this);
          } else {
            visitor(this.map[name], name, this);
          }
        }
      }
    }
  }, {
    key: "keys",
    value: function keys() {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    }
  }, {
    key: "values",
    value: function values() {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    }
  }, {
    key: "entries",
    value: function entries() {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    }
  }, {
    key: Symbol.iterator,
    value: _regenerator["default"].mark(function value() {
      return _regenerator["default"].wrap(function value$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.delegateYield(this.entries(), "t0", 1);

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, value, this);
    })
  }]);
  return Headers;
}();

exports["default"] = Headers;

function normalizeName(name) {
  if (typeof name !== 'string') {
    name = String(name);
  }

  if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name) || name === '') {
    throw new TypeError('Invalid character in header field name');
  }

  return name.toLowerCase();
}

function normalizeValue(value) {
  if (typeof value !== 'string') {
    value = String(value);
  }

  return value;
}

function iteratorFor(items) {
  var iterator = {
    next: function next() {
      var value = items.shift();
      return {
        done: value === undefined,
        value: value
      };
    }
  };

  iterator[Symbol.iterator] = function () {
    return iterator;
  };

  return iterator;
}
//# sourceMappingURL=headers.node.js.map