"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilePolyfill = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _blobPolyfill = require("./blob-polyfill");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var FilePolyfill = function (_BlobPolyfill) {
  (0, _inherits2["default"])(FilePolyfill, _BlobPolyfill);

  var _super = _createSuper(FilePolyfill);

  function FilePolyfill(init) {
    var _this;

    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : panic(new TypeError('File constructor requires name argument'));
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    (0, _classCallCheck2["default"])(this, FilePolyfill);
    _this = _super.call(this, init, options);
    _this._name = String(name).replace(/\//g, ':');
    _this._lastModified = options.lastModified || Date.now();
    return _this;
  }

  (0, _createClass2["default"])(FilePolyfill, [{
    key: "name",
    get: function get() {
      return this._name;
    }
  }, {
    key: "webkitRelativePath",
    get: function get() {
      return '';
    }
  }, {
    key: "lastModified",
    get: function get() {
      return this._lastModified;
    }
  }, {
    key: Symbol.toStringTag,
    get: function get() {
      return 'File';
    }
  }]);
  return FilePolyfill;
}(_blobPolyfill.BlobPolyfill);

exports.FilePolyfill = FilePolyfill;

function panic(error) {
  throw error;
}
//# sourceMappingURL=file-polyfill.js.map