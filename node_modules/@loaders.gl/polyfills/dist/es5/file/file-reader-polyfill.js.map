{"version":3,"sources":["../../../src/file/file-reader-polyfill.js"],"names":["FileReaderPolyfill","onload","blob","arrayBuffer","target","result","Error","text","dataUrl"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEaA,kB;AACX,gCAAc;AAAA;AACZ,SAAKC,MAAL,GAAc,IAAd;AACD;;;;4BAEO,CAAE;;;;gHAEcC,I;;;;;;;uBACIA,IAAI,CAACC,WAAL,E;;;AAApBA,gBAAAA,W;;AACN,oBAAI,KAAKF,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEF;AAAT;AAAT,mBAAZ;AACD;;;;;;;;;;;;;;;;;;uCAGgBD,I,EAAM;AACvB,YAAMI,KAAK,CAAC,iBAAD,CAAX;AACD;;;;6GAEmBJ,I;;;;;;;uBACCA,IAAI,CAACK,IAAL,E;;;AAAbA,gBAAAA,I;AACAC,gBAAAA,O,4BAA4B,gBAAKD,IAAL,C;;AAClC,oBAAI,KAAKN,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEG;AAAT;AAAT,mBAAZ;AACD;;;;;;;;;;;;;;;;;;;0GAGcN,I;;;;;;;uBACIA,IAAI,CAACK,IAAL,E;;;AAAbA,gBAAAA,I;;AACN,oBAAI,KAAKN,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAY;AAACG,oBAAAA,MAAM,EAAE;AAACC,sBAAAA,MAAM,EAAEE;AAAT;AAAT,mBAAZ;AACD","sourcesContent":["import {atob} from '../text-encoding/btoa.node';\n\nexport class FileReaderPolyfill {\n  constructor() {\n    this.onload = null;\n  }\n\n  abort() {}\n\n  async readAsArrayBuffer(blob) {\n    const arrayBuffer = await blob.arrayBuffer();\n    if (this.onload) {\n      this.onload({target: {result: arrayBuffer}});\n    }\n  }\n\n  readAsBinaryString(blob) {\n    throw Error('Not implemented');\n  }\n\n  async readAsDataURL(blob) {\n    const text = await blob.text();\n    const dataUrl = `data://;base64,${atob(text)}`;\n    if (this.onload) {\n      this.onload({target: {result: dataUrl}});\n    }\n  }\n\n  async readAsText(blob) {\n    const text = await blob.text();\n    if (this.onload) {\n      this.onload({target: {result: text}});\n    }\n  }\n}\n"],"file":"file-reader-polyfill.js"}