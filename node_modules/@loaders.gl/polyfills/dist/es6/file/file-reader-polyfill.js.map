{"version":3,"sources":["../../../src/file/file-reader-polyfill.js"],"names":["atob","FileReaderPolyfill","constructor","onload","abort","readAsArrayBuffer","blob","arrayBuffer","target","result","readAsBinaryString","Error","readAsDataURL","text","dataUrl","readAsText"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,4BAAnB;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAC9BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,MAAL,GAAc,IAAd;AACD;;AAEDC,EAAAA,KAAK,GAAG,CAAE;;AAEV,QAAMC,iBAAN,CAAwBC,IAAxB,EAA8B;AAC5B,UAAMC,WAAW,GAAG,MAAMD,IAAI,CAACC,WAAL,EAA1B;;AACA,QAAI,KAAKJ,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAY;AAACK,QAAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAEF;AAAT;AAAT,OAAZ;AACD;AACF;;AAEDG,EAAAA,kBAAkB,CAACJ,IAAD,EAAO;AACvB,UAAMK,KAAK,CAAC,iBAAD,CAAX;AACD;;AAED,QAAMC,aAAN,CAAoBN,IAApB,EAA0B;AACxB,UAAMO,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAL,EAAnB;AACA,UAAMC,OAAO,4BAAqBd,IAAI,CAACa,IAAD,CAAzB,CAAb;;AACA,QAAI,KAAKV,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAY;AAACK,QAAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAEK;AAAT;AAAT,OAAZ;AACD;AACF;;AAED,QAAMC,UAAN,CAAiBT,IAAjB,EAAuB;AACrB,UAAMO,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAL,EAAnB;;AACA,QAAI,KAAKV,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAY;AAACK,QAAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAEI;AAAT;AAAT,OAAZ;AACD;AACF;;AA/B6B","sourcesContent":["import {atob} from '../text-encoding/btoa.node';\n\nexport class FileReaderPolyfill {\n  constructor() {\n    this.onload = null;\n  }\n\n  abort() {}\n\n  async readAsArrayBuffer(blob) {\n    const arrayBuffer = await blob.arrayBuffer();\n    if (this.onload) {\n      this.onload({target: {result: arrayBuffer}});\n    }\n  }\n\n  readAsBinaryString(blob) {\n    throw Error('Not implemented');\n  }\n\n  async readAsDataURL(blob) {\n    const text = await blob.text();\n    const dataUrl = `data://;base64,${atob(text)}`;\n    if (this.onload) {\n      this.onload({target: {result: dataUrl}});\n    }\n  }\n\n  async readAsText(blob) {\n    const text = await blob.text();\n    if (this.onload) {\n      this.onload({target: {result: text}});\n    }\n  }\n}\n"],"file":"file-reader-polyfill.js"}